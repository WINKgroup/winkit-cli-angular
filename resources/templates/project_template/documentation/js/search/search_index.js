var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.56,1,3.02]],["body/guards/AdminGuard.html",[0,3.221,1,4.803,2,0.15,3,0.171,4,0.129,5,4.885,6,0.487,7,0.839,8,6.161,9,1.207,10,4.231,11,3.492,12,0.723,13,4.885,14,0.879,15,0.016,16,0.615,17,0.547,18,0.799,19,5.348,20,6.355,21,6.161,22,6.355,23,4.885,24,5.348,25,4.396,26,4.821,27,4.396,28,0.833,29,5.065,30,2.87,31,2.217,32,0.447,33,1.864,34,0.515,35,2.276,36,2.071,37,1.536,38,1.894,39,4.231,40,0.171,41,0.108,42,1.256,43,3.007,44,1.864,45,4.231,46,4.885,47,4.231,48,1.536,49,4.231,50,4.231,51,4.231,52,1.6,53,0.012,54,0.012]],["title/components/AppComponent.html",[55,0.478,56,1.126]],["body/components/AppComponent.html",[2,0.084,3,0.096,4,0.072,6,0.272,7,0.56,9,0.675,11,3.106,12,0.838,14,0.707,15,0.016,16,0.591,17,0.616,18,0.643,28,0.581,31,1.626,32,0.373,34,0.288,35,1.273,40,0.096,41,0.06,42,1.06,43,1.682,44,2.012,53,0.008,54,0.008,55,0.731,56,1.603,57,0.972,58,0.972,59,0.972,60,2.125,61,2.313,62,0.792,63,2.617,64,2.49,65,4.122,66,1.67,67,4.122,68,1.407,69,4.122,70,0.866,71,3.52,72,5.528,73,5.528,74,5.184,75,5.528,76,2.204,77,5.528,78,6.951,79,2.343,80,2.576,81,4.122,82,4.122,83,1.107,84,2.418,85,4.122,86,2.732,87,1.329,88,4.122,89,4.788,90,5.528,91,5.138,92,5.933,93,6.237,94,2.732,95,2.869,96,4.788,97,3.055,98,1.921,99,4.122,100,0.781,101,2.732,102,3.861,103,3.206,104,4.122,105,3.936,106,2.732,107,3.57,108,2.732,109,2.732,110,1.422,111,1.001,112,4.964,113,2.732,114,3.57,115,4.122,116,2.732,117,3.206,118,2.732,119,2.732,120,2.708,121,2.732,122,1.383,123,0.932,124,4.122,125,1.921,126,1.41,127,1.579,128,1.107,129,0.932,130,2.935,131,1.921,132,1.489,133,2.732,134,2.366,135,2.366,136,2.732,137,2.125,138,2.732,139,2.732,140,0.961,141,1.273,142,2.732,143,4.964,144,2.732,145,2.732,146,2.935,147,3.57,148,2.732,149,1.801,150,2.732,151,2.125,152,1.67,153,1.273,154,2.366,155,4.122,156,1.921,157,2.732,158,1.059,159,2.366,160,2.732,161,2.732,162,2.366,163,2.732,164,2.366,165,2.366,166,2.732,167,2.366,168,2.732,169,2.732,170,2.732,171,2.732,172,2.732,173,2.732,174,2.732,175,2.732,176,2.732,177,2.732,178,2.732,179,2.732,180,4.122,181,4.122,182,2.732,183,2.732,184,0.675,185,1.579,186,2.732,187,2.732,188,2.732,189,1.338,190,2.732,191,2.732,192,4.122,193,0.675,194,1.407,195,1.296,196,1.467,197,1.887,198,0.972,199,0.972,200,0.825,201,1.467,202,0.825,203,0.825,204,0.972,205,0.792,206,0.972,207,0.825,208,0.972,209,0.825,210,1.06,211,0.972,212,0.792,213,0.972,214,0.825,215,0.972,216,0.825,217,1.467,218,0.825,219,0.972,220,0.825,221,0.825,222,0.859,223,1.467,224,0.825,225,0.972,226,0.825,227,0.598,228,0.825,229,0.972,230,0.825,231,0.972,232,0.825,233,0.972,234,0.859,235,0.972,236,0.859,237,0.761,238,0.972]],["title/modules/AppModule.html",[239,1.126,240,2.56]],["body/modules/AppModule.html",[2,0.126,3,0.144,4,0.109,15,0.016,28,0.731,32,0.5,34,0.434,35,1.921,40,0.233,41,0.122,42,1.06,48,1.296,53,0.011,54,0.011,56,2.24,74,4.301,79,2.344,100,0.648,105,3.937,110,1.06,111,0.832,122,1.149,123,1.407,125,2.907,126,2.128,127,2.383,128,2.528,131,1.921,141,1.921,184,1.019,193,1.019,227,0.903,239,1.933,240,5.124,241,1.921,242,2.771,243,3.106,244,3.571,245,3.571,246,3.571,247,3.571,248,4.405,249,4.405,250,4.405,251,2.853,252,2.02,253,2.936,254,4.789,255,2.248,256,1.599,257,2.708,258,3.571,259,3.571,260,3.571,261,2.538,262,3.571,263,3.571,264,3.571,265,4.789,266,3.571,267,3.571,268,3.207,269,4.789,270,3.571,271,2.719,272,4.789,273,5.773,274,4.789,275,3.571,276,3.207,277,4.301,278,5.403,279,4.301,280,3.207,281,4.789,282,3.207,283,3.207,284,3.207,285,3.571,286,1.748,287,3.571,288,3.937,289,3.571,290,3.571,291,3.571,292,3.571,293,3.571,294,2.936,295,3.571,296,3.571,297,2.936,298,2.936,299,2.719,300,4.789,301,3.571]],["title/guards/AuthGuard.html",[0,2.56,302,3.02]],["body/guards/AuthGuard.html",[0,3.233,2,0.15,3,0.172,4,0.129,6,0.489,7,0.841,8,6.17,9,1.211,10,4.246,11,3.495,12,0.725,14,0.881,15,0.016,16,0.617,17,0.548,18,0.801,19,5.36,20,6.362,21,6.17,22,6.362,24,5.36,25,4.406,27,4.406,28,0.794,29,5.072,30,2.875,31,2.221,32,0.448,33,1.869,34,0.516,35,2.284,36,2.078,38,1.901,40,0.172,41,0.108,42,1.261,43,3.018,44,1.869,45,4.246,48,1.541,49,4.246,50,5.874,53,0.012,54,0.012,140,1.198,302,4.814,303,4.903,304,4.903,305,4.903,306,3.814,307,4.903,308,4.246,309,4.903,310,4.903,311,4.903]],["title/injectables/AuthenticationService.html",[33,1.172,312,1.505]],["body/injectables/AuthenticationService.html",[2,0.113,3,0.129,4,0.097,6,0.366,7,0.694,9,0.908,12,0.847,14,0.951,15,0.016,16,0.665,17,0.563,18,0.865,28,0.888,30,2.93,32,0.455,33,1.774,34,0.387,36,1.558,37,1.155,38,1.425,40,0.129,41,0.113,42,0.945,53,0.01,54,0.01,70,1.075,71,3.033,83,1.489,84,2.68,87,0.984,100,0.905,110,0.945,111,0.742,122,1.024,123,1.254,129,2.42,140,1.338,153,3.304,184,1.452,312,1.982,313,2.859,314,5.502,315,4.523,316,2.491,317,4.189,318,4.427,319,4.427,320,4.427,321,4.427,322,5.112,323,3.675,324,3.675,325,3.976,326,3.675,327,3.07,328,3.976,329,4.523,330,3.672,331,3.675,332,3.213,333,3.976,334,3.675,335,3.976,336,3.675,337,2.955,338,2.004,339,3.37,340,3.183,341,3.37,342,2.955,343,2.617,344,3.146,345,3.183,346,1.254,347,1.632,348,1.712,349,2.61,350,2.859,351,3.183,352,2.859,353,2.859,354,2.859,355,3.183,356,2.617,357,3.976,358,3.183,359,3.183,360,2.859,361,2.617,362,2.859,363,2.859,364,2.617,365,2.423,366,3.183,367,3.639,368,3.875,369,3.183,370,3.183,371,3.183,372,2.262,373,2.617,374,2.617,375,2.617,376,3.183,377,3.183,378,3.183]],["title/models/AuthenticationServiceModel.html",[339,2.56,379,1.271]],["body/models/AuthenticationServiceModel.html",[2,0.15,3,0.172,4,0.129,6,0.489,7,0.841,12,0.86,14,1.015,15,0.016,16,0.71,17,0.601,18,0.922,28,0.86,30,3.266,32,0.389,40,0.172,53,0.012,54,0.012,100,0.938,315,5.072,318,5.36,319,5.36,320,5.36,321,5.36,325,4.814,327,3.012,328,4.814,329,4.829,330,3.92,332,3.229,333,4.814,335,4.814,339,4.081,346,2.112,379,2.027,380,4.246,381,4.385,382,4.903,383,4.903,384,4.903,385,4.903,386,4.903,387,2.673,388,3.491]],["title/components/BaseComponent.html",[55,0.478,200,1.172]],["body/components/BaseComponent.html",[2,0.078,3,0.09,4,0.067,6,0.255,7,0.533,9,0.633,11,3.044,12,0.873,14,0.821,15,0.016,16,0.631,17,0.625,18,0.747,28,0.675,32,0.444,34,0.27,35,1.194,37,1.991,38,0.993,40,0.09,41,0.057,42,1.009,44,1.615,52,1.285,53,0.008,54,0.008,55,0.78,56,0.743,57,0.912,58,0.912,59,0.912,62,0.743,63,2.595,64,2.467,66,1.59,68,1.34,70,0.825,83,1.038,84,2.359,87,1.431,97,1.577,100,0.814,110,1.722,111,1.351,120,3.2,122,1.764,123,0.874,125,1.829,126,1.322,134,2.219,135,2.219,137,1.993,140,0.76,141,1.829,152,2.167,158,1.522,193,0.633,194,1.825,195,1.681,196,1.397,197,1.825,198,0.912,199,0.912,200,1.615,201,1.397,202,0.773,203,0.773,204,0.912,205,0.743,206,0.912,207,0.773,208,0.912,209,0.773,210,1.009,211,0.912,212,0.743,213,0.912,214,0.773,215,0.912,216,0.773,217,1.397,218,0.773,219,0.912,220,0.773,221,0.773,222,0.805,223,1.397,224,0.773,225,0.912,226,0.773,227,0.561,228,0.773,229,0.912,230,0.773,231,0.912,232,1.441,233,0.912,234,0.805,235,0.912,236,0.805,237,0.714,238,0.912,255,1.397,256,1.85,286,1.664,312,2.073,316,2.99,347,1.138,389,5.829,390,2.219,391,2.794,392,3.925,393,3.925,394,3.562,395,2.76,396,2.812,397,2.769,398,2.916,399,2.888,400,2.916,401,2.687,402,2.351,403,2.14,404,2.14,405,2.14,406,2.14,407,3.925,408,2.14,409,2.562,410,2.14,411,3.171,412,1.922,413,2.14,414,2.562,415,1.922,416,1.829,417,2.14,418,1.829,419,1.922,420,2.14,421,2.562,422,1.59,423,2.025,424,2.14,425,2.916,426,2.62,427,2.562,428,2.14,429,2.025,430,2.14,431,1.397,432,2.562,433,2.562,434,2.562,435,2.562,436,2.562,437,2.562,438,2.562,439,2.562,440,2.562,441,2.76,442,2.562,443,2.562,444,2.562,445,2.562,446,1.689,447,1.481,448,1.577,449,1.577,450,1.824,451,2.562,452,2.219,453,1.993,454,2.562,455,2.562,456,2.562,457,2.562,458,2.562,459,2.562,460,2.562,461,2.562,462,2.562,463,2.562,464,2.219,465,3.925,466,2.562,467,1.993,468,2.562,469,2.562,470,2.562,471,1.824,472,1.824,473,3.925,474,2.219,475,2.219,476,2.562,477,2.562]],["title/classes/BaseError.html",[41,0.086,478,2.764]],["body/classes/BaseError.html",[2,0.175,3,0.2,4,0.151,9,1.794,12,0.67,15,0.015,40,0.238,41,0.161,53,0.013,54,0.013,100,0.797,132,3.12,184,1.414,286,2.426,330,3.933,346,1.953,411,3.022,478,5.17,479,4.074,480,2.318,481,3.307,482,4.074,483,5.722,484,4.955,485,4.955,486,4.955,487,3.522,488,4.074,489,4.844,490,4.955,491,2.218,492,4.955]],["title/components/BasePageComponent.html",[55,0.478,202,1.172]],["body/components/BasePageComponent.html",[2,0.08,3,0.092,4,0.069,6,0.26,7,0.542,9,0.646,11,2.711,12,0.893,14,0.829,15,0.016,16,0.636,17,0.648,18,0.753,25,2.838,28,0.77,30,2.048,32,0.386,34,0.275,36,1.108,37,1.699,38,1.014,40,0.092,41,0.058,42,1.243,48,1.519,52,0.856,53,0.009,54,0.008,55,0.756,56,0.758,57,0.93,58,0.93,59,0.93,61,2.251,62,0.758,63,2.602,64,2.475,66,1.615,68,1.361,70,0.838,80,2.518,83,1.059,84,2.377,87,1.558,95,2.304,100,0.718,110,1.767,111,1.327,120,2.85,122,1.621,123,0.892,129,0.892,140,1.234,141,1.218,151,2.033,152,1.615,158,1.014,184,0.646,193,0.646,194,1.649,195,1.519,196,1.419,197,1.845,198,0.93,199,0.93,200,2.292,201,1.419,202,1.632,203,0.789,204,0.93,205,0.758,206,0.93,207,0.789,208,0.93,209,0.789,210,1.025,211,0.93,212,0.758,213,0.93,214,0.789,215,0.93,216,0.789,217,1.419,218,0.789,219,0.93,220,0.789,221,0.789,222,0.822,223,1.419,224,0.789,225,0.93,226,0.789,227,0.572,228,0.789,229,0.93,230,0.789,231,0.93,232,1.204,233,0.93,234,0.822,235,0.93,236,0.822,237,0.728,238,0.93,256,1.014,286,1.108,299,1.724,312,1.546,316,2.962,337,2.304,338,1.425,346,1.361,347,1.161,348,1.218,389,4.77,391,4.541,394,3.173,395,2.493,396,2.4,397,2.467,398,2.634,399,2.664,400,2.634,401,2.251,402,2.007,403,2.173,404,2.173,405,2.173,406,2.173,408,1.425,410,1.425,411,2.584,412,1.28,413,1.425,415,1.28,416,1.218,417,1.425,418,1.218,419,1.28,420,1.425,422,1.958,423,1.349,424,1.425,425,2.173,426,1.953,428,1.425,429,1.349,430,1.425,431,1.425,441,2.057,481,2.304,493,4.043,494,2.264,495,3.986,496,3.986,497,3.848,498,3.837,499,3.44,500,4.204,501,3.986,502,2.614,503,3.101,504,3.101,505,2.304,506,2.838,507,2.838,508,3.101,509,2.838,510,3.101,511,2.614,512,4.292,513,1.724,514,1.724,515,1.724,516,1.724,517,2.614,518,1.724,519,1.724,520,1.724,521,1.724,522,1.724,523,1.724,524,1.724,525,1.724,526,1.724,527,1.724,528,1.724,529,1.724,530,1.724,531,1.609,532,3.453,533,2.033,534,3.453,535,1.724,536,1.861,537,2.033,538,2.033,539,2.614,540,2.614,541,2.264,542,2.264,543,2.264,544,1.861,545,1.861,546,2.264,547,2.264,548,2.264,549,2.264,550,2.264,551,2.264,552,2.614,553,2.614]],["title/injectables/BaseService.html",[33,1.172,342,2.244]],["body/injectables/BaseService.html",[2,0.075,3,0.085,4,0.064,6,0.243,7,0.513,9,0.602,12,0.876,14,0.915,15,0.016,16,0.64,17,0.669,18,0.832,28,0.909,30,2.994,31,1.705,32,0.391,33,1.396,34,0.257,36,1.032,38,0.944,40,0.085,41,0.054,42,0.626,44,1.877,48,1.772,52,0.798,53,0.007,54,0.007,55,0.465,70,0.794,83,0.987,84,2.311,87,1.01,98,2.154,100,0.909,110,1.189,111,0.933,122,0.678,123,0.831,127,2.182,129,1.923,152,1.873,153,2.898,156,2.626,184,0.933,195,0.766,227,1.14,237,1.052,286,1.6,316,2.527,317,3.434,337,2.182,341,2.489,342,2.182,347,1.082,349,2.313,361,1.734,362,4.051,363,3.596,364,4.244,372,3.205,373,4.427,374,4.244,381,2.324,387,1.328,411,2.313,416,1.759,487,3.205,488,1.734,491,2.614,497,3.707,554,2.109,555,4.51,556,3.956,557,4.51,558,5.207,559,4.999,560,5.244,561,3.27,562,5.207,563,3.27,564,3.27,565,4.004,566,5.207,567,4.51,568,3.27,569,3.27,570,3.27,571,3.775,572,3.27,573,2.435,574,2.426,575,2.435,576,2.109,577,2.435,578,3.27,579,2.435,580,2.435,581,1.408,582,3.27,583,2.687,584,2.435,585,2.489,586,4.004,587,3.27,588,2.688,589,2.435,590,3.956,591,2.435,592,2.937,593,3.27,594,3.27,595,2.435,596,2.324,597,3.27,598,2.435,599,3.27,600,3.27,601,2.435,602,2.435,603,2.435,604,2.435,605,2.435,606,2.435,607,2.435,608,2.435,609,2.435,610,2.435,611,2.435,612,2.058,613,1.894,614,2.109,615,2.435,616,3.775,617,2.435,618,2.435,619,2.435,620,2.435,621,1.894,622,5.207,623,5.635,624,2.435,625,2.435,626,3.27,627,2.435,628,3.27,629,2.435,630,2.435,631,2.435,632,2.435,633,2.435,634,2.435,635,3.27,636,4.623,637,2.435,638,2.435,639,2.435,640,3.27,641,2.435,642,3.775,643,2.435,644,3.775,645,2.435,646,2.435,647,2.435,648,2.435,649,2.435,650,3.775,651,2.435]],["title/models/BaseServiceModel.html",[379,1.271,381,2.39]],["body/models/BaseServiceModel.html",[2,0.114,3,0.13,4,0.098,6,0.37,7,0.699,12,0.873,14,1.013,15,0.016,16,0.708,17,0.667,18,0.921,28,0.911,30,3.263,31,1.935,32,0.324,40,0.13,44,2.146,53,0.01,54,0.01,55,0.634,98,2.398,100,0.925,127,2.975,152,2.585,153,3.231,184,1.271,227,1.518,286,2.181,349,2.285,379,1.685,381,3.168,387,2.023,388,2.642,411,2.833,416,2.398,487,4.125,491,2.473,556,3.927,559,4.962,560,4.962,561,4.457,563,4.457,564,4.457,565,5.525,567,5.525,568,4.457,569,4.457,570,4.457,572,4.457,574,2.398,576,4.457,578,4.457,581,2.975,582,4.457,583,2.656,585,3.393,586,5.525,587,4.457,588,3.664,590,3.636,592,4.003,593,4.457,594,4.457,596,3.168,597,4.457,599,4.457,600,4.457,612,2.023,652,3.214,653,3.711,654,3.711,655,3.711,656,3.711,657,3.711,658,3.711,659,3.711,660,3.711,661,3.711,662,3.711]],["title/modules/ComponentsModule.html",[239,1.126,663,2.244]],["body/modules/ComponentsModule.html",[2,0.129,3,0.147,4,0.11,15,0.016,32,0.497,34,0.442,35,1.954,40,0.235,41,0.093,53,0.011,54,0.011,125,1.954,126,2.165,128,2.55,193,1.036,205,2.246,209,2.338,212,2.271,214,2.338,227,0.918,228,2.338,230,2.338,232,2.338,239,1.622,241,1.954,242,2.484,243,1.954,251,2.886,252,2.055,257,2.74,261,3.443,271,2.766,663,4.664,664,3.633,665,3.633,666,3.633,667,4.195,668,5.593,669,4.195,670,4.195,671,4.195,672,4.195,673,4.195,674,3.982,675,2.766,676,5.593,677,2.766,678,2.287,679,2.425,680,2.425,681,3.263,682,4.351,683,2.986,684,3.982,685,2.766,686,5.593,687,3.263,688,4.195,689,3.263,690,3.633,691,2.766,692,3.263,693,3.263]],["title/modules/ModulesModule.html",[239,1.126,694,2.39]],["body/modules/ModulesModule.html",[2,0.14,3,0.16,4,0.12,7,0.803,15,0.016,32,0.49,34,0.48,35,2.125,40,0.243,41,0.101,53,0.011,54,0.011,55,0.728,128,2.656,193,1.127,200,2.367,202,2.367,216,2.367,220,2.367,227,0.998,239,1.713,241,2.125,242,2.624,243,2.125,251,3.049,252,2.233,257,2.894,261,3.637,391,5.24,480,1.847,493,3.006,531,2.807,663,3.415,674,4.207,675,3.006,677,3.006,678,2.486,679,2.636,684,4.207,685,3.006,691,3.006,694,4.907,695,3.949,696,3.949,697,3.949,698,4.56,699,4.207,700,5.909,701,4.596,702,5.117,703,3.547,704,4.56,705,5.909,706,4.56,707,3.547]],["title/classes/CustomNotification.html",[41,0.086,447,2.244]],["body/classes/CustomNotification.html",[2,0.194,3,0.148,4,0.112,6,0.423,7,0.766,12,0.497,14,0.604,15,0.016,16,0.423,17,0.561,18,0.549,28,0.497,32,0.267,40,0.236,41,0.125,44,2.119,48,2.12,53,0.011,54,0.011,76,2.81,87,1.508,100,0.876,125,1.976,129,1.448,151,3.299,399,2.899,401,2.948,422,2.283,423,2.908,441,3.621,447,3.257,448,4.32,449,4.32,475,3.673,489,5.136,545,4.011,708,3.299,709,5.634,710,5.634,711,7.018,712,6.742,713,4.241,714,7.018,715,5.634,716,3.673,717,5.48,718,4.241,719,5.48,720,4.241,721,5.48,722,4.241,723,5.634,724,4.241,725,3.299,726,5.244,727,3.02,728,4.241,729,6.742,730,6.742,731,6.742,732,5.244,733,4.241,734,4.241,735,4.241,736,4.241,737,4.241,738,3.895,739,4.88,740,4.88,741,3.673,742,3.673,743,3.673,744,4.88,745,4.383,746,4.88,747,4.88]],["title/components/DashboardComponent.html",[55,0.478,203,1.172]],["body/components/DashboardComponent.html",[2,0.087,3,0.099,4,0.075,6,0.282,7,0.576,9,0.7,11,2.808,12,0.906,14,0.858,15,0.016,16,0.653,17,0.646,18,0.78,28,0.768,30,1.201,32,0.266,34,0.298,37,1.77,40,0.099,41,0.063,42,1.305,48,0.891,52,0.928,53,0.008,54,0.008,55,0.779,56,0.822,57,1.008,58,1.008,59,1.008,61,2.364,62,0.822,63,2.629,64,2.503,66,1.716,68,1.446,70,0.891,79,1.796,80,3.054,83,1.148,84,2.452,87,1.693,95,1.638,100,0.741,110,1.772,111,1.36,120,2.952,122,1.568,140,1.09,141,1.32,152,1.716,158,1.098,193,0.7,194,1.732,195,1.595,196,1.508,197,1.922,198,1.008,199,1.008,200,0.855,201,1.508,202,2.349,203,1.7,204,1.008,205,0.822,206,1.008,207,0.855,208,1.008,209,0.855,210,1.089,211,1.008,212,0.822,213,1.008,214,0.855,215,1.008,216,0.855,217,1.508,218,0.855,219,1.008,220,0.855,221,0.855,222,0.891,223,1.508,224,0.855,225,1.008,226,0.855,227,0.62,228,0.855,229,1.008,230,0.855,231,1.008,232,1.279,233,1.008,234,0.891,235,1.008,236,0.891,237,0.789,238,1.008,256,1.098,286,1.201,312,1.642,316,2.974,337,1.638,346,1.446,347,1.258,348,1.32,394,3.286,395,2.618,396,2.5,397,2.555,398,2.766,399,2.671,400,2.766,401,2.364,402,2.09,403,2.31,404,2.31,405,2.31,406,2.31,408,1.545,410,1.545,411,2.676,412,1.388,413,1.545,415,1.388,416,1.32,417,1.545,418,1.32,419,1.388,420,1.545,422,1.716,423,1.462,424,1.545,425,2.31,426,2.075,428,1.545,429,1.462,430,1.545,431,1.545,441,2.186,471,3.016,481,1.638,493,1.868,497,3.612,498,3.345,499,3.016,500,3.946,503,2.204,504,2.204,505,1.638,506,2.017,507,2.017,508,2.204,509,2.017,510,2.204,512,4.436,703,2.204,748,2.454,749,3.669,750,4.236,751,4.236,752,2.833,753,2.833,754,2.454,755,3.669,756,2.454,757,2.454,758,2.454,759,2.454,760,2.454,761,2.454,762,2.454,763,2.454,764,2.454,765,2.454,766,2.454,767,2.454,768,2.454,769,2.454,770,2.454,771,2.454,772,2.454,773,2.454,774,2.454,775,1.744,776,2.833,777,2.454,778,4.236]],["title/models/FilterFieldElement.html",[379,1.271,779,2.56]],["body/models/FilterFieldElement.html",[2,0.084,3,0.096,4,0.072,6,0.273,9,0.677,15,0.016,16,0.622,17,0.667,18,0.809,28,0.484,31,2.045,32,0.313,34,0.289,37,0.862,38,1.062,40,0.194,41,0.061,42,0.705,44,0.827,52,1.353,53,0.008,54,0.008,55,0.682,61,1.925,63,0.935,64,0.897,68,0.935,70,0.868,71,1.414,76,1.217,80,1.277,100,0.887,111,1.003,129,2.277,131,1.925,146,2.941,153,1.277,156,2.317,184,1.368,185,2.388,189,1.342,205,0.795,237,1.858,379,1.813,399,1.602,402,1.017,419,1.342,422,2.243,426,2.712,446,1.807,480,1.11,482,2.941,491,1.928,536,2.941,544,2.941,556,3.657,574,2.317,581,1.584,583,2.132,585,1.807,612,3.019,701,3.214,725,2.132,726,2.132,732,2.132,738,2.543,779,3.651,780,1.951,781,3.578,782,4.446,783,3.578,784,4.795,785,4.795,786,4.795,787,4.795,788,6.025,789,4.621,790,4.23,791,3.578,792,4.795,793,3.578,794,2.941,795,3.578,796,2.874,797,4.307,798,3.868,799,4.621,800,3.279,801,2.566,802,3.578,803,3.279,804,1.951,805,2.373,806,2.373,807,2.373,808,2.373,809,2.373,810,4.795,811,2.373,812,2.373,813,2.373,814,2.373,815,3.061,816,1.807,817,2.132,818,2.373,819,3.54,820,2.373,821,2.373,822,2.373,823,2.252,824,2.373,825,2.373,826,4.307,827,2.373,828,1.951,829,2.373,830,4.307,831,2.252,832,2.373,833,2.373,834,3.578,835,2.373,836,2.373,837,3.578,838,3.578,839,3.578,840,3.578,841,3.578,842,1.807,843,2.373,844,2.373,845,5.408,846,2.373,847,3.578,848,3.214,849,2.373,850,2.373,851,2.373,852,2.373,853,4.307,854,3.578,855,2.373,856,2.373,857,2.373,858,2.373,859,2.373,860,3.578,861,2.373,862,2.373,863,4.795,864,2.373,865,2.373,866,2.373,867,2.373,868,1.951,869,3.214,870,1.494,871,1.584,872,2.132,873,3.214]],["title/components/FiltersComponent.html",[55,0.478,205,1.126]],["body/components/FiltersComponent.html",[2,0.063,3,0.072,4,0.054,6,0.205,7,0.449,9,1.023,12,0.832,14,0.293,15,0.016,16,0.604,17,0.623,18,0.266,28,0.732,31,1.553,32,0.26,34,0.217,37,0.647,38,0.797,40,0.166,41,0.045,42,0.85,44,0.621,52,1.356,53,0.006,54,0.006,55,0.683,56,0.596,57,0.732,58,0.732,59,0.732,61,1.929,62,0.596,63,2.512,64,2.381,68,1.128,70,0.694,71,2.137,76,1.839,79,3.226,80,2.209,87,1.484,98,1.539,100,0.795,110,1.426,111,1.261,129,2.068,140,0.639,146,1.464,153,1.539,156,2.419,158,1.281,184,1.023,185,1.91,189,1.007,193,0.508,194,1.128,195,1.039,196,1.176,197,1.618,198,0.732,199,0.732,200,0.621,201,1.176,202,0.621,203,0.621,204,0.732,205,1.375,206,0.732,207,0.621,208,0.732,209,0.621,210,0.85,211,0.732,212,0.596,213,0.732,214,0.621,215,0.732,216,0.621,217,1.176,218,0.621,219,0.732,220,0.621,221,0.621,222,0.647,223,1.176,224,0.621,225,0.732,226,0.621,227,0.45,228,0.621,229,0.732,230,0.621,231,0.732,232,0.621,233,0.732,234,0.647,235,0.732,236,0.647,237,1.623,238,0.732,379,1.082,399,1.281,402,0.764,419,1.618,422,1.339,426,1.007,446,1.356,480,0.833,482,1.464,491,1.605,536,1.464,544,2.352,556,4.331,574,1.929,581,1.189,583,1.705,585,2.178,596,2.034,612,2.585,701,1.6,725,1.6,726,1.6,732,1.6,738,2.034,779,3.126,780,1.464,781,1.781,782,4.149,783,1.781,784,1.781,785,1.781,786,1.781,787,1.781,788,4.802,789,4.313,790,2.948,791,1.781,792,3.586,793,1.781,794,1.464,795,1.781,796,1.91,797,4.497,798,3.221,799,3.688,800,3.424,801,2.68,802,3.586,803,3.424,804,2.352,805,2.861,806,2.861,807,2.861,808,5.247,809,4.106,810,5.047,811,3.586,812,3.586,813,3.586,814,3.586,815,3.196,816,2.178,817,2.57,818,2.861,819,3.375,820,2.861,821,1.781,822,1.781,823,1.801,824,1.781,825,1.781,826,3.586,827,4.106,828,3.375,829,4.106,830,3.586,831,1.801,832,4.106,833,1.781,834,2.861,835,1.781,836,1.781,837,2.861,838,2.861,839,2.861,840,2.861,841,2.861,842,2.178,843,1.781,844,1.781,845,4.802,846,1.781,847,2.861,848,2.57,849,1.781,850,1.781,851,1.781,852,1.781,853,3.586,854,2.861,855,1.781,856,1.781,857,1.781,858,1.781,859,1.781,860,2.861,861,1.781,862,1.781,863,4.106,864,2.861,865,2.861,866,4.106,867,1.781,868,1.464,869,2.57,870,1.121,871,1.189,872,3.221,873,2.57,874,3.304,875,2.057,876,2.057,877,2.057,878,2.057,879,2.057,880,2.057,881,2.057,882,2.057,883,2.057,884,2.057,885,2.057,886,2.057,887,2.057,888,2.057,889,2.057,890,3.304,891,3.304,892,3.304,893,6.415,894,3.304,895,4.741,896,3.304,897,3.304]],["title/classes/Globals.html",[41,0.086,396,1.724]],["body/classes/Globals.html",[2,0.165,3,0.188,4,0.142,6,0.536,7,0.89,12,0.768,15,0.016,28,0.899,40,0.188,41,0.145,53,0.013,54,0.013,76,3.408,100,0.899,327,2.91,396,2.91,801,3.798,898,4.656,899,7.359,900,7.359,901,5.376,902,6.554,903,5.376,904,6.554,905,6.554,906,4.666,907,5.376,908,5.376]],["title/injectables/GoogleAnalyticsEventsService.html",[33,1.172,397,1.646]],["body/injectables/GoogleAnalyticsEventsService.html",[2,0.154,3,0.176,4,0.132,6,0.5,7,0.853,12,0.587,14,0.714,15,0.016,16,0.5,17,0.444,18,0.649,28,0.587,32,0.315,33,2.069,34,0.528,40,0.176,41,0.111,44,2.168,53,0.012,54,0.012,87,1.342,97,3.863,100,0.931,110,1.289,111,1.011,128,2.031,129,1.711,130,3.569,131,2.336,132,3.736,158,2.656,162,4.342,184,1.551,397,2.661,491,2.784,831,3.915,842,4.138,909,4.882,910,3.899,911,6.276,912,6.276,913,7.544,914,7.544,915,7.544,916,5.013,917,7.181]],["title/modules/GuardsModule.html",[239,1.126,248,2.39]],["body/modules/GuardsModule.html",[1,5.721,2,0.181,3,0.207,4,0.155,15,0.016,32,0.477,34,0.621,40,0.243,41,0.13,53,0.013,54,0.013,128,2.39,239,1.711,243,2.749,248,4.264,257,3.393,302,5.721,918,5.899]],["title/pipes/KeysPipe.html",[919,1.724,920,2.56]],["body/pipes/KeysPipe.html",[2,0.172,3,0.196,4,0.148,7,0.761,12,0.656,14,0.798,15,0.016,16,0.669,17,0.496,18,0.725,28,0.787,32,0.352,34,0.59,40,0.196,41,0.124,42,1.441,53,0.013,54,0.013,62,1.624,100,0.787,111,1.356,612,4.16,919,2.984,920,4.43,921,4.852,922,3.694,923,5.819,924,5.819,925,5.602,926,4.783,927,4.852,928,5.602,929,5.602]],["title/injectables/LocalStoreService.html",[33,1.172,930,2.56]],["body/injectables/LocalStoreService.html",[2,0.121,3,0.138,4,0.104,6,0.393,7,0.729,9,1.506,12,0.827,14,0.868,15,0.016,16,0.607,17,0.58,18,0.789,28,0.909,31,2.313,32,0.337,33,1.84,34,0.415,40,0.138,41,0.087,48,1.917,52,2.143,53,0.01,54,0.01,87,1.055,100,0.909,122,1.098,123,1.345,129,2.233,153,3.426,156,3.049,189,1.93,195,1.686,237,1.098,349,3.136,365,4.513,412,3.205,583,2.034,590,3.752,828,4.659,831,2.149,930,3.536,931,6.258,932,3.413,933,5.363,934,6.544,935,5.363,936,5.363,937,3.941,938,3.941,939,5.363,940,3.941,941,3.941,942,5.363,943,3.941,944,5.363,945,7.455,946,3.941,947,5.667,948,5.363,949,3.941,950,3.941,951,3.941,952,5.928,953,3.941,954,3.941,955,6.096,956,3.941,957,3.941,958,3.941,959,3.941,960,3.413,961,5.363,962,3.941,963,3.065,964,5.363,965,5.363,966,3.941]],["title/components/LoginComponent.html",[55,0.478,207,1.172]],["body/components/LoginComponent.html",[2,0.078,3,0.089,4,0.067,6,0.255,7,0.532,9,0.631,11,2.683,12,0.894,14,0.901,15,0.016,16,0.667,17,0.645,18,0.819,28,0.741,31,1.56,32,0.336,34,0.269,37,1.679,40,0.089,41,0.056,42,1.225,48,0.803,51,2.212,52,1.56,53,0.008,54,0.008,55,0.749,56,0.741,57,0.909,58,0.909,59,0.909,61,2.219,62,0.741,63,2.594,64,2.466,66,1.587,68,1.337,70,0.823,79,3.058,80,2.488,83,1.035,84,2.356,87,1.693,100,0.712,110,1.678,111,1.317,120,2.821,122,1.935,123,0.872,140,1.432,141,1.19,152,1.587,158,0.99,184,0.631,193,0.631,194,1.626,195,1.497,196,1.394,197,1.823,198,0.909,199,0.909,200,2.285,201,1.394,202,0.771,203,0.771,204,0.909,205,0.741,206,0.909,207,1.612,208,0.909,209,0.771,210,1.007,211,0.909,212,0.741,213,0.909,214,0.771,215,0.909,216,0.771,217,1.394,218,0.771,219,0.909,220,0.771,221,0.771,222,0.803,223,1.394,224,0.771,225,0.909,226,0.771,227,0.559,228,0.771,229,0.909,230,0.771,231,0.909,232,1.182,233,0.909,234,0.803,235,0.909,236,0.803,237,0.712,238,0.909,256,0.99,286,1.083,312,1.518,316,2.767,327,2.372,332,2.576,338,1.393,346,1.337,347,1.134,348,1.19,394,3.14,395,2.458,396,2.372,397,2.441,398,2.597,399,2.594,400,2.597,401,2.219,402,1.983,403,2.135,404,2.135,405,2.135,406,2.135,408,1.393,410,1.393,411,2.557,412,1.251,413,1.393,415,1.251,416,1.19,417,1.393,418,1.19,419,1.251,420,1.393,422,1.035,423,1.318,424,1.393,425,2.135,426,1.918,428,1.393,429,1.318,430,1.393,431,1.393,441,2.021,512,4.275,513,1.684,514,1.684,515,1.684,516,1.684,518,1.684,519,1.684,520,1.684,521,1.684,522,1.684,523,1.684,524,1.684,525,1.684,526,1.684,527,1.684,528,1.684,529,1.684,530,1.684,531,1.572,536,1.819,699,2.788,775,1.572,967,2.212,968,4.154,969,3.916,970,3.916,971,3.916,972,2.788,973,3.916,974,2.554,975,3.916,976,2.554,977,3.392,978,4.988,979,2.554,980,2.554,981,2.554,982,2.212,983,2.554,984,2.212,985,2.554,986,3.391,987,2.554,988,2.554,989,2.554,990,2.554,991,2.554,992,3.046,993,4.154,994,3.046,995,3.916,996,3.916,997,2.554,998,2.582,999,3.916,1000,3.392,1001,2.411,1002,2.582,1003,2.554,1004,2.554]],["title/classes/LoginResponse.html",[41,0.086,367,2.764]],["body/classes/LoginResponse.html",[2,0.132,3,0.151,4,0.114,6,0.429,12,0.505,15,0.016,17,0.565,28,0.849,30,2.704,32,0.472,33,1.719,34,0.454,36,1.827,37,1.355,38,1.671,40,0.151,41,0.141,42,1.108,53,0.011,54,0.011,70,1.197,71,2.224,84,2.473,100,0.826,122,1.201,123,1.471,129,2.523,140,1.366,153,3.572,184,1.576,312,1.671,313,3.352,314,3.732,315,3.068,316,1.827,317,2.841,325,3.352,327,2.832,328,3.352,329,4.054,330,3.292,332,3.133,333,3.352,335,3.352,337,2.491,338,2.35,339,3.755,340,3.732,341,3.755,342,3.292,343,3.068,344,3.505,345,3.732,346,1.471,347,1.914,348,2.008,349,2.832,350,3.352,351,3.732,352,3.352,353,3.352,354,3.352,355,3.732,356,3.068,357,4.429,358,3.732,359,3.732,360,3.352,361,3.068,362,3.352,363,3.352,364,3.068,365,2.841,366,3.732,367,4.541,368,4.205,369,3.732,370,3.732,371,3.732,372,2.653,373,3.068,374,3.068,375,3.068,376,3.732,377,3.732,378,3.732,583,2.939,1005,4.31]],["title/models/Mappable.html",[379,1.271,387,2.117]],["body/models/Mappable.html",[2,0.165,3,0.189,4,0.142,6,0.538,7,0.893,12,0.77,14,0.769,15,0.016,16,0.538,17,0.582,18,0.699,28,0.863,40,0.189,44,1.63,53,0.013,54,0.013,70,1.381,100,0.83,379,2.152,387,3.582,574,3.434,590,4.359,596,4.536,815,4.728,1006,4.675,1007,5.732,1008,6.57,1009,5.398,1010,7.681,1011,5.398]],["title/models/Media.html",[210,0.998,379,1.271]],["body/models/Media.html",[2,0.17,3,0.194,4,0.176,6,0.554,15,0.016,17,0.699,18,0.865,40,0.234,53,0.013,54,0.013,70,1.405,100,0.84,210,1.719,212,1.611,349,3.305,379,2.189,491,2.78,738,3.419,1012,4.321,1013,6.445,1014,5.298,1015,4.811,1016,5.789,1017,5.789]],["title/components/MediaInputComponent.html",[55,0.478,209,1.172]],["body/components/MediaInputComponent.html",[2,0.099,3,0.113,4,0.085,6,0.32,7,0.632,9,0.794,12,0.834,14,0.458,15,0.016,16,0.544,17,0.604,18,0.416,28,0.701,32,0.416,34,0.339,40,0.113,41,0.071,53,0.009,54,0.009,55,0.782,56,0.932,57,1.144,58,1.144,59,1.144,62,0.932,63,2.669,64,2.522,66,1.884,68,1.587,70,0.977,71,1.659,87,0.861,100,0.799,102,4.654,111,0.938,129,1.587,132,2.535,140,0.9,158,1.246,184,0.794,189,1.575,193,0.794,194,1.587,195,1.462,196,1.654,197,2.042,198,1.144,199,1.144,200,0.971,201,1.654,202,0.971,203,0.971,204,1.144,205,0.932,206,1.144,207,0.971,208,1.144,209,1.806,210,1.92,211,1.144,212,1.348,213,1.144,214,0.971,215,1.144,216,0.971,217,1.654,218,0.971,219,1.144,220,0.971,221,0.971,222,1.011,223,1.654,224,0.971,225,1.144,226,0.971,227,0.704,228,0.971,229,1.144,230,0.971,231,1.144,232,0.971,233,1.144,234,1.011,235,1.144,236,1.011,237,0.896,238,1.144,242,1.428,255,1.753,256,1.246,349,3.161,402,1.194,418,2.166,446,2.12,480,1.303,535,3.065,678,1.753,679,1.858,687,5.622,689,2.501,690,2.785,800,3.945,801,3.91,803,3.945,1014,3.888,1018,6.259,1019,2.785,1020,4.649,1021,4.649,1022,4.649,1023,4.649,1024,5.307,1025,5.983,1026,5.983,1027,5.461,1028,5.461,1029,5.461,1030,5.461,1031,3.215,1032,5.146,1033,5.461,1034,5.983,1035,4.649,1036,3.215,1037,3.215,1038,3.215,1039,3.215,1040,3.215,1041,3.215,1042,3.616,1043,4.649,1044,3.215,1045,2.785,1046,3.215,1047,3.215,1048,2.785,1049,3.215,1050,3.215,1051,3.215,1052,5.461,1053,3.215,1054,3.215,1055,3.215,1056,3.215,1057,3.215,1058,3.215,1059,3.215,1060,4.649,1061,3.215,1062,4.649,1063,3.215,1064,3.215,1065,3.215,1066,4.649,1067,4.649]],["title/injectables/MessageService.html",[33,1.172,1068,2.56]],["body/injectables/MessageService.html",[2,0.141,3,0.161,4,0.121,6,0.459,7,0.808,12,0.844,14,0.656,15,0.016,16,0.459,17,0.527,18,0.596,28,0.844,29,4.956,32,0.414,33,1.989,34,0.485,40,0.161,41,0.102,44,1.391,53,0.012,54,0.012,55,0.733,70,1.25,71,3.399,76,2.925,87,1.592,100,0.864,110,1.53,111,1.2,127,3.438,184,1.72,306,4.627,480,1.867,481,3.438,489,5.559,796,3.438,798,4.627,828,4.235,1068,3.922,1069,3.99,1070,6.961,1071,7.381,1072,7.51,1073,6.961,1074,6.961,1075,5.948,1076,4.607,1077,5.948,1078,4.607,1079,5.948,1080,4.607,1081,4.607,1082,4.607,1083,4.607,1084,4.607,1085,4.607]],["title/classes/MyMissingTranslationHandler.html",[41,0.086,288,2.764]],["body/classes/MyMissingTranslationHandler.html",[2,0.132,3,0.15,4,0.113,6,0.428,7,0.772,12,0.503,14,0.612,15,0.016,16,0.428,17,0.381,18,0.556,28,0.825,32,0.501,34,0.453,35,2.002,40,0.223,41,0.141,42,1.461,44,1.297,48,1.351,53,0.011,54,0.011,56,1.846,74,4.42,79,2.699,100,0.794,105,4.046,110,1.461,111,1.146,122,1.197,123,1.466,125,2.967,126,2.217,127,2.483,128,1.741,131,2.002,141,2.002,184,1.061,239,1.648,240,2.832,242,1.908,243,2.967,248,3.498,249,3.498,250,3.498,253,3.058,254,4.921,255,2.342,256,1.665,257,2.783,258,3.72,259,3.72,260,3.72,261,2.644,262,3.72,263,3.72,264,3.72,265,4.921,266,3.72,267,3.72,268,3.341,269,4.921,270,3.72,271,2.832,272,4.921,273,6.103,274,5.868,275,3.72,276,3.341,277,4.42,278,5.515,279,4.42,280,3.341,281,4.921,282,3.341,283,3.341,284,3.341,285,3.72,286,2.872,287,4.921,288,4.533,289,4.921,290,3.72,291,3.72,292,3.72,293,3.72,294,3.058,295,3.72,296,3.72,297,3.058,298,3.058,299,2.832,300,4.921,301,3.72,480,1.741,1086,4.296]],["title/components/NavbarComponent.html",[55,0.478,214,1.172]],["body/components/NavbarComponent.html",[2,0.118,3,0.135,4,0.101,6,0.383,7,0.716,9,0.95,12,0.795,14,0.548,15,0.016,16,0.6,17,0.467,18,0.498,27,3.754,28,0.45,32,0.427,34,0.405,36,1.63,38,1.49,40,0.135,41,0.085,43,2.366,48,1.658,53,0.01,54,0.01,55,0.836,56,1.115,57,1.368,58,1.368,59,1.368,62,1.115,63,2.718,64,2.595,66,2.136,68,1.8,70,1.108,79,2.971,87,1.029,110,1.548,111,1.214,122,2,123,1.312,140,1.021,189,2.583,193,0.95,194,1.8,195,1.658,196,1.876,197,2.21,198,1.368,199,1.368,200,1.161,201,1.876,202,1.161,203,1.161,204,1.368,205,1.115,206,1.368,207,1.161,208,1.368,209,1.161,210,1.356,211,1.368,212,1.115,213,1.368,214,1.955,215,1.368,216,1.161,217,1.876,218,1.161,219,1.368,220,1.161,221,1.161,222,1.209,223,1.876,224,1.161,225,1.368,226,1.161,227,0.842,228,1.161,229,1.368,230,1.161,231,1.368,232,1.161,233,1.368,234,1.209,235,1.368,236,1.209,237,1.071,238,1.368,312,2.511,315,4.99,395,2.721,453,2.99,471,3.754,498,3.477,823,2.875,871,3.048,982,3.33,1087,3.33,1088,4.567,1089,5.273,1090,5.273,1091,6.476,1092,5.609,1093,3.844,1094,5.273,1095,3.844,1096,3.844,1097,4.567,1098,4.567,1099,3.844,1100,4.102,1101,4.102,1102,4.102,1103,2.737,1104,3.844,1105,3.33,1106,2.366,1107,4.567,1108,5.273]],["title/pipes/OrderByPipe.html",[919,1.724,1109,2.56]],["body/pipes/OrderByPipe.html",[2,0.125,3,0.142,4,0.107,7,0.553,12,0.726,14,0.78,15,0.016,16,0.661,17,0.549,18,0.709,28,0.879,32,0.256,34,0.428,40,0.142,41,0.09,42,1.046,52,1.332,53,0.011,54,0.011,62,1.179,70,1.302,76,2.433,100,0.835,110,1.409,111,1.105,156,3.224,189,3.491,197,2.262,491,2.683,801,2.827,816,3.612,919,2.751,922,2.681,926,3.9,1109,3.612,1110,3.522,1111,4.745,1112,4.067,1113,5.478,1114,5.186,1115,4.067,1116,4.745,1117,6.629,1118,4.067,1119,5.365,1120,4.067,1121,3.163,1122,4.067,1123,4.067,1124,4.067,1125,4.067,1126,4.067,1127,4.067,1128,5.478,1129,5.478,1130,4.067,1131,4.067,1132,4.067,1133,4.067,1134,4.067,1135,4.067,1136,4.067,1137,3.522,1138,4.067,1139,5.741,1140,6.195,1141,4.067,1142,6.919,1143,4.067,1144,6.195,1145,6.195,1146,4.067,1147,4.067,1148,4.067,1149,4.067,1150,5.478,1151,5.478,1152,5.478,1153,4.067,1154,4.067,1155,3.522,1156,4.067]],["title/modules/PagesModule.html",[239,1.126,249,2.39]],["body/modules/PagesModule.html",[2,0.17,3,0.194,4,0.146,15,0.016,32,0.479,34,0.585,40,0.251,41,0.123,53,0.013,54,0.013,128,2.709,193,1.373,227,1.216,239,1.938,241,2.588,242,2.467,243,2.588,249,4.855,251,3.45,252,2.721,257,3.274,1157,4.811,1158,4.811,1159,4.76,1160,5.099,1161,5.555,1162,5.555,1163,4.811]],["title/modules/PipeModule.html",[239,1.126,680,2.244]],["body/modules/PipeModule.html",[2,0.144,3,0.165,4,0.124,15,0.016,28,0.551,32,0.474,34,0.496,40,0.246,41,0.104,53,0.012,54,0.012,76,2.089,128,2.696,193,1.162,227,1.03,239,1.748,241,2.192,242,2.089,243,2.809,251,3.111,252,2.304,257,3.259,680,4.667,920,5.193,1109,5.193,1164,4.074,1165,4.074,1166,4.074,1167,5.193,1168,5.193,1169,5.193,1170,4.704,1171,4.704,1172,4.704,1173,4.704,1174,4.704,1175,4.704,1176,4.704]],["title/components/PlatformLayoutComponent.html",[55,0.478,216,1.172]],["body/components/PlatformLayoutComponent.html",[2,0.137,3,0.156,4,0.118,15,0.015,16,0.58,32,0.28,34,0.47,40,0.156,41,0.099,53,0.011,54,0.011,55,0.918,56,1.881,57,1.587,58,1.587,59,1.587,62,1.294,63,2.754,64,2.632,68,1.988,140,1.127,149,4.824,152,2.36,193,1.102,194,1.988,195,1.831,196,2.073,197,2.347,198,1.587,199,1.587,200,1.347,201,2.073,202,1.347,203,1.347,204,1.587,205,1.294,206,1.587,207,1.347,208,1.587,209,1.347,210,1.498,211,1.587,212,1.294,213,1.587,214,1.347,215,1.587,216,2.076,217,2.073,218,1.347,219,1.587,220,1.347,221,1.347,222,1.402,223,2.073,224,1.347,225,1.587,226,1.347,227,0.977,228,1.347,229,1.587,230,1.347,231,1.587,232,1.347,233,1.587,234,1.402,235,1.587,236,1.402,237,1.243,238,1.587,297,4.147,299,3.841,346,1.988,480,1.807,535,3.841,870,3.176,1177,3.863,1178,3.47,1179,5.045,1180,5.955,1181,4.531,1182,5.045,1183,5.045,1184,5.045,1185,5.045]],["title/modules/PlatformModule.html",[239,1.126,1159,2.39]],["body/modules/PlatformModule.html",[2,0.143,3,0.164,4,0.123,15,0.016,32,0.501,34,0.492,35,2.177,40,0.245,41,0.103,53,0.012,54,0.012,125,2.177,126,2.411,128,2.687,140,1.162,193,1.154,203,2.376,227,1.023,234,2.474,236,2.474,239,1.74,241,2.177,242,2.665,243,2.177,251,3.097,252,2.288,257,2.94,261,3.694,271,3.08,663,3.469,674,4.273,675,3.08,677,3.08,678,2.547,679,2.7,680,2.7,681,3.634,682,4.668,683,3.326,684,4.273,685,3.08,691,3.08,692,3.634,693,3.634,694,4.56,707,3.634,1159,4.905,1186,4.046,1187,4.046,1188,4.671,1189,4.046,1190,4.671,1191,4.671,1192,4.046,1193,4.671,1194,4.046,1195,4.671,1196,4.046]],["title/components/PolicyComponent.html",[55,0.478,218,1.172]],["body/components/PolicyComponent.html",[2,0.087,3,0.1,4,0.075,6,0.284,7,0.577,9,0.703,11,2.813,12,0.906,14,0.86,15,0.016,16,0.654,17,0.647,18,0.782,28,0.769,30,1.206,32,0.267,34,0.3,37,1.774,40,0.1,41,0.063,42,1.308,48,0.895,52,0.932,53,0.008,54,0.008,55,0.78,56,0.825,57,1.013,58,1.013,59,1.013,61,2.37,62,0.825,63,2.631,64,2.504,68,1.45,70,0.893,80,3.058,83,1.153,84,2.455,87,1.695,95,1.645,100,0.742,110,1.774,111,1.361,120,2.957,122,1.572,140,1.092,141,1.326,152,1.722,158,1.103,193,0.703,194,1.736,195,1.599,196,1.512,197,1.926,198,1.013,199,1.013,200,0.859,201,1.512,202,2.35,203,0.859,204,1.013,205,0.825,206,1.013,207,0.859,208,1.013,209,0.859,210,1.093,211,1.013,212,0.825,213,1.013,214,0.859,215,1.013,216,0.859,217,1.512,218,1.703,219,1.013,220,0.859,221,0.859,222,0.895,223,1.512,224,0.859,225,1.013,226,0.859,227,0.623,228,0.859,229,1.013,230,0.859,231,1.013,232,1.283,233,1.013,234,0.895,235,1.013,236,0.895,237,0.793,238,1.013,256,1.103,286,1.206,312,1.648,316,2.977,337,1.645,346,1.45,347,1.264,348,1.326,394,3.292,395,2.625,396,2.506,397,2.559,398,2.773,399,2.674,400,2.773,401,2.37,402,2.095,403,2.317,404,2.317,405,2.317,406,2.317,408,1.551,410,1.551,411,2.681,412,1.394,413,1.551,415,1.394,416,1.326,417,1.551,418,1.326,419,1.394,420,1.551,422,1.722,423,1.468,424,1.551,425,2.317,426,2.081,428,1.551,429,1.468,430,1.551,431,1.551,441,2.193,481,1.645,493,1.876,497,3.621,498,3.354,499,3.026,500,3.956,503,2.213,504,2.213,505,1.645,506,2.026,507,2.026,508,2.213,509,2.026,510,2.213,512,4.438,703,2.213,754,2.464,755,3.68,756,2.464,757,2.464,758,2.464,759,2.464,760,2.464,761,2.464,762,2.464,763,2.464,764,2.464,765,2.464,766,2.464,767,2.464,768,2.464,769,2.464,770,2.464,771,2.464,772,2.464,773,2.464,774,2.464,775,1.751,777,2.464,870,2.317,1197,2.464,1198,4.25,1199,4.25,1200,5.642,1201,4.25,1202,2.845,1203,2.845,1204,2.845]],["title/components/PublicLayoutComponent.html",[55,0.478,220,1.172]],["body/components/PublicLayoutComponent.html",[2,0.135,3,0.154,4,0.116,15,0.015,16,0.575,32,0.277,34,0.464,40,0.154,41,0.097,53,0.011,54,0.011,55,0.915,56,1.869,57,1.567,58,1.567,59,1.567,62,1.276,63,2.751,64,2.629,66,2.34,68,1.971,132,4.109,140,1.118,152,2.772,193,1.088,194,1.971,195,1.815,196,2.055,197,2.335,198,1.567,199,1.567,200,1.329,201,2.055,202,1.329,203,1.329,204,1.567,205,1.276,206,1.567,207,1.329,208,1.567,209,1.329,210,1.485,211,1.567,212,1.276,213,1.567,214,1.329,215,1.567,216,1.329,217,2.055,218,1.329,219,1.567,220,2.065,221,1.329,222,1.384,223,2.055,224,1.329,225,1.567,226,1.329,227,0.964,228,1.329,229,1.567,230,1.329,231,1.567,232,1.329,233,1.567,234,1.384,235,1.567,236,1.384,237,1.226,238,1.567,297,4.111,299,3.807,346,1.971,480,1.784,535,3.807,870,3.148,1178,3.424,1179,5.001,1180,5.925,1181,4.492,1182,5.001,1183,5.001,1184,5.001,1185,5.001,1205,3.812,1206,5.774]],["title/modules/PublicModule.html",[239,1.126,1160,2.56]],["body/modules/PublicModule.html",[2,0.132,3,0.151,4,0.113,15,0.016,32,0.501,34,0.453,35,2.005,40,0.237,41,0.095,53,0.011,54,0.011,125,2.005,126,2.22,128,2.582,193,1.063,207,2.347,218,2.347,221,2.347,222,1.353,224,2.347,226,2.347,227,1.246,239,1.65,241,2.005,242,2.526,243,2.005,251,2.935,252,2.107,257,2.786,261,3.501,271,2.837,663,3.288,674,4.05,675,2.837,677,2.837,678,2.346,679,2.487,680,2.487,681,3.347,682,4.425,683,3.063,684,4.05,685,2.837,691,2.837,692,3.347,693,3.347,694,4.459,707,3.347,1159,4.459,1160,5.313,1163,3.726,1196,3.726,1207,3.726,1208,3.726,1209,4.303,1210,3.726,1211,4.303,1212,4.303,1213,3.347,1214,5.688,1215,3.347,1216,4.303,1217,4.303]],["title/components/RecoveryPasswordComponent.html",[55,0.478,221,1.172]],["body/components/RecoveryPasswordComponent.html",[2,0.08,3,0.091,4,0.068,6,0.259,7,0.539,9,0.642,11,2.703,12,0.892,14,0.871,15,0.016,16,0.654,17,0.635,18,0.792,28,0.716,32,0.365,34,0.274,37,1.693,40,0.091,41,0.057,42,1.237,48,0.816,52,1.576,53,0.008,54,0.008,55,0.754,56,0.753,57,0.924,58,0.924,59,0.924,61,2.242,62,0.753,63,2.6,64,2.472,66,1.607,68,1.354,70,0.834,79,2.908,80,2.51,83,1.052,84,2.371,87,1.637,100,0.716,110,1.687,111,1.324,120,2.842,122,1.943,123,0.886,132,2.623,140,0.768,141,1.21,152,1.607,154,2.249,158,1.007,193,0.642,194,1.642,195,1.513,196,1.411,197,1.838,198,0.924,199,0.924,200,2.29,201,1.411,202,0.784,203,0.784,204,0.924,205,0.753,206,0.924,207,0.784,208,0.924,209,0.784,210,1.02,211,0.924,212,0.753,213,0.924,214,0.784,215,0.924,216,0.784,217,1.411,218,0.784,219,0.924,220,0.784,221,1.626,222,2.114,223,1.411,224,0.784,225,0.924,226,0.784,227,0.569,228,0.784,229,0.924,230,0.784,231,0.924,232,1.197,233,0.924,234,0.816,235,0.924,236,0.816,237,0.723,238,0.924,256,1.007,286,1.101,312,1.537,316,2.781,327,2.576,332,2.459,346,1.354,347,1.153,348,1.21,372,1.598,394,3.163,395,2.483,396,2.392,397,2.459,398,2.623,399,2.607,400,2.623,401,2.242,402,2,403,2.162,404,2.162,405,2.162,406,2.162,408,1.416,410,1.416,411,2.576,412,1.272,413,1.416,415,1.272,416,1.21,417,1.416,418,1.21,419,1.272,420,1.416,422,1.052,423,1.34,424,1.416,425,2.162,426,1.942,428,1.416,429,1.34,430,1.416,431,1.416,441,2.047,447,1.501,448,1.598,449,1.598,450,1.849,472,1.849,505,2.292,512,4.287,513,1.712,514,1.712,515,1.712,516,1.712,518,1.712,519,1.712,520,1.712,521,1.712,522,1.712,523,1.712,524,1.712,525,1.712,526,1.712,527,1.712,528,1.712,529,1.712,530,1.712,531,1.598,581,2.292,727,1.849,775,1.598,968,3.085,972,2.823,986,3.426,992,3.085,993,3.085,994,4.189,998,2.615,1001,2.441,1002,2.615,1213,4.757,1218,5.297,1219,2.02,1220,3.435,1221,3.435,1222,4.09,1223,3.435,1224,2.596,1225,3.435,1226,2.596,1227,2.249,1228,2.249,1229,2.249,1230,2.596,1231,2.596,1232,2.249,1233,2.596,1234,2.596,1235,2.02,1236,3.966]],["title/components/RegisterComponent.html",[55,0.478,224,1.172]],["body/components/RegisterComponent.html",[2,0.077,3,0.087,4,0.066,6,0.249,7,0.523,9,0.617,11,2.656,12,0.895,14,0.858,15,0.016,16,0.646,17,0.642,18,0.78,28,0.735,31,1.538,32,0.379,34,0.263,37,1.792,38,0.968,40,0.087,41,0.055,42,1.208,48,0.785,52,1.538,53,0.007,54,0.007,55,0.742,56,0.724,57,0.889,58,0.889,59,0.889,61,2.188,62,0.724,63,2.586,64,2.458,66,1.559,68,1.314,70,0.809,79,3.044,80,2.459,83,1.012,84,2.335,87,1.679,100,0.779,110,1.746,111,1.37,120,2.792,122,1.925,123,0.852,140,1.403,141,1.163,152,1.559,156,1.163,158,0.968,184,0.951,193,0.617,194,1.603,195,1.476,196,1.37,197,1.801,198,0.889,199,0.889,200,2.277,201,1.37,202,0.754,203,0.754,204,0.889,205,0.724,206,0.889,207,0.754,208,0.889,209,0.754,210,0.99,211,0.889,212,0.724,213,0.889,214,0.754,215,0.889,216,0.754,217,1.37,218,0.754,219,0.889,220,0.754,221,0.754,222,0.785,223,1.37,224,1.593,225,0.889,226,0.754,227,0.547,228,0.754,229,0.889,230,0.754,231,0.889,232,1.162,233,0.889,234,0.785,235,0.889,236,0.785,237,0.696,238,0.889,256,0.968,286,1.058,312,1.492,316,2.747,327,1.709,332,2.237,338,1.361,346,1.314,347,1.109,348,1.163,356,1.778,394,3.108,395,2.423,396,2.343,397,2.416,398,2.56,399,2.577,400,2.56,401,2.188,402,1.959,403,2.098,404,2.098,405,2.098,406,2.098,408,1.361,410,1.361,411,2.531,412,1.223,413,1.361,415,1.223,416,1.163,417,1.361,418,1.163,419,1.223,420,1.361,422,1.012,423,1.289,424,1.361,425,2.098,426,1.885,428,1.361,429,1.289,430,1.361,431,1.361,441,1.986,447,1.443,448,1.537,449,1.537,450,1.778,467,1.942,472,1.778,505,3.05,512,4.259,513,1.646,514,1.646,515,1.646,516,1.646,518,1.646,519,1.646,520,1.646,521,1.646,522,1.646,523,1.646,524,1.646,525,1.646,526,1.646,527,1.646,528,1.646,529,1.646,530,1.646,531,1.537,628,2.163,699,1.778,727,1.778,775,1.537,968,2.994,972,2.74,977,3.333,978,4.937,984,2.163,986,3.343,992,2.994,998,2.538,1000,4.57,1001,2.369,1002,2.538,1235,1.942,1237,2.163,1238,3.849,1239,3.849,1240,5.277,1241,4.105,1242,3.849,1243,2.497,1244,2.497,1245,2.497,1246,2.497,1247,2.497,1248,2.497,1249,2.497,1250,2.497,1251,2.497,1252,2.497,1253,2.497,1254,2.497,1255,2.497,1256,2.497,1257,2.497,1258,2.497,1259,2.163,1260,2.497,1261,3.849,1262,3.849]],["title/components/ResetPasswordComponent.html",[55,0.478,226,1.172]],["body/components/ResetPasswordComponent.html",[2,0.076,3,0.087,4,0.065,6,0.247,7,0.521,9,0.613,11,2.649,12,0.894,14,0.856,15,0.016,16,0.644,17,0.628,18,0.778,28,0.704,32,0.331,34,0.262,37,1.654,40,0.087,41,0.055,42,1.203,48,0.781,52,1.533,53,0.007,54,0.01,55,0.74,56,0.72,57,0.884,58,0.884,59,0.884,61,2.18,62,0.72,63,2.584,64,2.456,66,1.553,68,1.308,70,0.806,79,3.097,80,2.452,83,1.006,84,2.329,87,1.608,100,0.777,110,1.663,111,1.305,120,2.785,122,1.922,123,0.847,140,0.742,141,1.157,152,1.553,158,0.963,184,1.485,193,0.613,194,1.597,195,1.471,196,1.364,197,1.796,198,0.884,199,0.884,200,2.275,201,1.364,202,0.75,203,0.75,204,0.884,205,0.72,206,0.884,207,0.75,208,0.884,209,0.75,210,0.985,211,0.884,212,0.72,213,0.884,214,0.75,215,0.884,216,0.75,217,1.364,218,0.75,219,0.884,220,0.75,221,0.75,222,0.781,223,1.364,224,0.75,225,0.884,226,1.588,227,1.484,228,0.75,229,0.884,230,0.75,231,0.884,232,1.157,233,0.884,234,0.781,235,0.884,236,0.781,237,0.692,238,0.884,256,0.963,286,1.053,308,2.15,312,1.486,316,2.742,329,3.746,330,3.041,332,3.142,346,1.308,347,1.103,348,1.157,372,1.528,394,3.1,395,2.415,396,2.336,397,2.41,398,2.551,399,2.573,400,2.551,401,2.18,402,1.954,403,2.089,404,2.089,405,2.089,406,2.089,408,1.354,410,1.354,411,2.525,412,1.216,413,1.354,415,1.216,416,1.157,417,1.354,418,1.157,419,1.216,420,1.354,422,1.006,423,1.281,424,1.354,425,2.089,426,1.877,428,1.354,429,1.281,430,1.354,431,1.354,441,1.978,447,1.435,448,1.528,449,1.528,450,1.768,467,1.931,471,2.728,472,1.768,505,3.473,512,4.255,513,1.637,514,1.637,515,1.637,516,1.637,518,1.637,519,1.637,520,1.637,521,1.637,522,1.637,523,1.637,524,1.637,525,1.637,526,1.637,527,1.637,528,1.637,529,1.637,530,1.637,531,1.528,727,1.768,775,1.528,972,2.728,986,3.332,993,4.093,994,4.093,1001,2.359,1002,2.527,1215,5.031,1219,1.931,1220,3.319,1221,3.319,1223,2.15,1225,3.319,1227,2.15,1228,3.319,1232,2.15,1235,1.931,1259,2.15,1263,5.601,1264,5.261,1265,2.483,1266,2.483,1267,2.483,1268,2.483,1269,2.483,1270,4.68,1271,2.483,1272,2.483,1273,2.483,1274,3.832,1275,2.483,1276,2.483]],["title/classes/ResponseError.html",[41,0.086,487,2.39]],["body/classes/ResponseError.html",[2,0.164,3,0.187,4,0.141,6,0.534,9,1.615,12,0.827,14,0.763,15,0.016,16,0.534,17,0.625,18,0.693,40,0.229,41,0.156,53,0.013,54,0.013,70,1.374,98,2.495,100,0.898,132,3.564,184,1.323,330,4.431,346,2.231,411,2.378,478,5.024,479,3.812,484,4.638,485,4.638,486,4.638,487,4.024,488,5.024,489,5.526,490,5.662,491,2.736,492,4.638,1277,6.538,1278,5.355]],["title/pipes/ReversePipe.html",[919,1.724,1167,2.56]],["body/pipes/ReversePipe.html",[2,0.176,3,0.201,4,0.151,7,0.781,12,0.673,14,0.818,15,0.016,16,0.725,18,0.744,28,0.799,32,0.361,34,0.605,40,0.201,41,0.127,52,1.882,53,0.013,54,0.013,62,1.666,111,1.468,919,3.231,922,4.498,923,4.977,1121,4.47,1167,4.498,1279,4.977,1280,6.821,1281,5.746,1282,5.746]],["title/models/RouteInfo.html",[379,1.271,1106,2.39]],["body/models/RouteInfo.html",[2,0.173,3,0.198,4,0.149,6,0.563,15,0.015,17,0.663,32,0.355,37,2.353,38,2.19,40,0.198,53,0.013,54,0.013,70,1.419,100,0.933,379,2.211,399,2.901,588,5.328,1106,4.156,1283,4.893,1284,6.481,1285,6.481]],["title/pipes/SafePipe.html",[919,1.724,1168,2.56]],["body/pipes/SafePipe.html",[2,0.173,3,0.198,4,0.149,7,0.768,12,0.662,14,0.805,15,0.016,16,0.72,18,0.731,28,0.791,32,0.425,34,0.595,40,0.198,41,0.125,42,1.453,43,3.477,53,0.013,54,0.013,62,1.638,255,3.08,256,2.19,349,2.509,919,3.207,922,3.725,926,4.807,1024,4.394,1032,5.252,1168,4.452,1286,4.893,1287,6.752,1288,6.752,1289,5.649,1290,5.649]],["title/classes/ServerUser.html",[41,0.086,344,2.39]],["body/classes/ServerUser.html",[2,0.096,3,0.11,4,0.082,6,0.312,7,0.89,12,0.894,14,0.649,15,0.016,16,0.454,17,0.677,18,1.032,28,0.768,31,1.761,32,0.287,37,1.974,38,1.213,40,0.11,41,0.101,44,1.376,53,0.009,54,0.009,70,0.958,76,2.91,100,0.935,129,1.556,140,1.438,184,1.126,210,1.519,327,2.623,332,2.504,338,1.706,344,4.611,368,3.895,415,2.893,480,2.393,491,2.541,574,2.752,815,4.034,831,3.968,906,4.206,1007,3.545,1291,2.71,1292,5.907,1293,4.595,1294,4.595,1295,4.595,1296,4.595,1297,4.595,1298,4.595,1299,5.116,1300,3.129,1301,3.129,1302,3.129,1303,3.129,1304,3.129,1305,3.129,1306,3.129,1307,3.129,1308,3.129,1309,3.129,1310,3.129,1311,3.129,1312,3.129,1313,3.129,1314,3.129,1315,4.558,1316,3.129,1317,4.558,1318,3.129,1319,3.947,1320,4.558,1321,3.129,1322,3.129,1323,5.376,1324,3.129,1325,5.376,1326,3.129,1327,4.558,1328,3.129,1329,4.558,1330,3.129,1331,4.558,1332,3.129,1333,4.558,1334,3.129,1335,3.947,1336,3.129,1337,4.558,1338,3.129,1339,3.129,1340,4.558,1341,3.129,1342,3.129,1343,3.129,1344,3.129,1345,3.129,1346,3.129,1347,3.129,1348,3.129,1349,3.129,1350,3.129,1351,3.129,1352,3.129,1353,3.129,1354,3.129,1355,3.129,1356,3.129,1357,3.129,1358,3.129,1359,3.129,1360,3.129,1361,3.129]],["title/modules/ServicesModule.html",[239,1.126,250,2.39]],["body/modules/ServicesModule.html",[2,0.146,3,0.166,4,0.125,15,0.016,32,0.498,34,0.501,36,3.155,40,0.234,41,0.105,53,0.012,54,0.012,96,4.118,97,2.927,125,2.215,128,2.459,193,1.175,227,1.041,239,1.76,241,2.215,242,2.695,243,3.115,250,4.954,251,3.132,252,2.329,255,2.592,257,2.973,279,4.721,280,3.698,312,2.885,397,3.155,401,2.215,452,4.118,453,3.698,537,3.698,677,3.135,678,2.592,679,2.748,691,3.135,930,4.907,1068,4.907,1222,4.302,1229,4.118,1362,4.118,1363,4.118,1364,4.907,1365,4.754,1366,4.754,1367,4.754,1368,4.754,1369,4.754,1370,6.07,1371,4.754,1372,4.754,1373,4.754]],["title/injectables/SessionService.html",[33,1.172,36,1.646]],["body/injectables/SessionService.html",[2,0.12,3,0.137,4,0.103,6,0.39,7,0.725,12,0.86,14,0.557,15,0.016,16,0.39,17,0.347,18,0.506,26,3.799,28,0.86,31,1.748,32,0.41,33,1.833,34,0.412,36,2.262,37,1.23,40,0.187,41,0.087,44,1.611,53,0.01,54,0.01,70,1.122,76,3.557,87,1.428,98,1.823,100,0.825,103,4.151,110,1.562,111,1.225,114,6.103,122,1.09,123,1.335,129,2.073,132,3.311,140,1.509,149,2.579,338,2.133,537,4.151,538,4.151,738,2.408,823,2.133,831,2.909,870,2.133,960,3.388,1374,3.043,1375,6.524,1376,6.524,1377,6.524,1378,6.524,1379,6.524,1380,6.524,1381,6.524,1382,5.336,1383,3.912,1384,3.912,1385,3.912,1386,3.912,1387,5.336,1388,6.828,1389,3.912,1390,4.621,1391,5.336,1392,3.912,1393,5.336,1394,3.912,1395,5.336,1396,3.912,1397,4.621,1398,3.388,1399,3.912,1400,3.912,1401,3.912,1402,5.336,1403,3.912,1404,3.912,1405,3.912,1406,3.912,1407,5.336,1408,5.336,1409,3.912,1410,6.073,1411,3.912,1412,3.912,1413,3.912,1414,3.043,1415,4.621,1416,4.151]],["title/components/SidebarComponent.html",[55,0.478,228,1.172]],["body/components/SidebarComponent.html",[2,0.13,3,0.148,4,0.112,6,0.422,9,1.562,12,0.659,15,0.016,16,0.561,17,0.375,27,4.007,32,0.398,34,0.446,36,1.795,38,1.642,40,0.148,41,0.094,53,0.011,54,0.011,55,0.864,56,1.228,57,1.507,58,1.507,59,1.507,62,1.228,63,2.742,64,2.619,66,2.281,68,1.921,70,1.183,79,2.386,110,1.089,111,0.854,140,1.089,189,2.757,193,1.046,194,1.921,195,1.77,196,2.003,197,2.3,198,1.507,199,1.507,200,1.278,201,2.003,202,1.278,203,1.278,204,1.507,205,1.228,206,1.507,207,1.278,208,1.507,209,1.278,210,1.447,211,1.507,212,1.228,213,1.507,214,1.278,215,1.507,216,1.278,217,2.003,218,1.278,219,1.507,220,1.278,221,1.278,222,1.331,223,2.003,224,1.278,225,1.507,226,1.278,227,0.927,228,2.034,229,1.507,230,1.278,231,1.507,232,1.278,233,1.507,234,1.331,235,1.507,236,1.331,237,1.18,238,1.507,498,3.711,613,4.378,823,3.069,871,3.253,1092,5.835,1097,4.875,1098,4.875,1100,4.378,1101,5.241,1102,4.378,1103,3.015,1105,3.667,1106,2.606,1107,4.875,1417,3.667,1418,5.476,1419,5.628,1420,5.628,1421,5.628]],["title/injectables/StorageService.html",[33,1.172,1364,2.56]],["body/injectables/StorageService.html",[2,0.108,3,0.124,4,0.2,6,0.352,7,0.676,9,0.873,12,0.822,14,0.82,15,0.016,16,0.573,17,0.672,18,0.745,28,0.853,29,2.516,30,2.894,32,0.441,33,1.737,34,0.372,39,3.061,40,0.124,41,0.078,44,1.987,53,0.01,54,0.01,70,1.046,83,1.432,84,2.647,87,0.946,98,1.647,100,0.839,110,0.909,111,0.713,122,0.985,123,1.206,129,2.33,131,1.647,140,1.209,153,2.317,156,1.647,184,1.229,189,1.731,210,1.936,316,2.44,317,4.118,337,2.043,341,3.279,342,2.875,343,2.516,346,1.206,347,1.569,348,1.647,349,2.556,361,2.516,364,2.516,365,2.33,368,2.33,491,2.231,499,4.097,538,3.869,541,3.061,626,3.061,635,3.061,831,1.927,1013,4.984,1014,4.446,1045,3.061,1222,4.139,1335,3.061,1364,3.279,1422,3.061,1423,6.245,1424,7.279,1425,4.974,1426,4.858,1427,3.534,1428,4.974,1429,3.534,1430,4.974,1431,5.7,1432,3.534,1433,4.974,1434,6.245,1435,3.534,1436,4.307,1437,3.534,1438,3.534,1439,3.534,1440,3.534,1441,3.534,1442,3.534,1443,3.534,1444,3.534,1445,3.534,1446,3.534,1447,3.534,1448,3.534,1449,3.534,1450,3.534,1451,3.534,1452,3.061,1453,3.534,1454,3.534,1455,3.534,1456,3.534,1457,4.974,1458,4.974,1459,4.974,1460,3.534,1461,3.534,1462,3.534,1463,3.534,1464,3.534,1465,3.534,1466,3.534,1467,3.534,1468,3.534,1469,3.534,1470,3.534]],["title/components/TableComponent.html",[55,0.478,230,1.172]],["body/components/TableComponent.html",[2,0.053,3,0.061,4,0.046,6,0.287,7,0.392,9,0.43,12,0.857,14,0.773,15,0.016,16,0.587,17,0.651,18,0.703,25,3.057,28,0.73,31,2.267,32,0.322,34,0.183,40,0.206,41,0.039,42,0.742,43,1.072,44,0.871,48,0.907,53,0.006,54,0.006,55,0.586,56,0.505,57,0.62,58,0.62,59,0.62,61,1.72,62,0.505,63,2.44,64,2.308,66,1.169,68,0.984,70,0.606,71,1.905,79,2.574,80,2,83,0.706,84,1.988,87,1.625,89,2.498,95,1.667,98,1.344,100,0.338,110,0.742,111,0.582,120,2.782,122,1.513,123,0.594,125,0.812,126,0.899,128,0.706,129,2.363,131,0.812,137,1.355,140,0.715,152,2.579,153,1.72,156,2.389,158,2.105,184,1.176,189,2.782,193,0.43,194,1.26,195,1.707,196,1.027,197,1.465,198,0.62,199,0.62,200,0.526,201,1.027,202,0.526,203,0.526,204,0.62,205,0.505,206,0.62,207,0.526,208,0.62,209,0.526,210,1.104,211,0.62,212,0.505,213,0.62,214,0.526,215,0.62,216,0.526,217,1.027,218,0.526,219,0.62,220,0.526,221,0.526,222,0.548,223,1.027,224,0.526,225,0.62,226,0.526,227,0.381,228,0.526,229,0.62,230,1.296,231,0.62,232,0.526,233,0.62,234,0.548,235,0.62,236,0.548,237,1.692,238,0.62,332,1.223,349,1.281,399,1.118,402,2.016,418,2,422,1.739,446,1.148,464,1.508,480,0.706,491,2.105,507,1.24,532,2.498,533,1.355,542,1.508,543,1.508,545,1.24,546,1.508,547,1.508,548,1.508,549,1.508,550,1.508,551,1.508,556,1.072,557,4.121,574,0.812,583,0.899,592,3.989,612,0.95,613,3.989,621,2.244,640,2.498,745,3.339,782,1.24,790,1.24,800,4.004,801,3.285,803,3.381,804,3.057,816,1.148,819,1.24,842,1.148,848,1.355,871,1.007,963,3.701,998,3.137,1042,2.244,1102,2.244,1414,4.951,1471,1.24,1472,2.885,1473,2.885,1474,2.885,1475,2.885,1476,2.885,1477,3.692,1478,2.885,1479,2.885,1480,2.885,1481,4.293,1482,4.293,1483,5.43,1484,4.758,1485,4.919,1486,4.121,1487,3.692,1488,3.692,1489,3.692,1490,3.692,1491,3.692,1492,2.885,1493,1.742,1494,1.742,1495,1.742,1496,1.742,1497,1.742,1498,1.742,1499,1.742,1500,1.742,1501,1.742,1502,1.742,1503,1.742,1504,1.742,1505,1.742,1506,1.742,1507,3.198,1508,4.758,1509,2.885,1510,1.742,1511,4.418,1512,1.742,1513,1.742,1514,1.742,1515,3.692,1516,1.742,1517,1.742,1518,2.885,1519,5.43,1520,1.742,1521,1.742,1522,1.742,1523,1.742,1524,1.508,1525,1.742,1526,1.742,1527,1.742,1528,4.293,1529,1.742,1530,1.742,1531,1.24,1532,1.742,1533,2.885,1534,1.742,1535,1.742,1536,2.885,1537,1.742,1538,2.885,1539,5.43,1540,2.498,1541,1.742,1542,1.742,1543,1.742,1544,1.742,1545,3.692,1546,1.742,1547,2.885,1548,4.293,1549,2.885,1550,2.885,1551,2.885,1552,1.742,1553,2.885,1554,2.885,1555,2.885,1556,2.885,1557,1.742,1558,1.742,1559,2.885,1560,2.885,1561,2.885,1562,2.885,1563,4.293,1564,2.885,1565,2.885,1566,2.885,1567,2.885,1568,3.692,1569,2.885,1570,2.885,1571,1.742,1572,2.885,1573,2.885,1574,1.742,1575,1.742,1576,1.742,1577,1.742,1578,1.742,1579,1.742,1580,1.742,1581,1.742,1582,1.742,1583,1.742,1584,1.742,1585,2.885,1586,1.742,1587,1.742,1588,1.742,1589,1.742,1590,1.742,1591,1.742,1592,1.742,1593,1.742,1594,1.742,1595,1.742,1596,1.742,1597,2.885,1598,2.885,1599,2.885,1600,1.742,1601,1.742,1602,1.742,1603,2.885,1604,1.742,1605,1.742,1606,1.742,1607,1.742,1608,1.742,1609,1.742,1610,5.128,1611,2.498,1612,4.293,1613,2.885,1614,5.68,1615,4.293,1616,4.293,1617,4.293,1618,4.293,1619,1.742,1620,2.885,1621,1.742,1622,2.885,1623,5.128,1624,2.885,1625,2.885,1626,2.885,1627,2.885,1628,2.885,1629,1.742,1630,2.498,1631,1.742,1632,1.742,1633,1.742]],["title/components/ToolbarComponent.html",[55,0.478,232,1.172]],["body/components/ToolbarComponent.html",[2,0.124,3,0.142,4,0.107,6,0.405,7,0.744,9,1.53,12,0.835,15,0.016,16,0.545,17,0.587,28,0.476,31,1.792,32,0.255,34,0.428,40,0.142,41,0.09,53,0.011,54,0.011,55,0.852,56,1.178,57,1.445,58,1.445,59,1.445,62,1.178,63,2.731,64,2.609,66,2.217,68,1.868,79,2.808,87,1.087,100,0.776,140,1.059,158,1.574,184,1.003,193,1.003,194,1.868,195,1.721,196,1.948,197,2.261,198,1.445,199,1.445,200,1.226,201,1.948,202,1.226,203,1.226,204,1.445,205,1.178,206,1.445,207,1.226,208,1.445,209,1.226,210,1.407,211,1.445,212,1.178,213,1.445,214,1.226,215,1.445,216,1.226,217,1.948,218,1.226,219,1.445,220,1.226,221,1.226,222,1.277,223,1.948,224,1.226,225,1.445,226,1.226,227,0.889,228,1.226,229,1.445,230,1.226,231,1.445,232,2,233,1.445,234,1.277,235,1.445,236,1.277,237,1.131,238,1.445,399,2.681,429,2.824,800,4.368,801,3.677,803,4.368,842,3.608,1416,4.257,1486,5.361,1524,4.74,1611,4.74,1634,3.517,1635,5.473,1636,5.473,1637,6.625,1638,6.916,1639,6.19,1640,5.473,1641,4.061,1642,4.061,1643,4.061,1644,4.061,1645,4.061]],["title/classes/User.html",[41,0.086,140,0.751]],["body/classes/User.html",[2,0.095,3,0.109,4,0.082,6,0.31,7,0.888,9,1.12,12,0.893,14,0.646,15,0.016,16,0.452,17,0.672,18,1.024,28,0.766,31,2.141,32,0.337,37,2.285,38,1.204,40,0.109,41,0.1,42,1.166,44,0.938,53,0.009,54,0.009,70,0.953,98,3.457,100,0.951,129,1.06,140,1.366,185,4.248,210,1.779,327,3.073,332,2.933,344,4.524,368,2.048,387,2.92,388,2.212,415,2.884,480,2.804,574,3.046,815,4.024,823,3.21,906,4.927,1007,4.58,1293,5.382,1294,5.382,1295,5.382,1296,5.489,1297,5.382,1298,5.382,1319,3.927,1540,5.099,1646,2.691,1647,4.535,1648,3.107,1649,3.107,1650,3.107,1651,3.107,1652,3.107,1653,3.107,1654,3.107,1655,3.107,1656,3.107,1657,3.107,1658,3.107,1659,3.107,1660,3.107,1661,3.107,1662,3.107,1663,4.535,1664,3.107,1665,3.107,1666,3.107,1667,3.107,1668,3.107,1669,3.107,1670,4.535,1671,5.355,1672,3.107,1673,3.107,1674,3.107,1675,3.107,1676,3.107,1677,3.107,1678,3.107,1679,3.107,1680,3.107,1681,3.107,1682,3.107,1683,3.107,1684,3.107,1685,3.107]],["title/models/UserMedia.html",[379,1.271,1686,3.02]],["body/models/UserMedia.html",[2,0.178,3,0.204,4,0.153,6,0.58,15,0.015,17,0.609,32,0.366,40,0.204,53,0.013,54,0.013,70,1.445,100,0.916,210,1.881,346,2.346,379,2.251,574,3.521,1431,6.545,1686,5.347,1687,5.042,1688,5.822]],["title/injectables/UserService.html",[33,1.172,1222,2.244]],["body/injectables/UserService.html",[2,0.116,3,0.132,4,0.1,6,0.377,7,0.709,9,0.935,12,0.853,14,1.018,15,0.016,16,0.712,17,0.645,18,0.925,28,0.909,30,3.203,32,0.424,33,1.802,34,0.399,40,0.132,41,0.084,42,0.973,44,1.143,48,1.19,53,0.01,54,0.01,83,2.114,84,2.616,87,1.013,98,2.781,100,0.885,122,1.054,123,1.292,129,2.196,140,1.475,153,2.781,184,0.935,222,1.64,316,2.53,317,4.242,327,2.651,332,2.727,338,2.063,342,3.015,343,2.694,346,1.292,348,1.763,349,2.651,350,2.944,352,2.944,353,2.944,354,2.944,357,4.058,372,2.33,373,2.694,374,2.694,491,2.314,556,3.96,559,5.004,560,4.058,574,2.431,583,2.692,612,2.063,1222,3.015,1241,4.058,1689,3.278,1690,4.518,1691,4.518,1692,4.518,1693,5.216,1694,4.518,1695,3.785,1696,4.518,1697,3.785,1698,4.518,1699,3.785,1700,4.518,1701,3.785,1702,4.518,1703,3.785,1704,3.785,1705,5.216,1706,3.785,1707,4.518,1708,3.785,1709,3.714,1710,3.785,1711,3.785,1712,3.785,1713,3.785,1714,3.785,1715,3.785,1716,3.785,1717,3.785,1718,5.216,1719,3.785,1720,3.785,1721,3.785,1722,3.785]],["title/models/UserServiceModel.html",[379,1.271,1709,2.764]],["body/models/UserServiceModel.html",[2,0.149,3,0.17,4,0.128,6,0.484,7,0.836,12,0.858,14,1.043,15,0.016,16,0.73,17,0.629,18,0.948,28,0.877,30,3.336,32,0.387,40,0.17,44,1.467,53,0.012,54,0.012,100,0.877,140,1.191,222,1.935,327,2.733,332,2.609,346,2.1,379,2.015,381,4.37,387,2.649,388,3.459,574,2.867,590,4.607,1241,4.787,1690,5.329,1691,5.329,1692,5.329,1694,5.329,1696,5.329,1698,5.329,1700,5.329,1702,5.329,1707,5.329,1709,4.381,1723,4.208,1724,4.858,1725,4.858,1726,4.858,1727,4.858,1728,4.858]],["title/classes/Utils.html",[41,0.086,402,1.441]],["body/classes/Utils.html",[2,0.071,3,0.082,4,0.145,6,0.232,7,0.495,12,0.808,14,1.036,15,0.016,16,0.705,17,0.639,18,0.893,28,0.913,31,2.181,32,0.146,40,0.082,41,0.112,44,2.197,52,0.763,53,0.007,54,0.007,76,3.475,87,0.623,98,1.085,100,0.845,107,3.158,111,0.736,117,2.836,129,1.735,158,1.414,159,3.158,165,3.158,184,0.576,185,4.09,194,1.245,195,1.413,227,0.798,237,1.416,255,1.27,256,0.903,349,2.258,365,2.404,402,1.354,412,1.141,422,2.06,480,1.477,481,2.108,482,2.596,491,2.673,535,2.404,581,2.938,583,1.882,590,4.826,596,4.177,612,1.27,738,3.129,794,2.596,796,1.346,801,3.267,816,4.033,831,1.27,947,2.017,952,2.017,1024,3.954,1032,4.293,1048,2.017,1111,3.158,1114,1.658,1139,3.158,1155,3.158,1426,3.954,1729,2.017,1730,5.853,1731,3.646,1732,3.646,1733,3.646,1734,3.646,1735,3.646,1736,3.646,1737,3.646,1738,3.646,1739,3.646,1740,3.646,1741,3.646,1742,2.329,1743,3.646,1744,2.329,1745,3.646,1746,3.646,1747,2.329,1748,5.084,1749,3.646,1750,2.329,1751,3.646,1752,2.329,1753,3.646,1754,3.646,1755,2.329,1756,5.084,1757,5.084,1758,3.646,1759,5.069,1760,2.329,1761,6.331,1762,3.646,1763,2.329,1764,6.991,1765,3.646,1766,2.329,1767,3.646,1768,3.646,1769,5.853,1770,5.519,1771,2.329,1772,3.646,1773,2.329,1774,3.646,1775,3.646,1776,2.329,1777,2.329,1778,2.329,1779,3.646,1780,2.329,1781,2.329,1782,2.329,1783,2.329,1784,2.329,1785,2.329,1786,3.646,1787,3.646,1788,2.329,1789,3.646,1790,3.646,1791,3.646,1792,2.329,1793,2.329,1794,2.329,1795,2.329,1796,2.329,1797,3.646,1798,2.329,1799,2.329,1800,2.329,1801,1.658,1802,2.329,1803,2.329,1804,2.329,1805,2.329,1806,2.017,1807,2.329,1808,2.329,1809,2.329,1810,2.329,1811,2.329]],["title/pipes/WherePipe.html",[919,1.724,1169,2.56]],["body/pipes/WherePipe.html",[2,0.153,3,0.175,4,0.131,7,0.677,12,0.801,14,0.891,15,0.016,16,0.681,17,0.606,18,0.81,28,0.882,31,2.048,32,0.313,34,0.525,40,0.175,41,0.11,42,1.282,48,1.567,52,2.238,53,0.012,54,0.012,62,1.446,70,1.048,76,2.778,110,1.282,111,1.006,156,2.323,375,3.549,801,3.228,919,2.778,922,3.287,924,6.393,926,4.453,927,4.317,1114,5.256,1116,5.417,1119,5.919,1121,3.878,1137,4.317,1169,4.124,1812,4.317,1813,4.985,1814,6.254,1815,4.985,1816,4.985,1817,4.985,1818,4.985,1819,4.985,1820,4.985,1821,4.985,1822,4.985,1823,4.985,1824,4.985,1825,4.985,1826,4.985]],["title/coverage.html",[1827,4.597]],["body/coverage.html",[4,0.089,15,0.016,17,0.298,33,2.135,36,1.426,41,0.159,53,0.009,54,0.009,55,0.962,56,0.976,60,3.736,97,2.957,122,1.338,130,3.42,131,1.568,140,0.651,156,3.625,167,2.914,184,0.831,200,1.016,202,1.016,203,1.016,205,0.976,207,1.016,209,1.016,210,0.865,212,0.976,214,1.016,216,1.016,218,1.016,220,1.016,221,1.016,224,1.016,226,1.016,228,1.016,230,1.016,232,1.016,234,1.058,236,1.058,253,3.42,288,2.396,294,2.396,312,1.305,313,3.736,339,2.219,342,1.945,344,2.071,360,2.617,367,2.396,379,2.316,380,2.914,381,2.071,387,1.835,389,3.736,390,2.914,396,1.494,397,1.426,402,1.249,447,1.945,478,2.396,479,3.42,487,2.071,493,2.219,494,2.914,554,2.914,652,2.914,687,2.617,689,2.617,708,2.617,748,2.914,779,2.219,780,3.42,804,2.396,898,2.914,909,3.736,910,3.736,919,2.869,920,2.219,921,2.914,930,2.219,931,2.914,932,2.914,967,2.914,1006,2.914,1012,2.617,1018,4.16,1019,2.914,1068,2.219,1069,2.914,1087,2.914,1103,2.396,1106,2.071,1109,2.219,1110,2.914,1167,2.219,1168,2.219,1169,2.219,1177,2.914,1178,3.736,1192,2.914,1194,2.914,1197,2.914,1205,2.914,1213,2.617,1215,2.617,1218,2.914,1219,3.736,1222,1.945,1237,2.914,1263,2.914,1279,2.914,1283,2.914,1286,2.914,1291,2.914,1364,2.219,1374,2.617,1417,2.914,1422,2.914,1471,3.42,1531,2.396,1634,2.914,1646,2.914,1686,2.617,1687,2.914,1689,2.914,1709,2.396,1723,2.914,1729,2.914,1801,4.783,1806,4.852,1812,2.914,1827,2.914,1828,3.365,1829,4.804,1830,3.365,1831,3.365,1832,5.602,1833,4.804,1834,3.365,1835,7.388,1836,6.461,1837,6.11,1838,5.602,1839,3.365,1840,3.365,1841,3.365,1842,3.365,1843,3.365,1844,3.365,1845,3.365,1846,3.365,1847,3.365,1848,3.365,1849,3.365,1850,6.461,1851,4.804,1852,2.914,1853,2.914,1854,3.365,1855,3.365,1856,3.365,1857,3.365,1858,3.365,1859,4.804,1860,6.11,1861,4.804,1862,3.365,1863,3.365,1864,4.804,1865,3.365,1866,3.365,1867,3.365,1868,4.16,1869,4.804,1870,4.804,1871,3.365,1872,3.365,1873,3.365,1874,3.365,1875,3.365,1876,3.365,1877,3.365,1878,3.365,1879,4.804,1880,3.365,1881,3.365,1882,3.365,1883,3.365,1884,3.365,1885,3.365,1886,4.804,1887,3.365,1888,3.365,1889,2.617,1890,2.617,1891,3.365]],["title/dependencies.html",[241,2.177,1892,3.237]],["body/dependencies.html",[15,0.016,34,0.511,35,2.26,53,0.012,54,0.012,105,4.376,125,3.306,126,2.502,127,2.803,185,2.803,241,2.26,242,2.997,255,3.351,256,2.383,268,3.772,276,3.772,277,4.781,282,3.772,283,3.772,298,3.453,306,4.781,341,3.197,401,2.26,402,1.801,533,3.772,675,3.197,678,2.644,679,2.803,683,3.453,685,3.197,1397,4.2,1398,4.2,1511,3.772,1893,4.849,1894,7.761,1895,4.849,1896,6.146,1897,4.849,1898,4.849,1899,4.2,1900,4.849,1901,4.849,1902,4.849,1903,4.849,1904,4.849,1905,4.2,1906,6.146,1907,4.849,1908,4.849,1909,4.849,1910,4.849,1911,4.849,1912,4.849,1913,4.849,1914,4.849,1915,4.849,1916,4.849,1917,4.849,1918,4.849,1919,4.849,1920,4.849,1921,4.849,1922,4.849,1923,4.849,1924,4.849,1925,4.849,1926,4.849,1927,4.849,1928,4.849,1929,4.849,1930,4.849,1931,4.849,1932,4.849,1933,4.849,1934,4.849,1935,4.849,1936,4.849,1937,4.849]],["title/miscellaneous/enumerations.html",[1938,1.765,1939,4.046]],["body/miscellaneous/enumerations.html",[2,0.151,4,0.13,6,0.491,15,0.015,17,0.602,26,3.51,31,1.615,37,1.953,53,0.012,54,0.012,111,1.591,140,0.954,149,3.25,185,2.85,212,1.43,237,1.373,448,3.823,449,3.823,474,4.27,479,3.51,488,4.422,491,1.911,544,3.51,545,3.51,708,3.835,716,5.379,717,4.27,719,4.27,721,4.27,739,4.27,740,4.27,741,4.27,742,4.27,743,5.379,744,4.27,745,3.835,746,4.27,747,4.27,779,3.25,780,3.51,782,3.51,789,4.831,790,3.51,796,2.85,799,4.831,815,3.035,819,3.51,823,2.688,868,3.51,869,3.835,870,3.386,871,2.85,872,3.835,873,3.835,1012,3.835,1014,4.422,1015,4.27,1016,4.27,1017,4.27,1374,3.835,1414,3.835,1415,4.27,1416,3.835,1938,2.688,1939,4.27,1940,6.8,1941,4.93,1942,6.211,1943,4.93,1944,4.93,1945,4.93,1946,4.93,1947,4.93,1948,4.93,1949,4.93,1950,4.93,1951,4.93,1952,4.93,1953,4.93,1954,4.93,1955,4.93,1956,4.93,1957,4.93,1958,4.93,1959,4.93,1960,4.93,1961,4.93,1962,4.93,1963,4.93]],["title/miscellaneous/functions.html",[131,2.177,1938,1.765]],["body/miscellaneous/functions.html",[6,0.614,14,0.877,15,0.014,16,0.614,18,0.797,53,0.014,54,0.014,131,2.869,253,4.384,284,4.789,294,5.057,375,4.384,1938,3.357,1964,6.157,1965,5.332]],["title/index.html",[6,0.323,95,1.871,1966,3.237]],["body/index.html",[2,0.172,3,0.119,4,0.127,15,0.016,16,0.481,17,0.672,26,4.002,31,1.841,37,1.517,48,1.926,52,2.36,53,0.009,54,0.009,55,0.693,64,1.109,71,1.748,91,2.933,95,2.789,100,0.812,102,2.634,103,2.634,110,1.921,111,0.683,122,0.943,140,1.303,149,2.233,164,4.179,184,1.192,210,0.871,252,1.659,298,2.411,327,2.143,330,1.957,332,2.046,391,2.411,396,1.504,416,1.578,480,1.955,481,4.005,505,1.957,506,2.411,509,2.411,534,2.933,555,2.933,581,2.789,585,2.233,614,4.179,621,2.634,678,3.861,699,2.411,702,2.933,794,2.411,796,2.789,817,2.634,823,2.631,906,2.411,998,3.707,1001,3.987,1042,4.373,1100,2.634,1114,2.411,1181,2.634,1293,2.634,1294,2.634,1295,2.634,1296,2.634,1297,2.634,1298,2.634,1299,2.933,1390,2.933,1426,2.634,1436,6.134,1452,4.179,1531,3.435,1630,2.933,1889,2.634,1890,2.634,1899,2.933,1905,4.869,1965,2.933,1967,6.928,1968,6.477,1969,5.622,1970,3.386,1971,3.386,1972,3.386,1973,7.534,1974,3.386,1975,3.386,1976,3.386,1977,3.386,1978,5.622,1979,3.386,1980,7.083,1981,5.622,1982,7.311,1983,4.825,1984,4.825,1985,3.386,1986,3.386,1987,3.386,1988,3.386,1989,4.179,1990,4.825,1991,3.386,1992,4.825,1993,3.386,1994,3.386,1995,3.386,1996,3.386,1997,3.386,1998,3.386,1999,3.386,2000,3.386,2001,3.386,2002,3.386,2003,5.622,2004,3.386,2005,4.825,2006,3.386,2007,6.127,2008,4.825,2009,4.825,2010,3.386,2011,3.386,2012,3.386,2013,3.386,2014,3.386,2015,3.386,2016,3.386,2017,3.386,2018,3.386,2019,3.386,2020,2.933,2021,3.386,2022,3.386,2023,3.386,2024,6.477,2025,3.386,2026,3.386,2027,3.386,2028,3.386,2029,3.386,2030,4.825,2031,6.477,2032,4.825,2033,3.386,2034,6.127,2035,3.386,2036,3.386,2037,3.386,2038,5.622,2039,3.386]],["title/modules.html",[239,1.539]],["body/modules.html",[15,0.013,53,0.013,54,0.013,239,1.666,240,3.789,248,3.537,249,3.537,250,3.537,256,3.076,663,3.322,680,3.322,694,3.537,868,5.649,1159,3.537,1160,3.789,2040,7.934,2041,7.983,2042,5.746,2043,5.746]],["title/overview.html",[2044,4.597]],["body/overview.html",[0,2.046,15,0.016,33,0.937,36,2.268,40,0.109,41,0.069,53,0.009,54,0.009,55,0.382,56,1.957,128,1.257,193,0.767,200,2.037,202,2.037,203,2.037,205,1.957,207,2.037,209,2.037,212,1.957,214,2.037,216,2.037,218,2.037,220,2.037,221,2.037,224,2.037,226,2.037,227,0.679,228,2.037,230,2.037,232,2.037,234,2.122,236,2.122,239,1.314,240,4.79,241,1.446,242,1.378,243,1.446,244,2.688,245,2.688,246,2.688,247,2.688,248,3.294,249,4.154,250,4.694,251,2.338,252,1.52,312,2.075,379,1.016,397,2.268,663,4.516,664,2.688,665,2.688,666,2.688,680,4.408,694,4.668,695,2.688,696,2.688,697,2.688,919,1.378,920,4.449,930,3.528,963,2.414,1068,3.528,1109,4.449,1157,2.688,1158,2.688,1159,4.638,1160,5.135,1164,2.688,1165,2.688,1166,2.688,1167,4.449,1168,4.449,1169,4.449,1186,2.688,1187,2.688,1189,2.688,1207,2.688,1208,2.688,1210,2.688,1222,3.093,1362,2.688,1363,2.688,1364,3.528,1868,2.688,2044,2.688,2045,4.531,2046,4.531,2047,3.103]],["title/miscellaneous/typealiases.html",[1938,1.765,2048,4.672]],["body/miscellaneous/typealiases.html",[6,0.616,15,0.015,17,0.548,53,0.014,54,0.014,1471,4.404,1485,6.495,1507,5.357,1511,4.811,1938,3.372,2049,6.186,2050,5.357]],["title/miscellaneous/variables.html",[1801,3.326,1938,1.765]],["body/miscellaneous/variables.html",[6,0.454,15,0.016,16,0.454,17,0.664,37,1.433,47,5.117,48,1.433,52,2.147,53,0.011,54,0.011,60,3.547,97,3.637,100,0.768,110,1.686,111,1.323,117,4.596,122,2.05,130,5.24,131,3.231,140,1.269,146,3.246,147,5.117,237,1.646,356,3.246,399,2.688,418,2.125,422,2.394,588,4.937,596,4.268,749,5.117,796,2.636,870,3.221,871,2.636,909,3.547,910,4.596,1001,3.637,1002,3.896,1088,3.949,1101,3.547,1103,4.667,1106,3.637,1284,5.677,1285,6.006,1418,3.949,1471,3.246,1531,4.667,1759,5.117,1801,3.246,1852,3.949,1853,5.117,1889,3.547,1890,3.547,1938,2.486,1989,5.117,2020,5.117,2050,3.949,2051,4.56,2052,4.56,2053,4.56,2054,4.56,2055,4.56,2056,5.909,2057,5.909,2058,5.909,2059,5.909,2060,5.909,2061,5.909,2062,5.909,2063,5.909,2064,4.56,2065,4.56,2066,4.56,2067,5.909,2068,4.56,2069,4.56,2070,4.56,2071,4.56,2072,4.56]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseService.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"pipes/OrderByPipe.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"pipes/WherePipe.html":{},"coverage.html":{}}}],["0.1.5",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["0.26.1",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{}}}],["1.0.10",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["1.29.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1565,"title":{},"body":{"components/TableComponent.html":{}}}],["10.0.2",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["10/27",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1806,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["100).tofixed(2",{"_index":1797,"title":{},"body":{"classes/Utils.html":{}}}],["1024",{"_index":965,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["11",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["16/37",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":963,"title":{},"body":{"injectables/LocalStoreService.html":{},"components/TableComponent.html":{},"overview.html":{}}}],["2.1.2",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1868,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["200",{"_index":651,"title":{},"body":{"injectables/BaseService.html":{}}}],["2000",{"_index":718,"title":{},"body":{"classes/CustomNotification.html":{}}}],["21",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1630,"title":{},"body":{"components/TableComponent.html":{},"index.html":{}}}],["3.0.1",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":720,"title":{},"body":{"classes/CustomNotification.html":{}}}],["32",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["33",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["4.1.1",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["4/19",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["4/23",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["4/24",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["4/25",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4000",{"_index":722,"title":{},"body":{"classes/CustomNotification.html":{}}}],["401",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["403",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["404",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["405",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["422",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["43",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2047,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["5/23",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":716,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["5000",{"_index":724,"title":{},"body":{"classes/CustomNotification.html":{}}}],["503",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["54",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":2005,"title":{},"body":{"index.html":{}}}],["6.0.4",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["6.0.6",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["6/18",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["6/21",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["6/38",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["7.28.2",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2046,"title":{},"body":{"overview.html":{}}}],["8.8.0",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["8/36",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2045,"title":{},"body":{"overview.html":{}}}],["92",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_id",{"_index":1292,"title":{},"body":{"classes/ServerUser.html":{}}}],["_orderbycompar",{"_index":1112,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["_orderbycomparator(a",{"_index":1113,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["_wherecompar",{"_index":1813,"title":{},"body":{"pipes/WherePipe.html":{}}}],["_wherecomparer(a",{"_index":1814,"title":{},"body":{"pipes/WherePipe.html":{}}}],["a.async",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["a.click",{"_index":1562,"title":{},"body":{"components/TableComponent.html":{}}}],["a.download",{"_index":1560,"title":{},"body":{"components/TableComponent.html":{}}}],["a.href",{"_index":1556,"title":{},"body":{"components/TableComponent.html":{}}}],["a.src",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["a.tolowercas",{"_index":1130,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["a[p",{"_index":1819,"title":{},"body":{"pipes/WherePipe.html":{}}}],["a[prop",{"_index":1787,"title":{},"body":{"classes/Utils.html":{}}}],["abstract",{"_index":566,"title":{},"body":{"injectables/BaseService.html":{}}}],["abus",{"_index":1606,"title":{},"body":{"components/TableComponent.html":{}}}],["accept",{"_index":1015,"title":{},"body":{"interfaces/Media.html":{},"miscellaneous/enumerations.html":{}}}],["access",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["account",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["action",{"_index":425,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["activatedrout",{"_index":394,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activemod",{"_index":1055,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["activemodal.clos",{"_index":1064,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["activemodal.componentinstance.allowedtyp",{"_index":1061,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["activemodal.componentinstance.onconfirmpress",{"_index":1065,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["activemodal.componentinstance.url",{"_index":1059,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["actual_compon",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["address",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["admin",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/GuardsModule.html":{}}}],["alias",{"_index":2049,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["allowedtyp",{"_index":1027,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["analyt",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.com/analytics.j",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["analytics_ua_id",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["analyz",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1905,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":675,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/ServicesModule.html":{}}}],["angular/compil",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"pipes/WherePipe.html":{},"dependencies.html":{}}}],["angular/form",{"_index":685,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":683,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/MediaInputComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"pipes/SafePipe.html":{},"modules/ServicesModule.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/BaseComponent.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularfire2/firestor",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularfireauthmodul",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularfiremodul",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularfiremodule.initializeapp(environment['firebaseconfig",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularfirestoremodul",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["angularx",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["modules",{"_index":410,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["app",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["app.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["app.component.html",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["app_nam",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcompon",{"_index":56,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":615,"title":{},"body":{"injectables/BaseService.html":{}}}],["application/octet",{"_index":1601,"title":{},"body":{"components/TableComponent.html":{}}}],["appmodul",{"_index":240,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["arg",{"_index":924,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/WherePipe.html":{}}}],["args:str",{"_index":928,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["argument",{"_index":485,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{}}}],["arr",{"_index":1139,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Utils.html":{}}}],["arr.sort((a",{"_index":1785,"title":{},"body":{"classes/Utils.html":{}}}],["array",{"_index":816,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"pipes/OrderByPipe.html":{},"components/TableComponent.html":{},"classes/Utils.html":{}}}],["array.isarray(config",{"_index":1140,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["array.isarray(input",{"_index":1138,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["artifact",{"_index":2025,"title":{},"body":{"index.html":{}}}],["ask",{"_index":504,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["askforconfirm",{"_index":500,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["assets/img/noimage.png",{"_index":1053,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["assets/img/pdf_icon.png",{"_index":1051,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["assign",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["associ",{"_index":871,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":499,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"injectables/StorageService.html":{}}}],["attribut",{"_index":702,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["attrnam",{"_index":784,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["auth/loc",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["authent",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["authenticationservic",{"_index":312,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservicemodel",{"_index":339,"title":{"interfaces/AuthenticationServiceModel.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["authguard",{"_index":302,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/GuardsModule.html":{}}}],["author",{"_index":617,"title":{},"body":{"injectables/BaseService.html":{}}}],["authservic",{"_index":395,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["authurl",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["auto",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["automat",{"_index":1181,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"index.html":{}}}],["autorizedus",{"_index":1284,"title":{},"body":{"interfaces/RouteInfo.html":{},"miscellaneous/variables.html":{}}}],["avail",{"_index":2043,"title":{},"body":{"modules.html":{}}}],["await",{"_index":541,"title":{},"body":{"components/BasePageComponent.html":{},"injectables/StorageService.html":{}}}],["axio",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["axios.delete(completeurl",{"_index":646,"title":{},"body":{"injectables/BaseService.html":{}}}],["axios.get(`${url}&_start=${this.last}&_limit=${this.pagesize}&_sort=${this.orderbyfieldname}:desc",{"_index":634,"title":{},"body":{"injectables/BaseService.html":{}}}],["axios.get(completeurl",{"_index":625,"title":{},"body":{"injectables/BaseService.html":{}}}],["axios.post(completeurl",{"_index":643,"title":{},"body":{"injectables/BaseService.html":{}}}],["axios.post(url",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{}}}],["axios.put(completeurl",{"_index":645,"title":{},"body":{"injectables/BaseService.html":{}}}],["b",{"_index":1114,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"index.html":{}}}],["b.tolowercas",{"_index":1131,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["b[p",{"_index":1820,"title":{},"body":{"pipes/WherePipe.html":{}}}],["b[prop",{"_index":1786,"title":{},"body":{"classes/Utils.html":{}}}],["b[properti",{"_index":1152,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["backoffic",{"_index":1971,"title":{},"body":{"index.html":{}}}],["backoffice.access_token",{"_index":1391,"title":{},"body":{"injectables/SessionService.html":{}}}],["backoffice.languag",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["backoffice.logged_in_us",{"_index":1393,"title":{},"body":{"injectables/SessionService.html":{}}}],["backoffice.logged_in_user_md5",{"_index":1395,"title":{},"body":{"injectables/SessionService.html":{}}}],["bad_request",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":391,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"index.html":{}}}],["base'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["base.component.html",{"_index":393,"title":{},"body":{"components/BaseComponent.html":{}}}],["base.component.scss",{"_index":392,"title":{},"body":{"components/BaseComponent.html":{}}}],["base.servic",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["base_server_url",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base_url",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":200,"title":{"components/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basecomponent:21",{"_index":525,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:22",{"_index":520,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:23",{"_index":523,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:24",{"_index":521,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:25",{"_index":529,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:26",{"_index":524,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:27",{"_index":530,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:28",{"_index":527,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:29",{"_index":519,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:30",{"_index":518,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:31",{"_index":526,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:32",{"_index":522,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:33",{"_index":528,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:52",{"_index":513,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:66",{"_index":514,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:77",{"_index":515,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["basecomponent:84",{"_index":516,"title":{},"body":{"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["baseerror",{"_index":478,"title":{"classes/BaseError.html":{}},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{},"coverage.html":{}}}],["baseerror.prototyp",{"_index":486,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{}}}],["basepagecompon",{"_index":202,"title":{"components/BasePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basepagecomponent:15",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:16",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:21",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:22",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:23",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:24",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:25",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:26",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:27",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:28",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:29",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:30",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:31",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:32",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:33",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:37",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:52",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:66",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:77",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basepagecomponent:84",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["baseservic",{"_index":342,"title":{"injectables/BaseService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["baseservicemodel",{"_index":381,"title":{"interfaces/BaseServiceModel.html":{}},"body":{"interfaces/AuthenticationServiceModel.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/UserServiceModel.html":{},"coverage.html":{}}}],["baseurl",{"_index":497,"title":{},"body":{"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["basic",{"_index":1146,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["bearer",{"_index":1405,"title":{},"body":{"injectables/SessionService.html":{}}}],["befor",{"_index":506,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"index.html":{}}}],["behind",{"_index":1796,"title":{},"body":{"classes/Utils.html":{}}}],["bind",{"_index":783,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["blob",{"_index":1545,"title":{},"body":{"components/TableComponent.html":{}}}],["blob([csv",{"_index":1546,"title":{},"body":{"components/TableComponent.html":{}}}],["blob([wbout",{"_index":1597,"title":{},"body":{"components/TableComponent.html":{}}}],["block",{"_index":2006,"title":{},"body":{"index.html":{}}}],["booktyp",{"_index":1595,"title":{},"body":{"components/TableComponent.html":{}}}],["boolean",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/MediaInputComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":679,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/MediaInputComponent.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{}}}],["bottom",{"_index":746,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["break",{"_index":732,"title":{},"body":{"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["brows",{"_index":2041,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SafePipe.html":{},"classes/Utils.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1371,"title":{},"body":{"modules/ServicesModule.html":{}}}],["browsermodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["btn",{"_index":1614,"title":{},"body":{"components/TableComponent.html":{}}}],["build",{"_index":2024,"title":{},"body":{"index.html":{}}}],["button",{"_index":429,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclick",{"_index":1637,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["buttoncta",{"_index":1638,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["cach",{"_index":951,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["calendar",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["calendar_today",{"_index":894,"title":{},"body":{"components/FiltersComponent.html":{}}}],["call",{"_index":415,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ServerUser.html":{},"classes/User.html":{}}}],["cambia",{"_index":1066,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["can't",{"_index":954,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(rout",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancelbuttontext",{"_index":550,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["card",{"_index":419,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cardcollaps",{"_index":892,"title":{},"body":{"components/FiltersComponent.html":{}}}],["cardexpand",{"_index":808,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["case",{"_index":726,"title":{},"body":{"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["catch",{"_index":412,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Utils.html":{}}}],["catch((error",{"_index":628,"title":{},"body":{"injectables/BaseService.html":{},"components/RegisterComponent.html":{}}}],["catch(error",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserService.html":{}}}],["catch(reason",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["categori",{"_index":431,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cd",{"_index":1997,"title":{},"body":{"index.html":{}}}],["chang",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/MediaInputComponent.html":{},"index.html":{}}}],["check",{"_index":581,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/RecoveryPasswordComponent.html":{},"classes/Utils.html":{},"index.html":{}}}],["check_list",{"_index":869,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":1525,"title":{},"body":{"components/TableComponent.html":{}}}],["choos",{"_index":1979,"title":{},"body":{"index.html":{}}}],["class",{"_index":41,"title":{"classes/BaseError.html":{},"classes/CustomNotification.html":{},"classes/Globals.html":{},"classes/LoginResponse.html":{},"classes/MyMissingTranslationHandler.html":{},"classes/ResponseError.html":{},"classes/ServerUser.html":{},"classes/User.html":{},"classes/Utils.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"btn",{"_index":1610,"title":{},"body":{"components/TableComponent.html":{}}}],["claus",{"_index":1821,"title":{},"body":{"pipes/WherePipe.html":{}}}],["clear",{"_index":828,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"injectables/MessageService.html":{}}}],["clearfieldlist",{"_index":829,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["clearmessag",{"_index":1073,"title":{},"body":{"injectables/MessageService.html":{}}}],["clearsess",{"_index":1378,"title":{},"body":{"injectables/SessionService.html":{}}}],["cli",{"_index":1969,"title":{},"body":{"index.html":{}}}],["click",{"_index":1524,"title":{},"body":{"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["click)=\"exportlist('csv');\">csv",{"_index":1621,"title":{},"body":{"components/TableComponent.html":{}}}],["click)=\"exportlist('xlsx');\">excel",{"_index":1619,"title":{},"body":{"components/TableComponent.html":{}}}],["click)=\"exportlist(\\'csv\\');\">csv",{"_index":1633,"title":{},"body":{"components/TableComponent.html":{}}}],["click)=\"exportlist(\\'xlsx\\');\">excel",{"_index":1632,"title":{},"body":{"components/TableComponent.html":{}}}],["clon",{"_index":1745,"title":{},"body":{"classes/Utils.html":{}}}],["clone",{"_index":1730,"title":{},"body":{"classes/Utils.html":{}}}],["clone(object",{"_index":1741,"title":{},"body":{"classes/Utils.html":{}}}],["clonearray",{"_index":1731,"title":{},"body":{"classes/Utils.html":{}}}],["clonearray(list",{"_index":1743,"title":{},"body":{"classes/Utils.html":{}}}],["clonedictionari",{"_index":1732,"title":{},"body":{"classes/Utils.html":{}}}],["clonedictionary(object",{"_index":1746,"title":{},"body":{"classes/Utils.html":{}}}],["closebutton",{"_index":731,"title":{},"body":{"classes/CustomNotification.html":{}}}],["cluster_appmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_componentsmodul",{"_index":664,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declar",{"_index":665,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_export",{"_index":666,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":695,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":696,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":697,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_pagesmodul",{"_index":1157,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_import",{"_index":1158,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pipemodul",{"_index":1164,"title":{},"body":{"modules/PipeModule.html":{},"overview.html":{}}}],["cluster_pipemodule_declar",{"_index":1165,"title":{},"body":{"modules/PipeModule.html":{},"overview.html":{}}}],["cluster_pipemodule_export",{"_index":1166,"title":{},"body":{"modules/PipeModule.html":{},"overview.html":{}}}],["cluster_platformmodul",{"_index":1186,"title":{},"body":{"modules/PlatformModule.html":{},"overview.html":{}}}],["cluster_platformmodule_declar",{"_index":1187,"title":{},"body":{"modules/PlatformModule.html":{},"overview.html":{}}}],["cluster_platformmodule_export",{"_index":1189,"title":{},"body":{"modules/PlatformModule.html":{},"overview.html":{}}}],["cluster_platformmodule_import",{"_index":1188,"title":{},"body":{"modules/PlatformModule.html":{}}}],["cluster_publicmodul",{"_index":1207,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_declar",{"_index":1208,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_export",{"_index":1210,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_import",{"_index":1209,"title":{},"body":{"modules/PublicModule.html":{}}}],["cluster_servicesmodul",{"_index":1362,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_provid",{"_index":1363,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["code",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/BaseError.html":{},"classes/LoginResponse.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"index.html":{}}}],["collaps",{"_index":865,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["collect",{"_index":2010,"title":{},"body":{"index.html":{}}}],["collectionnam",{"_index":555,"title":{},"body":{"injectables/BaseService.html":{},"index.html":{}}}],["com.${encodeuricomponent(environment.app_nam",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/SessionService.html":{}}}],["command",{"_index":1993,"title":{},"body":{"index.html":{}}}],["common",{"_index":1020,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["commonmodul",{"_index":674,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["commun",{"_index":1262,"title":{},"body":{"components/RegisterComponent.html":{}}}],["company_nam",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compar",{"_index":1129,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["complet",{"_index":1257,"title":{},"body":{"components/RegisterComponent.html":{}}}],["completeurl",{"_index":622,"title":{},"body":{"injectables/BaseService.html":{}}}],["compon",{"_index":55,"title":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/base.compon",{"_index":531,"title":{},"body":{"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["component/base.component.t",{"_index":390,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{}}}],["component/base.component.ts:21",{"_index":439,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:22",{"_index":434,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:23",{"_index":437,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:24",{"_index":435,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:25",{"_index":443,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:26",{"_index":438,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:27",{"_index":444,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:28",{"_index":442,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:29",{"_index":433,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:30",{"_index":432,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:31",{"_index":440,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:32",{"_index":436,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:33",{"_index":407,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:52",{"_index":409,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:66",{"_index":414,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:77",{"_index":421,"title":{},"body":{"components/BaseComponent.html":{}}}],["component/base.component.ts:84",{"_index":427,"title":{},"body":{"components/BaseComponent.html":{}}}],["component_templ",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["components/components.modul",{"_index":707,"title":{},"body":{"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["componentsmodul",{"_index":663,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":1117,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["config.length",{"_index":1141,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["config[0",{"_index":1143,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["configur",{"_index":1982,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":505,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["confirmbuttontext",{"_index":547,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["confirmpassword",{"_index":1240,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connect",{"_index":2002,"title":{},"body":{"index.html":{}}}],["console.error(`error",{"_index":953,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["console.log('authent",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('data",{"_index":1584,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('ent",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('not",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["console.log(`cach",{"_index":958,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["console.log(`exist",{"_index":950,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["console.log(claus",{"_index":1823,"title":{},"body":{"pipes/WherePipe.html":{}}}],["console.log(completeurl",{"_index":624,"title":{},"body":{"injectables/BaseService.html":{}}}],["console.log(error",{"_index":467,"title":{},"body":{"components/BaseComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log(k",{"_index":631,"title":{},"body":{"injectables/BaseService.html":{}}}],["console.log(model",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(respons",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{}}}],["console.log(u",{"_index":1461,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(userid",{"_index":1443,"title":{},"body":{"injectables/StorageService.html":{}}}],["const",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["constructor(authservic",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(cod",{"_index":490,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{}}}],["constructor(id",{"_index":1647,"title":{},"body":{"classes/User.html":{}}}],["constructor(injector",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"pipes/SafePipe.html":{},"components/TableComponent.html":{}}}],["constructor(protect",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(publ",{"_index":1046,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["constructor(rout",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["constructor(sanit",{"_index":1031,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["contain",{"_index":620,"title":{},"body":{"injectables/BaseService.html":{}}}],["content",{"_index":614,"title":{},"body":{"injectables/BaseService.html":{},"index.html":{}}}],["continu",{"_index":549,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["cooki",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["cookielawel",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["cookielawmodul",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["cookielawseen",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["cookieservic",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["core",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["core/bas",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/core.modul",{"_index":1196,"title":{},"body":{"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["coremodul",{"_index":694,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1976,"title":{},"body":{"index.html":{}}}],["correctli",{"_index":482,"title":{},"body":{"classes/BaseError.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Utils.html":{}}}],["coverag",{"_index":1827,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["createus",{"_index":1241,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["createuser(us",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["credenti",{"_index":2016,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1567,"title":{},"body":{"components/TableComponent.html":{}}}],["crud",{"_index":509,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"index.html":{}}}],["csv",{"_index":1507,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["currenc",{"_index":1759,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["currencyl",{"_index":1795,"title":{},"body":{"classes/Utils.html":{}}}],["currentlanguag",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpag",{"_index":1483,"title":{},"body":{"components/TableComponent.html":{}}}],["currentpagechang",{"_index":1489,"title":{},"body":{"components/TableComponent.html":{}}}],["custom",{"_index":1416,"title":{},"body":{"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["customnotif",{"_index":447,"title":{"classes/CustomNotification.html":{}},"body":{"components/BaseComponent.html":{},"classes/CustomNotification.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["customnotification.shownotification(this.toastr",{"_index":472,"title":{},"body":{"components/BaseComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["customnotificationdirect",{"_index":743,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["customnotificationdur",{"_index":448,"title":{},"body":{"components/BaseComponent.html":{},"classes/CustomNotification.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["customnotificationduration.medium",{"_index":476,"title":{},"body":{"components/BaseComponent.html":{}}}],["customnotificationduration.slow",{"_index":1259,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["customnotificationduration.very_long",{"_index":1234,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["customnotificationtyp",{"_index":449,"title":{},"body":{"components/BaseComponent.html":{},"classes/CustomNotification.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["customnotificationtype.dang",{"_index":475,"title":{},"body":{"components/BaseComponent.html":{},"classes/CustomNotification.html":{}}}],["customnotificationtype.info",{"_index":736,"title":{},"body":{"classes/CustomNotification.html":{}}}],["customnotificationtype.success",{"_index":727,"title":{},"body":{"classes/CustomNotification.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["customnotificationtype.warn",{"_index":734,"title":{},"body":{"classes/CustomNotification.html":{}}}],["danger",{"_index":740,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["dashboard",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["dashboard'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["dashboard.component.html",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.compon",{"_index":1191,"title":{},"body":{"modules/PlatformModule.html":{}}}],["dashboardcompon",{"_index":203,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["data).then",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["data.append('field",{"_index":1453,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.append('fil",{"_index":1446,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.append('path",{"_index":1447,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.append('ref",{"_index":1450,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.append('refid",{"_index":1449,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.append('sourc",{"_index":1451,"title":{},"body":{"injectables/StorageService.html":{}}}],["data.email",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["data.usernam",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["data.userrol",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["date",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/User.html":{},"classes/Utils.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["date()).tolocalestring()}.csv",{"_index":1554,"title":{},"body":{"components/TableComponent.html":{}}}],["date()).tolocalestring()}.xlsx",{"_index":1599,"title":{},"body":{"components/TableComponent.html":{}}}],["date(date.year",{"_index":1792,"title":{},"body":{"classes/Utils.html":{}}}],["date(serverobject.dateofbirth",{"_index":1356,"title":{},"body":{"classes/ServerUser.html":{}}}],["date(serverobject.registeredat",{"_index":1358,"title":{},"body":{"classes/ServerUser.html":{}}}],["date.day",{"_index":1794,"title":{},"body":{"classes/Utils.html":{}}}],["date.month",{"_index":1793,"title":{},"body":{"classes/Utils.html":{}}}],["dateofbirth",{"_index":1293,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["day",{"_index":1791,"title":{},"body":{"classes/Utils.html":{}}}],["declar",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"components/TableComponent.html":{},"overview.html":{}}}],["decor",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"pipes/WherePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_languag",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["delet",{"_index":848,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{}}}],["deleteobject",{"_index":561,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["deleteobject(id",{"_index":572,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["deleteus",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["deleteuser(id",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["delimit",{"_index":1543,"title":{},"body":{"components/TableComponent.html":{}}}],["deni",{"_index":1563,"title":{},"body":{"components/TableComponent.html":{}}}],["dep",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["depend",{"_index":241,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1144,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["descend",{"_index":1770,"title":{},"body":{"classes/Utils.html":{}}}],["descript",{"_index":480,"title":{},"body":{"classes/BaseError.html":{},"modules/CoreModule.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"classes/ServerUser.html":{},"components/TableComponent.html":{},"classes/User.html":{},"classes/Utils.html":{},"index.html":{}}}],["detail",{"_index":1983,"title":{},"body":{"index.html":{}}}],["detail'},{'nam",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail.compon",{"_index":1193,"title":{},"body":{"modules/PlatformModule.html":{}}}],["detail.component.t",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["detail/us",{"_index":1192,"title":{},"body":{"modules/PlatformModule.html":{},"coverage.html":{}}}],["dev",{"_index":2018,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2017,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":503,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["dictionari",{"_index":1748,"title":{},"body":{"classes/Utils.html":{}}}],["direct",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["directive|pipe|service|class|guard|models|enum|modul",{"_index":2023,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2027,"title":{},"body":{"index.html":{}}}],["dist",{"_index":2026,"title":{},"body":{"index.html":{}}}],["document",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["document.body.appendchild(a",{"_index":1561,"title":{},"body":{"components/TableComponent.html":{}}}],["document.body.removechild(a",{"_index":1569,"title":{},"body":{"components/TableComponent.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["domsanit",{"_index":1032,"title":{},"body":{"components/MediaInputComponent.html":{},"pipes/SafePipe.html":{},"classes/Utils.html":{}}}],["don't",{"_index":536,"title":{},"body":{"components/BasePageComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["durat",{"_index":712,"title":{},"body":{"classes/CustomNotification.html":{}}}],["dynam",{"_index":1899,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e",{"_index":952,"title":{},"body":{"injectables/LocalStoreService.html":{},"classes/Utils.html":{}}}],["e2",{"_index":2035,"title":{},"body":{"index.html":{}}}],["each",{"_index":1136,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["edit",{"_index":1414,"title":{},"body":{"injectables/SessionService.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["editor",{"_index":1415,"title":{},"body":{"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{}}}],["el.attrnam",{"_index":851,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["el.nam",{"_index":895,"title":{},"body":{"components/FiltersComponent.html":{}}}],["element",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{}}}],["element.nativeelement.valu",{"_index":1788,"title":{},"body":{"classes/Utils.html":{}}}],["element[h.key",{"_index":1623,"title":{},"body":{"components/TableComponent.html":{}}}],["element[h.key].length",{"_index":1627,"title":{},"body":{"components/TableComponent.html":{}}}],["element[h.key].tolocalestr",{"_index":1624,"title":{},"body":{"components/TableComponent.html":{}}}],["elementsperpag",{"_index":1484,"title":{},"body":{"components/TableComponent.html":{}}}],["email",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/Globals.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"classes/ServerUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"index.html":{}}}],["emit",{"_index":842,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["emitev",{"_index":911,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["emitevent(eventcategori",{"_index":912,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["en",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2034,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":1985,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":668,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["enum",{"_index":738,"title":{},"body":{"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"interfaces/Media.html":{},"injectables/SessionService.html":{},"classes/Utils.html":{}}}],["enumer",{"_index":1939,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.analytics_ua_id",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.analytics_ua_id.length",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.app_nam",{"_index":471,"title":{},"body":{"components/BaseComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["environment.base_server_url",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"injectables/StorageService.html":{}}}],["environment.base_server_url}auth/forgot",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["environment.base_server_url}auth/local/regist",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["environment.base_server_url}auth/reset",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["environment.base_server_url}upload",{"_index":1444,"title":{},"body":{"injectables/StorageService.html":{}}}],["environment.base_url}reset",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["environment.curr",{"_index":1626,"title":{},"body":{"components/TableComponent.html":{}}}],["environment.default_languag",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.isfirebas",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["environments/environ",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":1135,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["error",{"_index":411,"title":{},"body":{"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{}}}],["error('path",{"_index":619,"title":{},"body":{"injectables/BaseService.html":{}}}],["error.apply(thi",{"_index":484,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{}}}],["error.messag",{"_index":473,"title":{},"body":{"components/BaseComponent.html":{}}}],["error.respons",{"_index":648,"title":{},"body":{"injectables/BaseService.html":{}}}],["error.response.data",{"_index":649,"title":{},"body":{"injectables/BaseService.html":{}}}],["error.response.data.statuscod",{"_index":650,"title":{},"body":{"injectables/BaseService.html":{}}}],["errorcod",{"_index":488,"title":{},"body":{"classes/BaseError.html":{},"injectables/BaseService.html":{},"classes/ResponseError.html":{},"miscellaneous/enumerations.html":{}}}],["etag",{"_index":945,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["event",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{}}}],["event.currenttarget",{"_index":1804,"title":{},"body":{"classes/Utils.html":{}}}],["event.srcel",{"_index":1803,"title":{},"body":{"classes/Utils.html":{}}}],["event.urlafterredirect",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["eventact",{"_index":913,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["eventcategori",{"_index":917,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["eventemitt",{"_index":800,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/MediaInputComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["eventlabel",{"_index":914,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["events.servic",{"_index":452,"title":{},"body":{"components/BaseComponent.html":{},"modules/ServicesModule.html":{}}}],["events.service.t",{"_index":910,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events.service.ts:16",{"_index":916,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["eventvalu",{"_index":915,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{}}}],["execut",{"_index":2032,"title":{},"body":{"index.html":{}}}],["exist",{"_index":593,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["expand",{"_index":864,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"overview.html":{}}}],["exportableformat",{"_index":1485,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["exportascsv",{"_index":1474,"title":{},"body":{"components/TableComponent.html":{}}}],["exportascsv(skipsw",{"_index":1505,"title":{},"body":{"components/TableComponent.html":{}}}],["exportasxlsx",{"_index":1475,"title":{},"body":{"components/TableComponent.html":{}}}],["exportasxlsx(skipsw",{"_index":1509,"title":{},"body":{"components/TableComponent.html":{}}}],["exportlist",{"_index":1476,"title":{},"body":{"components/TableComponent.html":{}}}],["exportlist(typ",{"_index":1512,"title":{},"body":{"components/TableComponent.html":{}}}],["extend",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"injectables/StorageService.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["f",{"_index":1539,"title":{},"body":{"components/TableComponent.html":{}}}],["f.placehold",{"_index":897,"title":{},"body":{"components/FiltersComponent.html":{}}}],["fals",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":1607,"title":{},"body":{"components/TableComponent.html":{}}}],["field",{"_index":782,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["field.label",{"_index":893,"title":{},"body":{"components/FiltersComponent.html":{}}}],["field.placehold",{"_index":896,"title":{},"body":{"components/FiltersComponent.html":{}}}],["field.sect",{"_index":834,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["field.section.length",{"_index":835,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["field.typ",{"_index":839,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["fieldlist",{"_index":811,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["fields.push(f",{"_index":1541,"title":{},"body":{"components/TableComponent.html":{}}}],["fieldsfin",{"_index":1572,"title":{},"body":{"components/TableComponent.html":{}}}],["fieldsfinal.push(f",{"_index":1575,"title":{},"body":{"components/TableComponent.html":{}}}],["fieldtyp",{"_index":809,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filter",{"_index":556,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["filter'",{"_index":818,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterablelist",{"_index":789,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filterablelist.user_rol",{"_index":821,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdata",{"_index":810,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdata[field.attrnam",{"_index":860,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdata[key",{"_index":845,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdata[key][key2l",{"_index":855,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdatachecklist",{"_index":847,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdatachecklists[key",{"_index":853,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdatachecklists[key].length",{"_index":856,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterdatachecklists[key].slice(0",{"_index":857,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterfieldel",{"_index":779,"title":{"interfaces/FilterFieldElement.html":{}},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["filterfieldtyp",{"_index":799,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filterfieldtype.check_list",{"_index":792,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterfieldtype.d",{"_index":859,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterfieldtype.select",{"_index":791,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filters'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["filters.')}${this.translateservice.instant('don\\'t",{"_index":1605,"title":{},"body":{"components/TableComponent.html":{}}}],["filters.component.html",{"_index":807,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["filterscompon",{"_index":205,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["final",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":700,"title":{},"body":{"modules/CoreModule.html":{}}}],["fire",{"_index":428,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["firebas",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{},"index.html":{}}}],["firebaseconfig",{"_index":1988,"title":{},"body":{"index.html":{}}}],["firestor",{"_index":1981,"title":{},"body":{"index.html":{}}}],["first",{"_index":1998,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":1294,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["flag",{"_index":2029,"title":{},"body":{"index.html":{}}}],["flatpickr",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["float",{"_index":1618,"title":{},"body":{"components/TableComponent.html":{}}}],["fn",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":1992,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forgot",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["forgotpassword",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["forgotpassword(email",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["form",{"_index":1227,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.value.newpassword",{"_index":1273,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["form.value.passwordconfirm",{"_index":1274,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["format",{"_index":1756,"title":{},"body":{"classes/Utils.html":{}}}],["formdata",{"_index":1445,"title":{},"body":{"injectables/StorageService.html":{}}}],["formsmodul",{"_index":684,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["forroot",{"_index":1176,"title":{},"body":{"modules/PipeModule.html":{}}}],["free",{"_index":1798,"title":{},"body":{"classes/Utils.html":{}}}],["fullnam",{"_index":1540,"title":{},"body":{"components/TableComponent.html":{},"classes/User.html":{}}}],["function",{"_index":131,"title":{"miscellaneous/functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FilterFieldElement.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"classes/MyMissingTranslationHandler.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":2037,"title":{},"body":{"index.html":{}}}],["g",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ga",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ga('creat",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["ga('send",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{}}}],["ga('set",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["gener",{"_index":1968,"title":{},"body":{"index.html":{}}}],["generalsectionkey",{"_index":797,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["generic_server_error",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":1966,"title":{"index.html":{}},"body":{}}],["getaccesstoken",{"_index":1379,"title":{},"body":{"injectables/SessionService.html":{}}}],["getbypassedsecuritytruststyl",{"_index":1733,"title":{},"body":{"classes/Utils.html":{}}}],["getbypassedsecuritytruststyle(url",{"_index":1749,"title":{},"body":{"classes/Utils.html":{}}}],["getcachedapirespons",{"_index":933,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["getcachedapiresponse(url",{"_index":939,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["getemailregex",{"_index":899,"title":{},"body":{"classes/Globals.html":{}}}],["getenumasarray",{"_index":1734,"title":{},"body":{"classes/Utils.html":{}}}],["getenumasarray(en",{"_index":1751,"title":{},"body":{"classes/Utils.html":{}}}],["getfilterlist",{"_index":872,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["getfilterlist(typ",{"_index":820,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["getformattedd",{"_index":1735,"title":{},"body":{"classes/Utils.html":{}}}],["getformatteddate(d",{"_index":1754,"title":{},"body":{"classes/Utils.html":{}}}],["getformattedpric",{"_index":1736,"title":{},"body":{"classes/Utils.html":{}}}],["getformattedprice(pric",{"_index":1758,"title":{},"body":{"classes/Utils.html":{}}}],["gethead",{"_index":562,"title":{},"body":{"injectables/BaseService.html":{}}}],["getloggedinus",{"_index":1380,"title":{},"body":{"injectables/SessionService.html":{}}}],["getmediabyuserid",{"_index":1425,"title":{},"body":{"injectables/StorageService.html":{}}}],["getmediabyuserid(userid",{"_index":1428,"title":{},"body":{"injectables/StorageService.html":{}}}],["getmessag",{"_index":1074,"title":{},"body":{"injectables/MessageService.html":{}}}],["getobject",{"_index":563,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["getobject(id",{"_index":576,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["getpag",{"_index":1477,"title":{},"body":{"components/TableComponent.html":{}}}],["getsanitizedurl",{"_index":1025,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["gettelephoneregex",{"_index":900,"title":{},"body":{"classes/Globals.html":{}}}],["getuserbyid",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["getuserbyid(id",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["global",{"_index":396,"title":{"classes/Globals.html":{}},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"classes/Globals.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"index.html":{}}}],["go",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/TableComponent.html":{},"index.html":{}}}],["goal",{"_index":1970,"title":{},"body":{"index.html":{}}}],["googl",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["googleanalyticseventsservic",{"_index":397,"title":{"injectables/GoogleAnalyticsEventsService.html":{}},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["gotopag",{"_index":1478,"title":{},"body":{"components/TableComponent.html":{}}}],["gotopage(index",{"_index":1516,"title":{},"body":{"components/TableComponent.html":{}}}],["graph",{"_index":2042,"title":{},"body":{"modules.html":{}}}],["group",{"_index":701,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["guards/guards.modul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["guardsmodul",{"_index":248,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules.html":{},"overview.html":{}}}],["h.titl",{"_index":1622,"title":{},"body":{"components/TableComponent.html":{}}}],["hack",{"_index":1549,"title":{},"body":{"components/TableComponent.html":{}}}],["handl",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["handle(param",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["handleapierror",{"_index":403,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["handleapierror(error",{"_index":408,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["handleerror",{"_index":564,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["handleerror(error",{"_index":578,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["hasnext",{"_index":565,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["hasnextpag",{"_index":557,"title":{},"body":{"injectables/BaseService.html":{},"components/TableComponent.html":{}}}],["head",{"_index":1583,"title":{},"body":{"components/TableComponent.html":{}}}],["header",{"_index":613,"title":{},"body":{"injectables/BaseService.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{}}}],["headers.push(f",{"_index":1577,"title":{},"body":{"components/TableComponent.html":{}}}],["height",{"_index":1028,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["help",{"_index":2038,"title":{},"body":{"index.html":{}}}],["here",{"_index":870,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hide",{"_index":785,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["home",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{}}}],["http",{"_index":1965,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:1337",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:1337/admin/plugins/cont",{"_index":2013,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":2020,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://msdn.microsoft.com/en",{"_index":1550,"title":{},"body":{"components/TableComponent.html":{}}}],["httpclient",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["httpclientmodul",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/ServicesModule.html":{}}}],["httploaderfactori",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"miscellaneous/functions.html":{}}}],["https://connect.microsoft.com/ie/feedback/details/797361/i",{"_index":1564,"title":{},"body":{"components/TableComponent.html":{}}}],["https://material.io/tools/icon",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.googl",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["i['googleanalyticsobject",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["i[r",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["i[r].l",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["i[r].q",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":1285,"title":{},"body":{"interfaces/RouteInfo.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":574,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"interfaces/Mappable.html":{},"classes/ServerUser.html":{},"components/TableComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["identifi",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["ie",{"_index":1548,"title":{},"body":{"components/TableComponent.html":{}}}],["imag",{"_index":1016,"title":{},"body":{"interfaces/Media.html":{},"miscellaneous/enumerations.html":{}}}],["implement",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"pipes/KeysPipe.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"classes/MyMissingTranslationHandler.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SafePipe.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"pipes/WherePipe.html":{}}}],["import",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["inbox",{"_index":1236,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["includ",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individualconfig",{"_index":714,"title":{},"body":{"classes/CustomNotification.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["inherit",{"_index":512,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["init",{"_index":416,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["init(path",{"_index":582,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["initexport",{"_index":1479,"title":{},"body":{"components/TableComponent.html":{}}}],["initexport(skipsw",{"_index":1518,"title":{},"body":{"components/TableComponent.html":{}}}],["initfieldlist",{"_index":832,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["initi",{"_index":585,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"index.html":{}}}],["inject",{"_index":33,"title":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"injectables/MessageService.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"injectables/MessageService.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["injector.get(activatedrout",{"_index":461,"title":{},"body":{"components/BaseComponent.html":{}}}],["injector.get(authenticationservic",{"_index":457,"title":{},"body":{"components/BaseComponent.html":{}}}],["injector.get(cookieservic",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["injector.get(googleanalyticseventsservic",{"_index":463,"title":{},"body":{"components/BaseComponent.html":{}}}],["injector.get(rout",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{}}}],["injector.get(titl",{"_index":459,"title":{},"body":{"components/BaseComponent.html":{}}}],["injector.get(toastrservic",{"_index":455,"title":{},"body":{"components/BaseComponent.html":{}}}],["injector.get(translateservic",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/TableComponent.html":{}}}],["injector.get(userservic",{"_index":1442,"title":{},"body":{"injectables/StorageService.html":{}}}],["input",{"_index":801,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"components/MediaInputComponent.html":{},"pipes/OrderByPipe.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["input'},{'nam",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["input.compon",{"_index":688,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["input.component.html",{"_index":1023,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.scss",{"_index":1022,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.t",{"_index":1019,"title":{},"body":{"components/MediaInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:18",{"_index":1037,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:19",{"_index":1039,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:20",{"_index":1038,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:21",{"_index":1036,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:22",{"_index":1035,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:24",{"_index":1044,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:33",{"_index":1040,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.component.ts:40",{"_index":1041,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["input.sort",{"_index":1147,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["input.sort().revers",{"_index":1148,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["input.sort(funct",{"_index":1150,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["input/media",{"_index":687,"title":{},"body":{"modules/ComponentsModule.html":{},"components/MediaInputComponent.html":{},"coverage.html":{}}}],["insert",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["instal",{"_index":1990,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["instanceof",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["instanti",{"_index":587,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["instead",{"_index":1184,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["integ",{"_index":2009,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":379,"title":{"interfaces/AuthenticationServiceModel.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"interfaces/RouteInfo.html":{},"interfaces/UserMedia.html":{},"interfaces/UserServiceModel.html":{}},"body":{"interfaces/AuthenticationServiceModel.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"interfaces/RouteInfo.html":{},"interfaces/UserMedia.html":{},"interfaces/UserServiceModel.html":{},"coverage.html":{},"overview.html":{}}}],["models/mapp",{"_index":388,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{},"interfaces/BaseServiceModel.html":{},"classes/User.html":{},"interfaces/UserServiceModel.html":{}}}],["iscollaps",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["iscustom",{"_index":1532,"title":{},"body":{"components/TableComponent.html":{}}}],["isdict",{"_index":1737,"title":{},"body":{"classes/Utils.html":{}}}],["isdict(v",{"_index":1762,"title":{},"body":{"classes/Utils.html":{}}}],["isfinite(a",{"_index":1123,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["isfinite(b",{"_index":1125,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["isfirebas",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isjson",{"_index":1738,"title":{},"body":{"classes/Utils.html":{}}}],["isjsonable(v",{"_index":1765,"title":{},"body":{"classes/Utils.html":{}}}],["isload",{"_index":398,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloggedin",{"_index":1381,"title":{},"body":{"injectables/SessionService.html":{}}}],["ismal",{"_index":1295,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["isn't",{"_index":1126,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["isnan(parsefloat(a",{"_index":1122,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["isnan(parsefloat(b",{"_index":1124,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["isvalid",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{}}}],["item.titl",{"_index":1107,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["j",{"_index":964,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["john@doe.com",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["join",{"_index":1261,"title":{},"body":{"components/RegisterComponent.html":{}}}],["js",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(object",{"_index":1778,"title":{},"body":{"classes/Utils.html":{}}}],["json.parse(localstorage.getitem(sessionservice.user_key",{"_index":1413,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.parse(localstorage.getitem(url",{"_index":949,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["json.stringify(json.parse(json.stringify(v",{"_index":1811,"title":{},"body":{"classes/Utils.html":{}}}],["json.stringify(us",{"_index":1400,"title":{},"body":{"injectables/SessionService.html":{}}}],["json.stringify(v",{"_index":1810,"title":{},"body":{"classes/Utils.html":{}}}],["json.stringify({data",{"_index":956,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["json2csv",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["json2csvpars",{"_index":1536,"title":{},"body":{"components/TableComponent.html":{}}}],["json2csvparser({field",{"_index":1542,"title":{},"body":{"components/TableComponent.html":{}}}],["json2csvparser.parse(this.list",{"_index":1544,"title":{},"body":{"components/TableComponent.html":{}}}],["jsonabl",{"_index":1767,"title":{},"body":{"classes/Utils.html":{}}}],["jwt",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["karma",{"_index":2033,"title":{},"body":{"index.html":{}}}],["key",{"_index":612,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"pipes/KeysPipe.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["key1l",{"_index":849,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["key1l.typ",{"_index":852,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["key2l",{"_index":854,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["keyboard_arrow_down",{"_index":891,"title":{},"body":{"components/FiltersComponent.html":{}}}],["keyboard_arrow_up",{"_index":890,"title":{},"body":{"components/FiltersComponent.html":{}}}],["keys.pip",{"_index":1173,"title":{},"body":{"modules/PipeModule.html":{}}}],["keys.push(key",{"_index":929,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspip",{"_index":920,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"modules/PipeModule.html":{},"coverage.html":{},"overview.html":{}}}],["k}_contains=${this.filters[k",{"_index":633,"title":{},"body":{"injectables/BaseService.html":{}}}],["label",{"_index":426,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["lan",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["languag",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["language_key",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["laquo",{"_index":1629,"title":{},"body":{"components/TableComponent.html":{}}}],["last",{"_index":558,"title":{},"body":{"injectables/BaseService.html":{}}}],["lastnam",{"_index":1296,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["launch",{"_index":1996,"title":{},"body":{"index.html":{}}}],["law",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["layout",{"_index":1180,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["layout.compon",{"_index":705,"title":{},"body":{"modules/CoreModule.html":{}}}],["layout.component.html",{"_index":1185,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["layout.component.scss",{"_index":1206,"title":{},"body":{"components/PublicLayoutComponent.html":{}}}],["layout.component.t",{"_index":1178,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["layouts/platform/platform",{"_index":704,"title":{},"body":{"modules/CoreModule.html":{}}}],["layouts/public/publ",{"_index":706,"title":{},"body":{"modules/CoreModule.html":{}}}],["left",{"_index":747,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/ServicesModule.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["let'",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["let\\'",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["lg",{"_index":1058,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["line",{"_index":1994,"title":{},"body":{"index.html":{}}}],["link",{"_index":430,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["list",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["list.compon",{"_index":1195,"title":{},"body":{"modules/PlatformModule.html":{}}}],["list.component.t",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["list.foreach(",{"_index":1783,"title":{},"body":{"classes/Utils.html":{}}}],["list.length}}{{list.length",{"_index":1628,"title":{},"body":{"components/TableComponent.html":{}}}],["list.push(en[l",{"_index":1800,"title":{},"body":{"classes/Utils.html":{}}}],["list.push(this.modelconstructor().map(el",{"_index":638,"title":{},"body":{"injectables/BaseService.html":{}}}],["list.push({id",{"_index":825,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["list/us",{"_index":1194,"title":{},"body":{"modules/PlatformModule.html":{},"coverage.html":{}}}],["list_${(new",{"_index":1553,"title":{},"body":{"components/TableComponent.html":{}}}],["liter",{"_index":583,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["load",{"_index":1486,"title":{},"body":{"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["loader",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["loadmoreitem",{"_index":1490,"title":{},"body":{"components/TableComponent.html":{}}}],["local",{"_index":537,"title":{},"body":{"components/BasePageComponent.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{}}}],["localstorag",{"_index":955,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["localstorage.clear",{"_index":960,"title":{},"body":{"injectables/LocalStoreService.html":{},"injectables/SessionService.html":{}}}],["localstorage.getitem(sessionservice.token_key",{"_index":1406,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(sessionservice.user_key",{"_index":1407,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(sessionservice.user_key_md5",{"_index":1408,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.removeitem(url",{"_index":959,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["localstorage.setitem(sessionservice.token_key",{"_index":1404,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(sessionservice.user_key",{"_index":1399,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(sessionservice.user_key_md5",{"_index":1401,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(url",{"_index":957,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["localstorage[x].length",{"_index":962,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["localstoreservic",{"_index":930,"title":{"injectables/LocalStoreService.html":{}},"body":{"injectables/LocalStoreService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":1390,"title":{},"body":{"injectables/SessionService.html":{},"index.html":{}}}],["logged_in_user_upd",{"_index":1071,"title":{},"body":{"injectables/MessageService.html":{}}}],["loggedinus",{"_index":498,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["login",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'nam",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["login.component.html",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":1212,"title":{},"body":{"modules/PublicModule.html":{}}}],["logincompon",{"_index":207,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginrespons",{"_index":367,"title":{"classes/LoginResponse.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["logout",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":721,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["loop",{"_index":1153,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["lowercas",{"_index":1127,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["m",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["m.mime.indexof('pdf",{"_index":1466,"title":{},"body":{"injectables/StorageService.html":{}}}],["m.parentnode.insertbefore(a",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["m.url.substr(1",{"_index":1465,"title":{},"body":{"injectables/StorageService.html":{}}}],["macrosect",{"_index":1573,"title":{},"body":{"components/TableComponent.html":{}}}],["macrosections.push(this.translateservice.instant(f",{"_index":1576,"title":{},"body":{"components/TableComponent.html":{}}}],["manager/user?source=us",{"_index":2014,"title":{},"body":{"index.html":{}}}],["map",{"_index":815,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"interfaces/Mappable.html":{},"classes/ServerUser.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["map(reverseobject",{"_index":1008,"title":{},"body":{"interfaces/Mappable.html":{}}}],["map(serverobject",{"_index":1663,"title":{},"body":{"classes/User.html":{}}}],["map(us",{"_index":1315,"title":{},"body":{"classes/ServerUser.html":{}}}],["mappabl",{"_index":387,"title":{"interfaces/Mappable.html":{}},"body":{"interfaces/AuthenticationServiceModel.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/Mappable.html":{},"classes/User.html":{},"interfaces/UserServiceModel.html":{},"coverage.html":{}}}],["maprevers",{"_index":1007,"title":{},"body":{"interfaces/Mappable.html":{},"classes/ServerUser.html":{},"classes/User.html":{}}}],["mapreverse(serverobject",{"_index":1317,"title":{},"body":{"classes/ServerUser.html":{}}}],["match",{"_index":54,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":682,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["mb",{"_index":1612,"title":{},"body":{"components/TableComponent.html":{}}}],["md",{"_index":1613,"title":{},"body":{"components/TableComponent.html":{}}}],["md5",{"_index":1397,"title":{},"body":{"injectables/SessionService.html":{},"dependencies.html":{}}}],["md5.init('#$/n0npu01fr3g4r3w1nk",{"_index":1402,"title":{},"body":{"injectables/SessionService.html":{}}}],["md5.init(json.stringify(us",{"_index":1403,"title":{},"body":{"injectables/SessionService.html":{}}}],["md5.init(su",{"_index":1411,"title":{},"body":{"injectables/SessionService.html":{}}}],["media",{"_index":210,"title":{"interfaces/Media.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ServerUser.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"coverage.html":{},"index.html":{}}}],["mediainputcompon",{"_index":209,"title":{"components/MediaInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["medialist",{"_index":1423,"title":{},"body":{"injectables/StorageService.html":{}}}],["mediamodalcompon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["mediatyp",{"_index":1014,"title":{},"body":{"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["mediatype.imag",{"_index":1468,"title":{},"body":{"injectables/StorageService.html":{}}}],["mediatype.pdf",{"_index":1467,"title":{},"body":{"injectables/StorageService.html":{}}}],["medium",{"_index":719,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["menag",{"_index":1972,"title":{},"body":{"index.html":{}}}],["menu",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["messag",{"_index":489,"title":{},"body":{"classes/BaseError.html":{},"classes/CustomNotification.html":{},"injectables/MessageService.html":{},"classes/ResponseError.html":{}}}],["message.servic",{"_index":1366,"title":{},"body":{"modules/ServicesModule.html":{}}}],["messageservic",{"_index":1068,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"pipes/KeysPipe.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"pipes/WherePipe.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Mappable.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["method_not_allow",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minlength",{"_index":2003,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":1938,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["missingtranslationhandl",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["missingtranslationhandlerparam",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["mobil",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":1043,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["modal'},{'nam",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["modal.compon",{"_index":690,"title":{},"body":{"modules/ComponentsModule.html":{},"components/MediaInputComponent.html":{}}}],["modal.component.t",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["modal/media",{"_index":689,"title":{},"body":{"modules/ComponentsModule.html":{},"components/MediaInputComponent.html":{},"coverage.html":{}}}],["modalservic",{"_index":1033,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["model",{"_index":699,"title":{},"body":{"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["model.password",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["modelconstructor",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["models/authenticationservicemodel",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["models/baseservicemodel",{"_index":611,"title":{},"body":{"injectables/BaseService.html":{}}}],["models/models/mapp",{"_index":610,"title":{},"body":{"injectables/BaseService.html":{}}}],["models/responseerror",{"_index":609,"title":{},"body":{"injectables/BaseService.html":{}}}],["models/serverus",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["models/static/glob",{"_index":445,"title":{},"body":{"components/BaseComponent.html":{}}}],["models/static/util",{"_index":446,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/MediaInputComponent.html":{},"components/TableComponent.html":{}}}],["models/ui/customnotif",{"_index":450,"title":{},"body":{"components/BaseComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["models/ui/media",{"_index":1045,"title":{},"body":{"components/MediaInputComponent.html":{},"injectables/StorageService.html":{}}}],["models/us",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BasePageComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/RegisterComponent.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["models/userservicemodel",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["modul",{"_index":239,"title":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/GuardsModule.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/GuardsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["module.id",{"_index":1199,"title":{},"body":{"components/PolicyComponent.html":{}}}],["moduleid",{"_index":1198,"title":{},"body":{"components/PolicyComponent.html":{}}}],["moment",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["month",{"_index":1790,"title":{},"body":{"classes/Utils.html":{}}}],["more",{"_index":621,"title":{},"body":{"injectables/BaseService.html":{},"components/TableComponent.html":{},"index.html":{}}}],["mr",{"_index":1620,"title":{},"body":{"components/TableComponent.html":{}}}],["mymissingtranslationhandl",{"_index":288,"title":{"classes/MyMissingTranslationHandler.html":{}},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"coverage.html":{}}}],["name",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Mappable.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["navbar'},{'nam",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["navbar.component.html",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.compon",{"_index":670,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["navbarcompon",{"_index":214,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":2019,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/BasePageComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["new",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"classes/ServerUser.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"index.html":{}}}],["newobj",{"_index":1779,"title":{},"body":{"classes/Utils.html":{}}}],["newobj[key",{"_index":1781,"title":{},"body":{"classes/Utils.html":{}}}],["newpassword",{"_index":1264,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["next",{"_index":592,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/TableComponent.html":{}}}],["nextpag",{"_index":567,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["ng",{"_index":678,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/MediaInputComponent.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":1034,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["ngbmodalmodul",{"_index":676,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["ngbmodul",{"_index":677,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{}}}],["ngbmodule.forroot",{"_index":691,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{}}}],["ngfor",{"_index":1753,"title":{},"body":{"classes/Utils.html":{}}}],["ngmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/GuardsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{}}}],["ngonchang",{"_index":827,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["ngoninit",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{}}}],["ngx",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/ComponentsModule.html":{},"classes/CustomNotification.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"components/TableComponent.html":{},"dependencies.html":{}}}],["no_internet_connect",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noopanimationsmodul",{"_index":1370,"title":{},"body":{"modules/ServicesModule.html":{}}}],["not_activ",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notif",{"_index":423,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["notificationtyp",{"_index":711,"title":{},"body":{"classes/CustomNotification.html":{}}}],["now",{"_index":2015,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1978,"title":{},"body":{"index.html":{}}}],["null",{"_index":831,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"classes/Utils.html":{}}}],["number",{"_index":491,"title":{},"body":{"classes/BaseError.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"interfaces/Media.html":{},"pipes/OrderByPipe.html":{},"classes/ResponseError.html":{},"classes/ServerUser.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["number(element.valu",{"_index":1805,"title":{},"body":{"classes/Utils.html":{}}}],["nvm",{"_index":1974,"title":{},"body":{"index.html":{}}}],["o",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":596,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/FiltersComponent.html":{},"interfaces/Mappable.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1777,"title":{},"body":{"classes/Utils.html":{}}}],["object.id",{"_index":642,"title":{},"body":{"injectables/BaseService.html":{}}}],["object.keys(en).foreach(l",{"_index":1799,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(object).foreach(funct",{"_index":1780,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(this).foreach(k",{"_index":1682,"title":{},"body":{"classes/User.html":{}}}],["object.keys(this.fields).foreach(sect",{"_index":843,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["object.keys(this.fields[section]).foreach(key",{"_index":844,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["object.keys(this.filters).foreach(k",{"_index":630,"title":{},"body":{"injectables/BaseService.html":{}}}],["object.keys(this.list[0]).foreach(f",{"_index":1538,"title":{},"body":{"components/TableComponent.html":{}}}],["object.keys(userrole).foreach(rol",{"_index":822,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["object.maprevers",{"_index":644,"title":{},"body":{"injectables/BaseService.html":{}}}],["object[key",{"_index":1782,"title":{},"body":{"classes/Utils.html":{}}}],["objecturlopt",{"_index":1559,"title":{},"body":{"components/TableComponent.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/MessageService.html":{},"injectables/StorageService.html":{}}}],["observable(subscrib",{"_index":1469,"title":{},"body":{"injectables/StorageService.html":{}}}],["on",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["onbuttonclick",{"_index":1639,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["onc",{"_index":1986,"title":{},"body":{"index.html":{}}}],["oncardexpand",{"_index":813,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["onchang",{"_index":802,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["oncheck",{"_index":1491,"title":{},"body":{"components/TableComponent.html":{}}}],["onconfirmpress",{"_index":1062,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["ondestroy",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["onelementcheck",{"_index":1480,"title":{},"body":{"components/TableComponent.html":{}}}],["onelementchecked(el",{"_index":1522,"title":{},"body":{"components/TableComponent.html":{}}}],["onfilterclick",{"_index":814,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{}}}],["onnextclick",{"_index":1481,"title":{},"body":{"components/TableComponent.html":{}}}],["onpreviousclick",{"_index":1482,"title":{},"body":{"components/TableComponent.html":{}}}],["onprogresschang",{"_index":1434,"title":{},"body":{"injectables/StorageService.html":{}}}],["onprogresschanged(100",{"_index":1454,"title":{},"body":{"injectables/StorageService.html":{}}}],["onsuccess",{"_index":1519,"title":{},"body":{"components/TableComponent.html":{}}}],["onvalueselect",{"_index":786,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["open",{"_index":1042,"title":{},"body":{"components/MediaInputComponent.html":{},"components/TableComponent.html":{},"index.html":{}}}],["openmediamod",{"_index":1026,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["option",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1155,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Utils.html":{}}}],["orderbi",{"_index":1111,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Utils.html":{}}}],["orderby(arr",{"_index":1768,"title":{},"body":{"classes/Utils.html":{}}}],["orderby.pip",{"_index":1171,"title":{},"body":{"modules/PipeModule.html":{}}}],["orderbyfieldnam",{"_index":559,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"injectables/UserService.html":{}}}],["orderbypip",{"_index":1109,"title":{"pipes/OrderByPipe.html":{}},"body":{"pipes/OrderByPipe.html":{},"modules/PipeModule.html":{},"coverage.html":{},"overview.html":{}}}],["orderbypipe._orderbycomparator(a[properti",{"_index":1151,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["origin",{"_index":1568,"title":{},"body":{"components/TableComponent.html":{}}}],["other",{"_index":798,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/MessageService.html":{}}}],["out",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"overview.html":{}}}],["outlin",{"_index":1616,"title":{},"body":{"components/TableComponent.html":{}}}],["output",{"_index":803,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/MediaInputComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["over",{"_index":1154,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["overview",{"_index":2044,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1818,"title":{},"body":{"pipes/WherePipe.html":{}}}],["packag",{"_index":1892,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{}}}],["page.compon",{"_index":703,"title":{},"body":{"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["page.component.html",{"_index":496,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page.component.scss",{"_index":495,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page.component.t",{"_index":494,"title":{},"body":{"components/BasePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":517,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page.component.ts:16",{"_index":501,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page.component.ts:22",{"_index":511,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page.component.ts:37",{"_index":502,"title":{},"body":{"components/BasePageComponent.html":{}}}],["page/bas",{"_index":493,"title":{},"body":{"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"coverage.html":{}}}],["pages",{"_index":560,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"injectables/UserService.html":{}}}],["pages/pages.modul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["pagesmodul",{"_index":249,"title":{"modules/PagesModule.html":{}},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pageview",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["pagin",{"_index":586,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["param",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BaseComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"interfaces/Mappable.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{}}}],["paramet",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Mappable.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/functions.html":{}}}],["params.key",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["pars",{"_index":1132,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["parsefloat(a",{"_index":1133,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["parsefloat(b",{"_index":1134,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["pass",{"_index":417,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ServerUser.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"index.html":{}}}],["password'},{'nam",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["password.compon",{"_index":1214,"title":{},"body":{"modules/PublicModule.html":{}}}],["password.component.html",{"_index":1221,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1220,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.t",{"_index":1219,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":1267,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:13",{"_index":1223,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":1268,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":1228,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":1224,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1265,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1226,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["password.component.ts:29",{"_index":1266,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/recoveri",{"_index":1213,"title":{},"body":{"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":1215,"title":{},"body":{"modules/PublicModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirm",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{},"components/ResetPasswordComponent.html":{}}}],["patchobject",{"_index":568,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["patchobject(object",{"_index":594,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["path",{"_index":588,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"interfaces/RouteInfo.html":{},"miscellaneous/variables.html":{}}}],["path.length",{"_index":618,"title":{},"body":{"injectables/BaseService.html":{}}}],["pdf",{"_index":1017,"title":{},"body":{"interfaces/Media.html":{},"miscellaneous/enumerations.html":{}}}],["peopl",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performlogin",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["performlogin(model",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["permiss",{"_index":1452,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["permissions/models/user.settings.json",{"_index":2000,"title":{},"body":{"index.html":{}}}],["permissions_us",{"_index":2012,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":919,"title":{"pipes/KeysPipe.html":{},"pipes/OrderByPipe.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"pipes/WherePipe.html":{}},"body":{"pipes/KeysPipe.html":{},"pipes/OrderByPipe.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":927,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/WherePipe.html":{}}}],["pipemodul",{"_index":680,"title":{"modules/PipeModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["pipemodule.forroot",{"_index":692,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["pipes/pipe.modul",{"_index":681,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["pipetransform",{"_index":926,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/OrderByPipe.html":{},"pipes/SafePipe.html":{},"pipes/WherePipe.html":{}}}],["placehold",{"_index":787,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["platform",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/PlatformLayoutComponent.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform/platform.modul",{"_index":1163,"title":{},"body":{"modules/PagesModule.html":{},"modules/PublicModule.html":{}}}],["platformlayoutcompon",{"_index":216,"title":{"components/PlatformLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platformmodul",{"_index":1159,"title":{"modules/PlatformModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["plugin",{"_index":2008,"title":{},"body":{"index.html":{}}}],["polici",{"_index":1200,"title":{},"body":{"components/PolicyComponent.html":{}}}],["policy'},{'nam",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["policy.component.html",{"_index":1201,"title":{},"body":{"components/PolicyComponent.html":{}}}],["policy/policy.compon",{"_index":1217,"title":{},"body":{"modules/PublicModule.html":{}}}],["policycompon",{"_index":218,"title":{"components/PolicyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["post",{"_index":599,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["postdata",{"_index":569,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["postdata(url",{"_index":597,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["postobject",{"_index":570,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["postobject(object",{"_index":600,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{}}}],["prefer",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["preventlocalstoragemaxusag",{"_index":934,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["prevfilterdata",{"_index":812,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["preview",{"_index":1021,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["previou",{"_index":1528,"title":{},"body":{"components/TableComponent.html":{}}}],["price",{"_index":1761,"title":{},"body":{"classes/Utils.html":{}}}],["privat",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"components/TableComponent.html":{},"index.html":{}}}],["proceed",{"_index":510,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["process",{"_index":507,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"components/TableComponent.html":{}}}],["prod",{"_index":2028,"title":{},"body":{"index.html":{}}}],["product",{"_index":1989,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{}}}],["profileimg",{"_index":1297,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["progress",{"_index":1013,"title":{},"body":{"interfaces/Media.html":{},"injectables/StorageService.html":{}}}],["project",{"_index":1967,"title":{},"body":{"index.html":{}}}],["promis",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/DashboardComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["promise(resolv",{"_index":552,"title":{},"body":{"components/BasePageComponent.html":{}}}],["prop",{"_index":1769,"title":{},"body":{"classes/Utils.html":{}}}],["properli",{"_index":1128,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["properti",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"pipes/WherePipe.html":{}}}],["propertytocheck",{"_index":1142,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["propertytocheck.substr(0",{"_index":1145,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["propertytocheck.substr(1",{"_index":1149,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["protect",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":2036,"title":{},"body":{"index.html":{}}}],["provid",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/GuardsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["public",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseError.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"components/MediaInputComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"classes/ResponseError.html":{},"injectables/SessionService.html":{}}}],["public/public.modul",{"_index":1162,"title":{},"body":{"modules/PagesModule.html":{}}}],["publiclayoutcompon",{"_index":220,"title":{"components/PublicLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["publicmodul",{"_index":1160,"title":{"modules/PublicModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["pure",{"_index":1121,"title":{},"body":{"pipes/OrderByPipe.html":{},"pipes/ReversePipe.html":{},"pipes/WherePipe.html":{}}}],["push(argu",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["pust",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["put",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/variables.html":{}}}],["queryparam",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["r",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["raquo",{"_index":1631,"title":{},"body":{"components/TableComponent.html":{}}}],["rc.12",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"injectables/StorageService.html":{},"classes/Utils.html":{}}}],["read",{"_index":1077,"title":{},"body":{"injectables/MessageService.html":{}}}],["readm",{"_index":2039,"title":{},"body":{"index.html":{}}}],["recoveri",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["recoverypasswordcompon",{"_index":221,"title":{"components/RecoveryPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["regex",{"_index":902,"title":{},"body":{"classes/Globals.html":{}}}],["regist",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["register.component.html",{"_index":1239,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1238,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.compon",{"_index":1216,"title":{},"body":{"modules/PublicModule.html":{}}}],["registercompon",{"_index":224,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registeredat",{"_index":1298,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["rejex",{"_index":905,"title":{},"body":{"classes/Globals.html":{}}}],["relat",{"_index":2011,"title":{},"body":{"index.html":{}}}],["reload",{"_index":2021,"title":{},"body":{"index.html":{}}}],["removecachedapirespons",{"_index":935,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["removecachedapiresponse(url",{"_index":942,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["replac",{"_index":2001,"title":{},"body":{"index.html":{}}}],["requestpassword",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{}}}],["requestpassword(email",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{}}}],["requir",{"_index":1531,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["require('json2csv').pars",{"_index":1537,"title":{},"body":{"components/TableComponent.html":{}}}],["res.data.jwt",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["res.push(this.clone(",{"_index":1784,"title":{},"body":{"classes/Utils.html":{}}}],["res.url",{"_index":1456,"title":{},"body":{"injectables/StorageService.html":{}}}],["reset",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/ServicesModule.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/Utils.html":{},"overview.html":{}}}],["resetinputfil",{"_index":1739,"title":{},"body":{"classes/Utils.html":{}}}],["resetinputfile(el",{"_index":1772,"title":{},"body":{"classes/Utils.html":{}}}],["resetpassword",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{}}}],["resetpassword(password",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{}}}],["resetpasswordcompon",{"_index":226,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resolve(!!result.valu",{"_index":553,"title":{},"body":{"components/BasePageComponent.html":{}}}],["respect",{"_index":781,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["respons",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["response.data",{"_index":635,"title":{},"body":{"injectables/BaseService.html":{},"injectables/StorageService.html":{}}}],["response.data.foreach(el",{"_index":637,"title":{},"body":{"injectables/BaseService.html":{}}}],["response.data.length",{"_index":636,"title":{},"body":{"injectables/BaseService.html":{}}}],["response.data[0",{"_index":1455,"title":{},"body":{"injectables/StorageService.html":{}}}],["responseerror",{"_index":487,"title":{"classes/ResponseError.html":{}},"body":{"classes/BaseError.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/ResponseError.html":{},"coverage.html":{}}}],["rest",{"_index":795,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.valu",{"_index":1609,"title":{},"body":{"components/TableComponent.html":{}}}],["return",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PipeModule.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["returnurl",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["revers",{"_index":1280,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["reverse.pip",{"_index":1175,"title":{},"body":{"modules/PipeModule.html":{}}}],["reverseobject",{"_index":1010,"title":{},"body":{"interfaces/Mappable.html":{}}}],["reversepip",{"_index":1167,"title":{"pipes/ReversePipe.html":{}},"body":{"modules/PipeModule.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":745,"title":{},"body":{"classes/CustomNotification.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role",{"_index":823,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["root",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["rout",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["routeinfo",{"_index":1106,"title":{"interfaces/RouteInfo.html":{}},"body":{"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routermodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["routermodule.forroot(approut",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["routerstatesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes.config",{"_index":1105,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["routes.config.t",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1973,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["rxjs/index",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/StorageService.html":{}}}],["s",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/TableComponent.html":{}}}],["s.createelement(o",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["s.getelementsbytagname(o)[0",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["s.r.l",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s[f",{"_index":1582,"title":{},"body":{"components/TableComponent.html":{}}}],["safe",{"_index":1287,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safe.pip",{"_index":1174,"title":{},"body":{"modules/PipeModule.html":{}}}],["safepip",{"_index":1168,"title":{"pipes/SafePipe.html":{}},"body":{"modules/PipeModule.html":{},"pipes/SafePipe.html":{},"coverage.html":{},"overview.html":{}}}],["safestyl",{"_index":1048,"title":{},"body":{"components/MediaInputComponent.html":{},"classes/Utils.html":{}}}],["same",{"_index":794,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Utils.html":{},"index.html":{}}}],["sanit",{"_index":1024,"title":{},"body":{"components/MediaInputComponent.html":{},"pipes/SafePipe.html":{},"classes/Utils.html":{}}}],["sanitizer.bypasssecuritytruststyle(`url(${url",{"_index":1807,"title":{},"body":{"classes/Utils.html":{}}}],["save",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/SessionService.html":{},"index.html":{}}}],["saveloggedinus",{"_index":1382,"title":{},"body":{"injectables/SessionService.html":{}}}],["saveloggedinuser(us",{"_index":1387,"title":{},"body":{"injectables/SessionService.html":{}}}],["scaffold",{"_index":2022,"title":{},"body":{"index.html":{}}}],["script",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["secondari",{"_index":1617,"title":{},"body":{"components/TableComponent.html":{}}}],["section",{"_index":788,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["see",{"_index":418,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":819,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["selector",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["seleziona",{"_index":1067,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["send",{"_index":1070,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessag",{"_index":1075,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessage(messag",{"_index":1079,"title":{},"body":{"injectables/MessageService.html":{}}}],["sent",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/RecoveryPasswordComponent.html":{}}}],["serv",{"_index":1984,"title":{},"body":{"index.html":{}}}],["server",{"_index":1980,"title":{},"body":{"index.html":{}}}],["server/models/serverus",{"_index":1666,"title":{},"body":{"classes/User.html":{}}}],["server/services/authentication.servic",{"_index":453,"title":{},"body":{"components/BaseComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{}}}],["server/services/storage.servic",{"_index":1372,"title":{},"body":{"modules/ServicesModule.html":{}}}],["server/services/user.servic",{"_index":1229,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"modules/ServicesModule.html":{}}}],["server_temporary_unavail",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serverobject",{"_index":1319,"title":{},"body":{"classes/ServerUser.html":{},"classes/User.html":{}}}],["serverobject._id",{"_index":1344,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.dateofbirth",{"_index":1355,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.descript",{"_index":1352,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.email",{"_index":1349,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.firstnam",{"_index":1350,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.id",{"_index":1345,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.ismal",{"_index":1359,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.lastnam",{"_index":1351,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.media",{"_index":1360,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.profileimg",{"_index":1354,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.registeredat",{"_index":1357,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.telephon",{"_index":1353,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverobject.userrol",{"_index":1346,"title":{},"body":{"classes/ServerUser.html":{}}}],["serverus",{"_index":344,"title":{"classes/ServerUser.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"classes/ServerUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["serveruser.map(thi",{"_index":1685,"title":{},"body":{"classes/User.html":{}}}],["serveruser.mapreverse(serverobject",{"_index":1681,"title":{},"body":{"classes/User.html":{}}}],["servic",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["services/googl",{"_index":451,"title":{},"body":{"components/BaseComponent.html":{}}}],["services/services.modul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["services/session.servic",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/LoginResponse.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"components/SidebarComponent.html":{},"classes/User.html":{}}}],["servicesmodul",{"_index":250,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["session.servic",{"_index":1367,"title":{},"body":{"modules/ServicesModule.html":{}}}],["sessionservic",{"_index":36,"title":{"injectables/SessionService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionservice.clearsess",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["sessionservice.getaccesstoken",{"_index":616,"title":{},"body":{"injectables/BaseService.html":{}}}],["sessionservice.getloggedinus",{"_index":540,"title":{},"body":{"components/BasePageComponent.html":{}}}],["sessionservice.getloggedinuser().userrol",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{}}}],["sessionservice.isloggedin",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["sessionservice.saveloggedinuser(u",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["set",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["setcachedapirespons",{"_index":936,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["setcachedapiresponse(url",{"_index":944,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["setpagin",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["setpagination(pages",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["setpric",{"_index":1740,"title":{},"body":{"classes/Utils.html":{}}}],["setprice($ev",{"_index":1775,"title":{},"body":{"classes/Utils.html":{}}}],["settitl",{"_index":404,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["settitle(titl",{"_index":413,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shared/filters/filters.compon",{"_index":669,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["shared/media",{"_index":686,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["shared/table/table.compon",{"_index":672,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["shared/toolbar/toolbar.compon",{"_index":673,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["show",{"_index":422,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["showcancelbutton",{"_index":546,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["showerrornotif",{"_index":405,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["showerrornotification(titl",{"_index":420,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["showexportact",{"_index":1487,"title":{},"body":{"components/TableComponent.html":{}}}],["showindexhead",{"_index":1488,"title":{},"body":{"components/TableComponent.html":{}}}],["shownotif",{"_index":709,"title":{},"body":{"classes/CustomNotification.html":{}}}],["shownotification(toastr",{"_index":710,"title":{},"body":{"classes/CustomNotification.html":{}}}],["sidebar",{"_index":1418,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["sidebar.component.html",{"_index":1420,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1419,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar",{"_index":1104,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":671,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebar_rout",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidebar_routes.filter(valu",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebarcompon",{"_index":228,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{}}}],["signup(email",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{}}}],["simpl",{"_index":805,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["size",{"_index":1057,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["skiphead",{"_index":1588,"title":{},"body":{"components/TableComponent.html":{}}}],["skipswal",{"_index":1508,"title":{},"body":{"components/TableComponent.html":{}}}],["slow",{"_index":717,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["sm",{"_index":1615,"title":{},"body":{"components/TableComponent.html":{}}}],["smd5",{"_index":1410,"title":{},"body":{"injectables/SessionService.html":{}}}],["someth",{"_index":1183,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["sort",{"_index":1156,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"modules/GuardsModule.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"modules/PublicModule.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"pipes/ReversePipe.html":{},"interfaces/RouteInfo.html":{},"pipes/SafePipe.html":{},"classes/ServerUser.html":{},"modules/ServicesModule.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"index.html":{}}}],["specif",{"_index":1430,"title":{},"body":{"injectables/StorageService.html":{}}}],["specifi",{"_index":790,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../app.component.t",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../customnotification.t",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filters.component.t",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../googl",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../media.t",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../responseerror.t",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../session.service.t",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sidebar",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../table.component.t",{"_index":2050,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/@core/bas",{"_index":389,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"coverage.html":{}}}],["src/app/@core/core.module.t",{"_index":698,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/@core/layouts/platform/platform",{"_index":1177,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"coverage.html":{}}}],["src/app/@core/layouts/public/publ",{"_index":1205,"title":{},"body":{"components/PublicLayoutComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:15",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.module.ts:29",{"_index":1086,"title":{},"body":{"classes/MyMissingTranslationHandler.html":{}}}],["src/app/components/@shared/filters/filters.component.t",{"_index":780,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:130",{"_index":884,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:14",{"_index":885,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:15",{"_index":889,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:16",{"_index":886,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:17",{"_index":887,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:18",{"_index":888,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:20",{"_index":875,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:21",{"_index":876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:22",{"_index":877,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:23",{"_index":874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:34",{"_index":880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:49",{"_index":883,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:53",{"_index":882,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:60",{"_index":878,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:68",{"_index":881,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/filters/filters.component.ts:87",{"_index":879,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/@shared/media",{"_index":1018,"title":{},"body":{"components/MediaInputComponent.html":{},"coverage.html":{}}}],["src/app/components/@shared/table/table.component.t",{"_index":1471,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/@shared/table/table.component.ts:105",{"_index":1506,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:138",{"_index":1510,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:20",{"_index":1499,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:200",{"_index":1520,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:21",{"_index":1497,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:22",{"_index":1498,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:23",{"_index":1501,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:24",{"_index":1494,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:25",{"_index":1496,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:26",{"_index":1493,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:27",{"_index":1500,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:28",{"_index":1495,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:29",{"_index":1503,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:30",{"_index":1502,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:31",{"_index":1504,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:33",{"_index":1530,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:34",{"_index":1529,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:35",{"_index":1492,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:41",{"_index":1521,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:47",{"_index":1527,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:55",{"_index":1526,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:67",{"_index":1517,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:75",{"_index":1514,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:86",{"_index":1523,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/table/table.component.ts:94",{"_index":1513,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.t",{"_index":1634,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.ts:10",{"_index":1641,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.ts:11",{"_index":1642,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.ts:12",{"_index":1640,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.ts:20",{"_index":1644,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/@shared/toolbar/toolbar.component.ts:9",{"_index":1643,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/components.module.t",{"_index":667,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:13",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:24",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:26",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/sidebar/sidebar",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/sidebar/sidebar.component.t",{"_index":1417,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:16",{"_index":1421,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.metadata.t",{"_index":1283,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/guards/adminguard.t",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/adminguard.ts:19",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/adminguard.ts:7",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/authguard.t",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/authguard.ts:19",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/authguard.ts:7",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/guards.module.t",{"_index":918,"title":{},"body":{"modules/GuardsModule.html":{}}}],["src/app/models/authenticationservicemodel.t",{"_index":380,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{},"coverage.html":{}}}],["src/app/models/authenticationservicemodel.ts:10",{"_index":383,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{}}}],["src/app/models/authenticationservicemodel.ts:12",{"_index":384,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{}}}],["src/app/models/authenticationservicemodel.ts:14",{"_index":382,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{}}}],["src/app/models/authenticationservicemodel.ts:6",{"_index":385,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{}}}],["src/app/models/authenticationservicemodel.ts:8",{"_index":386,"title":{},"body":{"interfaces/AuthenticationServiceModel.html":{}}}],["src/app/models/baseservicemodel.t",{"_index":652,"title":{},"body":{"interfaces/BaseServiceModel.html":{},"coverage.html":{}}}],["src/app/models/baseservicemodel.ts:14",{"_index":657,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:19",{"_index":662,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:26",{"_index":656,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:33",{"_index":658,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:35",{"_index":654,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:37",{"_index":661,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:46",{"_index":660,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:48",{"_index":659,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:50",{"_index":653,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/baseservicemodel.ts:58",{"_index":655,"title":{},"body":{"interfaces/BaseServiceModel.html":{}}}],["src/app/models/models/mappable.t",{"_index":1006,"title":{},"body":{"interfaces/Mappable.html":{},"coverage.html":{}}}],["src/app/models/models/mappable.ts:15",{"_index":1011,"title":{},"body":{"interfaces/Mappable.html":{}}}],["src/app/models/models/mappable.ts:9",{"_index":1009,"title":{},"body":{"interfaces/Mappable.html":{}}}],["src/app/models/responseerror.t",{"_index":479,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/responseerror.ts:13",{"_index":1278,"title":{},"body":{"classes/ResponseError.html":{}}}],["src/app/models/responseerror.ts:14",{"_index":1277,"title":{},"body":{"classes/ResponseError.html":{}}}],["src/app/models/responseerror.ts:4",{"_index":483,"title":{},"body":{"classes/BaseError.html":{}}}],["src/app/models/static/globals.t",{"_index":898,"title":{},"body":{"classes/Globals.html":{},"coverage.html":{}}}],["src/app/models/static/globals.ts:16",{"_index":903,"title":{},"body":{"classes/Globals.html":{}}}],["src/app/models/static/globals.ts:7",{"_index":901,"title":{},"body":{"classes/Globals.html":{}}}],["src/app/models/static/utils.t",{"_index":1729,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/models/static/utils.ts:105",{"_index":1776,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:11",{"_index":1742,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:117",{"_index":1750,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:127",{"_index":1763,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:137",{"_index":1766,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:21",{"_index":1747,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:35",{"_index":1744,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:51",{"_index":1771,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:60",{"_index":1773,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:70",{"_index":1755,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:81",{"_index":1760,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/static/utils.ts:91",{"_index":1752,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/models/ui/customnotification.t",{"_index":708,"title":{},"body":{"classes/CustomNotification.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/ui/customnotification.ts:13",{"_index":713,"title":{},"body":{"classes/CustomNotification.html":{}}}],["src/app/models/ui/media.t",{"_index":1012,"title":{},"body":{"interfaces/Media.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/user.t",{"_index":1646,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":1650,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:11",{"_index":1651,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:12",{"_index":1661,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:13",{"_index":1658,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:14",{"_index":1649,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:15",{"_index":1660,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:16",{"_index":1659,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:17",{"_index":1653,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1655,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:19",{"_index":1657,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:21",{"_index":1648,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:58",{"_index":1664,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":1654,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":1662,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:71",{"_index":1665,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":1652,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":1656,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/usermedia.t",{"_index":1687,"title":{},"body":{"interfaces/UserMedia.html":{},"coverage.html":{}}}],["src/app/models/userservicemodel.t",{"_index":1723,"title":{},"body":{"interfaces/UserServiceModel.html":{},"coverage.html":{}}}],["src/app/models/userservicemodel.ts:10",{"_index":1728,"title":{},"body":{"interfaces/UserServiceModel.html":{}}}],["src/app/models/userservicemodel.ts:12",{"_index":1725,"title":{},"body":{"interfaces/UserServiceModel.html":{}}}],["src/app/models/userservicemodel.ts:20",{"_index":1726,"title":{},"body":{"interfaces/UserServiceModel.html":{}}}],["src/app/models/userservicemodel.ts:6",{"_index":1727,"title":{},"body":{"interfaces/UserServiceModel.html":{}}}],["src/app/models/userservicemodel.ts:8",{"_index":1724,"title":{},"body":{"interfaces/UserServiceModel.html":{}}}],["src/app/pages/pages.module.t",{"_index":1161,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/pages/platform/dashboard/dashboard.component.t",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/pages/platform/dashboard/dashboard.component.ts:16",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/platform/dashboard/dashboard.component.ts:9",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/platform/platform.module.t",{"_index":1190,"title":{},"body":{"modules/PlatformModule.html":{}}}],["src/app/pages/platform/us",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/public/login/login.component.t",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/public/login/login.component.ts:12",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/public/login/login.component.ts:13",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/public/login/login.component.ts:20",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/public/login/login.component.ts:25",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/public/login/login.component.ts:32",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/public/policy/policy.component.t",{"_index":1197,"title":{},"body":{"components/PolicyComponent.html":{},"coverage.html":{}}}],["src/app/pages/public/policy/policy.component.ts:16",{"_index":1203,"title":{},"body":{"components/PolicyComponent.html":{}}}],["src/app/pages/public/policy/policy.component.ts:9",{"_index":1202,"title":{},"body":{"components/PolicyComponent.html":{}}}],["src/app/pages/public/public.module.t",{"_index":1211,"title":{},"body":{"modules/PublicModule.html":{}}}],["src/app/pages/public/recoveri",{"_index":1218,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/public/register/register.component.t",{"_index":1237,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/public/register/register.component.ts:14",{"_index":1246,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/register/register.component.ts:15",{"_index":1247,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/register/register.component.ts:16",{"_index":1242,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/register/register.component.ts:23",{"_index":1244,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/register/register.component.ts:26",{"_index":1245,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/register/register.component.ts:33",{"_index":1243,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/public/reset",{"_index":1263,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pipes/keys.pipe.t",{"_index":921,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["src/app/pipes/keys.pipe.ts:5",{"_index":925,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["src/app/pipes/orderby.pipe.t",{"_index":1110,"title":{},"body":{"pipes/OrderByPipe.html":{},"coverage.html":{}}}],["src/app/pipes/orderby.pipe.ts:24",{"_index":1118,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["src/app/pipes/orderby.pipe.ts:5",{"_index":1120,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["src/app/pipes/orderby.pipe.ts:6",{"_index":1115,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["src/app/pipes/pipe.module.t",{"_index":1170,"title":{},"body":{"modules/PipeModule.html":{}}}],["src/app/pipes/reverse.pipe.t",{"_index":1279,"title":{},"body":{"pipes/ReversePipe.html":{},"coverage.html":{}}}],["src/app/pipes/reverse.pipe.ts:8",{"_index":1281,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["src/app/pipes/safe.pipe.t",{"_index":1286,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["src/app/pipes/safe.pipe.ts:7",{"_index":1289,"title":{},"body":{"pipes/SafePipe.html":{}}}],["src/app/pipes/where.pipe.t",{"_index":1812,"title":{},"body":{"pipes/WherePipe.html":{},"coverage.html":{}}}],["src/app/pipes/where.pipe.ts:18",{"_index":1816,"title":{},"body":{"pipes/WherePipe.html":{}}}],["src/app/pipes/where.pipe.ts:5",{"_index":1817,"title":{},"body":{"pipes/WherePipe.html":{}}}],["src/app/pipes/where.pipe.ts:7",{"_index":1815,"title":{},"body":{"pipes/WherePipe.html":{}}}],["src/app/server/models/serveruser.t",{"_index":1291,"title":{},"body":{"classes/ServerUser.html":{},"coverage.html":{}}}],["src/app/server/models/serveruser.ts:10",{"_index":1302,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:11",{"_index":1303,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:12",{"_index":1312,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:13",{"_index":1310,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:14",{"_index":1301,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:15",{"_index":1311,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:16",{"_index":1306,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:17",{"_index":1309,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:18",{"_index":1313,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:19",{"_index":1308,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:27",{"_index":1316,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:48",{"_index":1318,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:5",{"_index":1300,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:6",{"_index":1305,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:7",{"_index":1314,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:8",{"_index":1304,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/models/serveruser.ts:9",{"_index":1307,"title":{},"body":{"classes/ServerUser.html":{}}}],["src/app/server/services/authentication.service.t",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["src/app/server/services/authentication.service.ts:12",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:18",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:22",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:32",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:52",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:56",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:60",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/server/services/authentication.service.ts:73",{"_index":1005,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/server/services/base.service.t",{"_index":554,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["src/app/server/services/base.service.ts:117",{"_index":601,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:12",{"_index":608,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:129",{"_index":595,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:13",{"_index":605,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:14",{"_index":606,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:141",{"_index":573,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:15",{"_index":603,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:16",{"_index":604,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:160",{"_index":598,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:17",{"_index":607,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:177",{"_index":579,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:18",{"_index":571,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:23",{"_index":575,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:27",{"_index":589,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:37",{"_index":584,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:56",{"_index":602,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:71",{"_index":580,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:75",{"_index":577,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/base.service.ts:91",{"_index":591,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/app/server/services/storage.service.t",{"_index":1422,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/server/services/storage.service.ts:13",{"_index":1438,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:14",{"_index":1437,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:15",{"_index":1439,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:17",{"_index":1432,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:19",{"_index":1427,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:35",{"_index":1435,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/storage.service.ts:63",{"_index":1429,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/server/services/user.service.t",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/server/services/user.service.ts:15",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:19",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:24",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:29",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:33",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:37",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:52",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/server/services/user.service.ts:9",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/googl",{"_index":909,"title":{},"body":{"injectables/GoogleAnalyticsEventsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/loc",{"_index":931,"title":{},"body":{"injectables/LocalStoreService.html":{},"coverage.html":{}}}],["src/app/services/message.service.t",{"_index":1069,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts:10",{"_index":1081,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:12",{"_index":1082,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:19",{"_index":1080,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:26",{"_index":1076,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:35",{"_index":1078,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/services.module.t",{"_index":1365,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/session.service.t",{"_index":1374,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/session.service.ts:10",{"_index":1394,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:11",{"_index":1396,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:18",{"_index":1389,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:24",{"_index":1384,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:28",{"_index":1386,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:32",{"_index":1383,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:36",{"_index":1385,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:9",{"_index":1392,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/environments/environment.prod.t",{"_index":1889,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1890,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":1179,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["standardlogin",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{}}}],["standardlogin(email",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"classes/LoginResponse.html":{}}}],["start",{"_index":95,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{},"components/TableComponent.html":{},"index.html":{}}}],["startgoogleanalyt",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["startgoogleanalytics(i",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["state.url",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/MessageService.html":{},"pipes/OrderByPipe.html":{},"modules/PipeModule.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{}}}],["storag",{"_index":538,"title":{},"body":{"components/BasePageComponent.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{}}}],["storageservic",{"_index":1364,"title":{"injectables/StorageService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["store",{"_index":534,"title":{},"body":{"components/BasePageComponent.html":{},"index.html":{}}}],["store.servic",{"_index":1368,"title":{},"body":{"modules/ServicesModule.html":{}}}],["store.service.t",{"_index":932,"title":{},"body":{"injectables/LocalStoreService.html":{},"coverage.html":{}}}],["store.service.ts:10",{"_index":940,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["store.service.ts:24",{"_index":946,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["store.service.ts:39",{"_index":943,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["store.service.ts:48",{"_index":938,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["store.service.ts:5",{"_index":937,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["store.service.ts:57",{"_index":941,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["strapi",{"_index":1436,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["strapi@alpha",{"_index":1991,"title":{},"body":{"index.html":{}}}],["stream",{"_index":1602,"title":{},"body":{"components/TableComponent.html":{}}}],["string",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"classes/BaseError.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"classes/Globals.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["su",{"_index":1409,"title":{},"body":{"injectables/SessionService.html":{}}}],["subject",{"_index":1072,"title":{},"body":{"injectables/MessageService.html":{}}}],["submit",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submit(form",{"_index":1225,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submit(model",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submiteventtoanalyt",{"_index":406,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submiteventtoanalytics(categori",{"_index":424,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscrib",{"_index":1424,"title":{},"body":{"injectables/StorageService.html":{}}}],["success",{"_index":739,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["successfulli",{"_index":1258,"title":{},"body":{"components/RegisterComponent.html":{}}}],["super",{"_index":492,"title":{},"body":{"classes/BaseError.html":{},"classes/ResponseError.html":{}}}],["super(injector",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["super.ngoninit",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["support",{"_index":868,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["sure",{"_index":543,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["svg",{"_index":2040,"title":{},"body":{"modules.html":{}}}],["swal",{"_index":532,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["sweetalert2",{"_index":533,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":725,"title":{},"body":{"classes/CustomNotification.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["t",{"_index":590,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"injectables/LocalStoreService.html":{},"interfaces/Mappable.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{}}}],["tabl",{"_index":804,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["table.component.html",{"_index":1473,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1472,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecompon",{"_index":230,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["telephon",{"_index":906,"title":{},"body":{"classes/Globals.html":{},"classes/ServerUser.html":{},"classes/User.html":{},"index.html":{}}}],["templat",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["termin",{"_index":1995,"title":{},"body":{"index.html":{}}}],["test",{"_index":2031,"title":{},"body":{"index.html":{}}}],["text",{"_index":544,"title":{},"body":{"components/BasePageComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["text/plain",{"_index":1558,"title":{},"body":{"components/TableComponent.html":{}}}],["then((respons",{"_index":647,"title":{},"body":{"injectables/BaseService.html":{}}}],["then((result",{"_index":1608,"title":{},"body":{"components/TableComponent.html":{}}}],["then(r",{"_index":1232,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["then(respons",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{}}}],["then(u",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.activatedrout",{"_index":460,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.activatedroute.snapshot.queryparammap.get('cod",{"_index":1271,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.allowedtyp",{"_index":1060,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.authservic",{"_index":456,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.authservice.logout",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.resetpassword(form.value.newpassword",{"_index":1275,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.signup(this.user.email",{"_index":1254,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.standardlogin(model.email",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authurl",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["this.baseurl",{"_index":623,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.cardexpand",{"_index":863,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.clearsess",{"_index":1412,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.cod",{"_index":1270,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.confirmpassword",{"_index":1250,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.confirmpassword.length",{"_index":1249,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.cookielawel.cookielawseen",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cookielawseen",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cookieservic",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cookieservice.get(appcomponent.language_key",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cookieservice.set(appcomponent.language_key",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createus",{"_index":1252,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currentlanguag",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentpag",{"_index":1533,"title":{},"body":{"components/TableComponent.html":{}}}],["this.currentpagechange.emit(this.currentpag",{"_index":1534,"title":{},"body":{"components/TableComponent.html":{}}}],["this.dateofbirth",{"_index":1675,"title":{},"body":{"classes/User.html":{}}}],["this.deleteobject(id",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["this.descript",{"_index":1672,"title":{},"body":{"classes/User.html":{}}}],["this.email",{"_index":1669,"title":{},"body":{"classes/User.html":{}}}],["this.exportascsv(tru",{"_index":1535,"title":{},"body":{"components/TableComponent.html":{}}}],["this.exportasxlsx(tru",{"_index":1571,"title":{},"body":{"components/TableComponent.html":{}}}],["this.fieldlist.find(el",{"_index":850,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.fieldlist.foreach((field",{"_index":833,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.fieldlist.foreach(field",{"_index":858,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.fields[field.sect",{"_index":837,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.fields[field.section][field.attrnam",{"_index":838,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.fields[section][key",{"_index":846,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.filt",{"_index":629,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.filterdata",{"_index":841,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.filters[k",{"_index":632,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.firstnam",{"_index":1670,"title":{},"body":{"classes/User.html":{}}}],["this.fullnam",{"_index":1680,"title":{},"body":{"classes/User.html":{}}}],["this.generalsectionkey",{"_index":836,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.gethead",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{}}}],["this.getheader()).then((respons",{"_index":626,"title":{},"body":{"injectables/BaseService.html":{},"injectables/StorageService.html":{}}}],["this.getobject(id",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["this.googleanalyticseventsservic",{"_index":462,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.googleanalyticseventsservice.emitevent(categori",{"_index":477,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.handleapierror(error",{"_index":1235,"title":{},"body":{"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.handleapierror(reason",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handleerror(error",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["this.hasnextpag",{"_index":640,"title":{},"body":{"injectables/BaseService.html":{},"components/TableComponent.html":{}}}],["this.id",{"_index":1667,"title":{},"body":{"classes/User.html":{}}}],["this.init('us",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["this.initexport(skipsw",{"_index":1570,"title":{},"body":{"components/TableComponent.html":{}}}],["this.initfieldlist",{"_index":826,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.isload",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.ismal",{"_index":1678,"title":{},"body":{"classes/User.html":{}}}],["this.last",{"_index":639,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.lastnam",{"_index":1671,"title":{},"body":{"classes/User.html":{}}}],["this.list.map(",{"_index":1579,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadmoreitems.emit(onsuccess",{"_index":1603,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loggedinus",{"_index":539,"title":{},"body":{"components/BasePageComponent.html":{}}}],["this.media",{"_index":1679,"title":{},"body":{"classes/User.html":{}}}],["this.medialist",{"_index":1462,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.medialist.push(media",{"_index":1457,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.modalservice.open(mediamodalcompon",{"_index":1056,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.modelconstructor().map(response.data",{"_index":627,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.onbuttonclicked.emit",{"_index":1645,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.oncardexpanded.emit",{"_index":867,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.onfilterclicked.emit(filterdata",{"_index":862,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.pages",{"_index":641,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.password",{"_index":1674,"title":{},"body":{"classes/User.html":{}}}],["this.patchobject(us",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["this.performlogin(model",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.postdata(url",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["this.preventlocalstoragemaxusag",{"_index":948,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["this.prevfilterdata",{"_index":830,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.prevfilterdata[field.attrnam",{"_index":840,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["this.profileimg",{"_index":1677,"title":{},"body":{"classes/User.html":{}}}],["this.registeredat",{"_index":1676,"title":{},"body":{"classes/User.html":{}}}],["this.reset",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rout",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/recoveri",{"_index":1272,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1260,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.sanit",{"_index":1054,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1290,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.setpagin",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["this.settitle('dashboard",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.settitle('login",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.settitle('polici",{"_index":1204,"title":{},"body":{"components/PolicyComponent.html":{}}}],["this.settitle(this.titl",{"_index":466,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.settitle(this.translateservice.instant('recoveri",{"_index":1230,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["this.settitle(this.translateservice.instant('regist",{"_index":1248,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.settitle(this.translateservice.instant('reset",{"_index":1269,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.showerrornotification(error.cod",{"_index":468,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.startgoogleanalytics(window",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subject.asobserv",{"_index":1085,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.subject.next",{"_index":1084,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.subject.next({text",{"_index":1083,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.subscrib",{"_index":1470,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.subscriber.complet",{"_index":1459,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.subscriber.next(this.medialist",{"_index":1458,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.telephon",{"_index":1673,"title":{},"body":{"classes/User.html":{}}}],["this.titl",{"_index":465,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.titleservic",{"_index":458,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.titleservice.settitle(`${titl",{"_index":469,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.tmp",{"_index":1826,"title":{},"body":{"pipes/WherePipe.html":{}}}],["this.tmp.length",{"_index":1137,"title":{},"body":{"pipes/OrderByPipe.html":{},"pipes/WherePipe.html":{}}}],["this.tmp.push(...input.filter(item",{"_index":1824,"title":{},"body":{"pipes/WherePipe.html":{}}}],["this.toastr",{"_index":454,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.transl",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.setdefaultlang(this.currentlanguag",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(this.currentlanguag",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservic",{"_index":464,"title":{},"body":{"components/BaseComponent.html":{},"components/TableComponent.html":{}}}],["this.translateservice.instant('ar",{"_index":542,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["this.translateservice.instant('list",{"_index":1592,"title":{},"body":{"components/TableComponent.html":{}}}],["this.translateservice.instant('list')}_${(new",{"_index":1598,"title":{},"body":{"components/TableComponent.html":{}}}],["this.translateservice.instant('no",{"_index":551,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["this.translateservice.instant('oper",{"_index":1256,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.translateservice.instant('password",{"_index":1276,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('reset",{"_index":1233,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["this.translateservice.instant('thi",{"_index":1604,"title":{},"body":{"components/TableComponent.html":{}}}],["this.translateservice.instant('y",{"_index":548,"title":{},"body":{"components/BasePageComponent.html":{},"components/TableComponent.html":{}}}],["this.translateservice.instant(titl",{"_index":470,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.url",{"_index":1052,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.url.indexof('.pdf",{"_index":1050,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.urlchang",{"_index":1047,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.urlchange.emit(this.url",{"_index":1063,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["this.us",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.password",{"_index":1251,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.password).then",{"_index":1255,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.userrol",{"_index":1253,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userrol",{"_index":1668,"title":{},"body":{"classes/User.html":{}}}],["this.userservic",{"_index":1441,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.userservice.forgotpassword(form.email",{"_index":1231,"title":{},"body":{"components/RecoveryPasswordComponent.html":{}}}],["this.userservice.getuserbyid(userid",{"_index":1460,"title":{},"body":{"injectables/StorageService.html":{}}}],["this[k",{"_index":1683,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"classes/LoginResponse.html":{},"injectables/UserService.html":{}}}],["time",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{}}}],["time[dur",{"_index":730,"title":{},"body":{"classes/CustomNotification.html":{}}}],["timeout",{"_index":729,"title":{},"body":{"classes/CustomNotification.html":{}}}],["titl",{"_index":399,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RouteInfo.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["title.length",{"_index":824,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["titleservic",{"_index":400,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tmp",{"_index":1119,"title":{},"body":{"pipes/OrderByPipe.html":{},"pipes/WherePipe.html":{}}}],["toastr",{"_index":401,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/ServicesModule.html":{},"dependencies.html":{}}}],["toastr.error(messag",{"_index":733,"title":{},"body":{"classes/CustomNotification.html":{}}}],["toastr.info(messag",{"_index":737,"title":{},"body":{"classes/CustomNotification.html":{}}}],["toastr.success(messag",{"_index":728,"title":{},"body":{"classes/CustomNotification.html":{}}}],["toastr.warning(messag",{"_index":735,"title":{},"body":{"classes/CustomNotification.html":{}}}],["toastrmodul",{"_index":1369,"title":{},"body":{"modules/ServicesModule.html":{}}}],["toastrmodule.forroot",{"_index":1373,"title":{},"body":{"modules/ServicesModule.html":{}}}],["toastrservic",{"_index":441,"title":{},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":904,"title":{},"body":{"classes/Globals.html":{}}}],["togglecardexpand",{"_index":866,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["token",{"_index":1388,"title":{},"body":{"injectables/SessionService.html":{}}}],["token_key",{"_index":1375,"title":{},"body":{"injectables/SessionService.html":{}}}],["toolbar",{"_index":1611,"title":{},"body":{"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'nam",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":1636,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":1635,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcompon",{"_index":232,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"modules/ComponentsModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":744,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["total",{"_index":1515,"title":{},"body":{"components/TableComponent.html":{}}}],["transform",{"_index":922,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/OrderByPipe.html":{},"pipes/ReversePipe.html":{},"pipes/SafePipe.html":{},"pipes/WherePipe.html":{}}}],["transform(input",{"_index":1116,"title":{},"body":{"pipes/OrderByPipe.html":{},"pipes/WherePipe.html":{}}}],["transform(url",{"_index":1288,"title":{},"body":{"pipes/SafePipe.html":{}}}],["transform(valu",{"_index":923,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/ReversePipe.html":{}}}],["translat",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["translate/cor",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/ComponentsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"components/TableComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["translatehttploader(http",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["translateload",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["translatemodul",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"classes/MyMissingTranslationHandler.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["translatemodule.forchild",{"_index":693,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{}}}],["translatemodule.forroot",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["translateservic",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{}}}],["treat",{"_index":1566,"title":{},"body":{"components/TableComponent.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["tri",{"_index":947,"title":{},"body":{"injectables/LocalStoreService.html":{},"classes/Utils.html":{}}}],["true",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"pipes/WherePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslint",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1975,"title":{},"body":{"index.html":{}}}],["type",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthenticationServiceModel.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"interfaces/Mappable.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ResponseError.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"d",{"_index":1757,"title":{},"body":{"classes/Utils.html":{}}}],["type=\"fil",{"_index":1774,"title":{},"body":{"classes/Utils.html":{}}}],["typealias",{"_index":2048,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1808,"title":{},"body":{"classes/Utils.html":{}}}],["types/mo",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1398,"title":{},"body":{"injectables/SessionService.html":{},"dependencies.html":{}}}],["u",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"classes/ServerUser.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["u.dateofbirth",{"_index":1337,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.descript",{"_index":1327,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.email",{"_index":1348,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.firstnam",{"_index":1323,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.fullnam",{"_index":1361,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.id",{"_index":1343,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.ismal",{"_index":1333,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.lastnam",{"_index":1325,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.map(res.data.us",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["u.media",{"_index":1335,"title":{},"body":{"classes/ServerUser.html":{},"injectables/StorageService.html":{}}}],["u.media.foreach(m",{"_index":1464,"title":{},"body":{"injectables/StorageService.html":{}}}],["u.media.length",{"_index":1463,"title":{},"body":{"injectables/StorageService.html":{}}}],["u.profileimg",{"_index":1331,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.registeredat",{"_index":1340,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.telephon",{"_index":1329,"title":{},"body":{"classes/ServerUser.html":{}}}],["u.userrol",{"_index":1320,"title":{},"body":{"classes/ServerUser.html":{}}}],["u[k",{"_index":1684,"title":{},"body":{"classes/User.html":{}}}],["ui",{"_index":1182,"title":{},"body":{"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{}}}],["ui/media",{"_index":1688,"title":{},"body":{"interfaces/UserMedia.html":{}}}],["unauthor",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefin",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"pipes/WherePipe.html":{},"miscellaneous/functions.html":{}}}],["unexpectedli",{"_index":1822,"title":{},"body":{"pipes/WherePipe.html":{}}}],["unexportedfield",{"_index":1574,"title":{},"body":{"components/TableComponent.html":{}}}],["unexportedfields.foreach(f",{"_index":1581,"title":{},"body":{"components/TableComponent.html":{}}}],["unexportedfields.push(f",{"_index":1578,"title":{},"body":{"components/TableComponent.html":{}}}],["uniqu",{"_index":2004,"title":{},"body":{"index.html":{}}}],["unit",{"_index":2030,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":474,"title":{},"body":{"components/BaseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unprocessable_ent",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updat",{"_index":1987,"title":{},"body":{"index.html":{}}}],["updateus",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["updateuser(us",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{}}}],["upload",{"_index":1426,"title":{},"body":{"injectables/StorageService.html":{},"classes/Utils.html":{},"index.html":{}}}],["upload(userid",{"_index":1433,"title":{},"body":{"injectables/StorageService.html":{}}}],["url",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"injectables/LocalStoreService.html":{},"classes/LoginResponse.html":{},"interfaces/Media.html":{},"components/MediaInputComponent.html":{},"pipes/SafePipe.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["urlchang",{"_index":1030,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["us",{"_index":481,"title":{},"body":{"classes/BaseError.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"injectables/MessageService.html":{},"components/PolicyComponent.html":{},"classes/Utils.html":{},"index.html":{}}}],["us/library/ie/hh779016.aspx",{"_index":1551,"title":{},"body":{"components/TableComponent.html":{}}}],["usag",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["useclass",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["usefactori",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"classes/MyMissingTranslationHandler.html":{}}}],["uselanguag",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["uselanguage(languag",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["user",{"_index":140,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user().maprevers",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{}}}],["user.dateofbirth",{"_index":1338,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.dateofbirth.gettim",{"_index":1339,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.descript",{"_index":1328,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.email",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["user.firstnam",{"_index":1324,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.ismal",{"_index":1334,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.lastnam",{"_index":1326,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.maprevers",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["user.media",{"_index":1336,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.password",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profileimg",{"_index":1332,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.registeredat",{"_index":1341,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.registeredat.gettim",{"_index":1342,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.servic",{"_index":1440,"title":{},"body":{"injectables/StorageService.html":{}}}],["user.telephon",{"_index":1330,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.userrol",{"_index":1321,"title":{},"body":{"classes/ServerUser.html":{}}}],["user.userrole.tostr",{"_index":1322,"title":{},"body":{"classes/ServerUser.html":{}}}],["user/media",{"_index":1448,"title":{},"body":{"injectables/StorageService.html":{}}}],["user_key",{"_index":1376,"title":{},"body":{"injectables/SessionService.html":{}}}],["user_key_md5",{"_index":1377,"title":{},"body":{"injectables/SessionService.html":{}}}],["user_rol",{"_index":873,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userdetailcompon",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":1431,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UserMedia.html":{}}}],["userlistcompon",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"components/PlatformLayoutComponent.html":{},"modules/PlatformModule.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermedia",{"_index":1686,"title":{"interfaces/UserMedia.html":{}},"body":{"interfaces/UserMedia.html":{},"coverage.html":{}}}],["usernam",{"_index":1299,"title":{},"body":{"classes/ServerUser.html":{},"index.html":{}}}],["userrol",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RouteInfo.html":{},"classes/ServerUser.html":{},"injectables/SessionService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"miscellaneous/variables.html":{}}}],["userrole.custom",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginResponse.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["userrole.editor",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrole[serverobject.userrole.touppercas",{"_index":1347,"title":{},"body":{"classes/ServerUser.html":{}}}],["userservic",{"_index":1222,"title":{"injectables/UserService.html":{}},"body":{"components/RecoveryPasswordComponent.html":{},"modules/ServicesModule.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservicemodel",{"_index":1709,"title":{"interfaces/UserServiceModel.html":{}},"body":{"injectables/UserService.html":{},"interfaces/UserServiceModel.html":{},"coverage.html":{}}}],["util",{"_index":402,"title":{"classes/Utils.html":{}},"body":{"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TableComponent.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{}}}],["utils.clone(",{"_index":1580,"title":{},"body":{"components/TableComponent.html":{}}}],["utils.getbypassedsecuritytruststyle(this.url",{"_index":1049,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["utils.getformatteddate(filterdata[field.attrname]).gettim",{"_index":861,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["utils.getformattedprice(element[h.key",{"_index":1625,"title":{},"body":{"components/TableComponent.html":{}}}],["utils.isjsonable(v",{"_index":1809,"title":{},"body":{"classes/Utils.html":{}}}],["v",{"_index":1764,"title":{},"body":{"classes/Utils.html":{}}}],["valid",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["valu",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"pipes/KeysPipe.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"classes/MyMissingTranslationHandler.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/ReversePipe.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/Utils.html":{},"pipes/WherePipe.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.autorizedusers.indexof(sessionservice.getloggedinuser().userrol",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["values.revers",{"_index":1282,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"components/NavbarComponent.html":{},"pipes/OrderByPipe.html":{},"components/PlatformLayoutComponent.html":{},"components/PolicyComponent.html":{},"components/PublicLayoutComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{}}}],["variabl",{"_index":1801,"title":{"miscellaneous/variables.html":{}},"body":{"classes/Utils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":508,"title":{},"body":{"components/BasePageComponent.html":{},"components/DashboardComponent.html":{},"components/PolicyComponent.html":{}}}],["version",{"_index":1977,"title":{},"body":{"index.html":{}}}],["very_long",{"_index":742,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["very_slow",{"_index":741,"title":{},"body":{"classes/CustomNotification.html":{},"miscellaneous/enumerations.html":{}}}],["verylong",{"_index":723,"title":{},"body":{"classes/CustomNotification.html":{}}}],["veryslow",{"_index":715,"title":{},"body":{"classes/CustomNotification.html":{}}}],["via",{"_index":2007,"title":{},"body":{"index.html":{}}}],["view",{"_index":535,"title":{},"body":{"components/BasePageComponent.html":{},"components/MediaInputComponent.html":{},"components/PlatformLayoutComponent.html":{},"components/PublicLayoutComponent.html":{},"classes/Utils.html":{}}}],["viewchild",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["viewchild('cookielaw",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["voic",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/BaseComponent.html":{},"components/BasePageComponent.html":{},"injectables/BaseService.html":{},"classes/CustomNotification.html":{},"components/DashboardComponent.html":{},"components/FiltersComponent.html":{},"injectables/GoogleAnalyticsEventsService.html":{},"injectables/LocalStoreService.html":{},"components/LoginComponent.html":{},"components/MediaInputComponent.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"components/PolicyComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["want",{"_index":796,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"injectables/MessageService.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["warn",{"_index":545,"title":{},"body":{"components/BasePageComponent.html":{},"classes/CustomNotification.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":806,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["wb",{"_index":1589,"title":{},"body":{"components/TableComponent.html":{}}}],["wbout",{"_index":1593,"title":{},"body":{"components/TableComponent.html":{}}}],["welcom",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["where.pip",{"_index":1172,"title":{},"body":{"modules/PipeModule.html":{}}}],["wherepip",{"_index":1169,"title":{"pipes/WherePipe.html":{}},"body":{"modules/PipeModule.html":{},"pipes/WherePipe.html":{},"coverage.html":{},"overview.html":{}}}],["wherepipe._wherecomparer(item",{"_index":1825,"title":{},"body":{"pipes/WherePipe.html":{}}}],["width",{"_index":1029,"title":{},"body":{"components/MediaInputComponent.html":{}}}],["window.document.createelement('a",{"_index":1555,"title":{},"body":{"components/TableComponent.html":{}}}],["window.ev",{"_index":1802,"title":{},"body":{"classes/Utils.html":{}}}],["window.navigator.mssaveblob(blob",{"_index":1552,"title":{},"body":{"components/TableComponent.html":{}}}],["window.navigator.mssaveblob(new",{"_index":1596,"title":{},"body":{"components/TableComponent.html":{}}}],["window.navigator.mssaveoropenblob",{"_index":1547,"title":{},"body":{"components/TableComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1557,"title":{},"body":{"components/TableComponent.html":{}}}],["window.url.createobjecturl(new",{"_index":1600,"title":{},"body":{"components/TableComponent.html":{}}}],["wink",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["winkular",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoveryPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["winkular/plugins/us",{"_index":1999,"title":{},"body":{"index.html":{}}}],["work",{"_index":817,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{},"index.html":{}}}],["ws",{"_index":1585,"title":{},"body":{"components/TableComponent.html":{}}}],["x",{"_index":961,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["x.indexof(environment.base_server_url",{"_index":966,"title":{},"body":{"injectables/LocalStoreService.html":{}}}],["xlsx",{"_index":1511,"title":{},"body":{"components/TableComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["xlsx.utils.aoa_to_sheet(head",{"_index":1586,"title":{},"body":{"components/TableComponent.html":{}}}],["xlsx.utils.book_append_sheet(wb",{"_index":1591,"title":{},"body":{"components/TableComponent.html":{}}}],["xlsx.utils.book_new",{"_index":1590,"title":{},"body":{"components/TableComponent.html":{}}}],["xlsx.utils.sheet_add_json(w",{"_index":1587,"title":{},"body":{"components/TableComponent.html":{}}}],["xlsx.write(wb",{"_index":1594,"title":{},"body":{"components/TableComponent.html":{}}}],["ye",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseService.html":{},"interfaces/BaseServiceModel.html":{},"components/FiltersComponent.html":{},"classes/ResponseError.html":{},"injectables/SessionService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["year",{"_index":1789,"title":{},"body":{"classes/Utils.html":{}}}],["yuo",{"_index":793,"title":{},"body":{"interfaces/FilterFieldElement.html":{},"components/FiltersComponent.html":{}}}],["z]{2,6",{"_index":908,"title":{},"body":{"classes/Globals.html":{}}}],["za",{"_index":907,"title":{},"body":{"classes/Globals.html":{}}}],["zone.j",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PipeModule.html":{},"modules/PlatformModule.html":{},"modules/PublicModule.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/AdminGuard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/AdminGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/AdminGuard.ts:19\n                            \n                        \n\n\n                \n                    \n                            allows access just to ADMIN\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {SessionService, UserRole} from '../services/session.service';\nimport {Observable} from 'rxjs/index';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  /**\n   * allows access just to ADMIN\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable | Promise | boolean}\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (SessionService.isLoggedIn() && SessionService.getLoggedInUser().userRole === UserRole.ADMIN) {\n      return true;\n    } else {\n      console.log('not authenticated or not admin');\n      this.router.navigate(['/dashboard']);\n      return false;\n    }\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cookieLawEl\n                            \n                            \n                                    Private\n                                cookieLawSeen\n                            \n                            \n                                cookieService\n                            \n                            \n                                currentLanguage\n                            \n                            \n                                    Static\n                                LANGUAGE_KEY\n                            \n                            \n                                languages\n                            \n                            \n                                router\n                            \n                            \n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                startGoogleAnalytics\n                            \n                            \n                                useLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startGoogleAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startGoogleAnalytics(i: , s: , o: , g: , r: , a?: , m?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            start Google Analytics\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        o\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        g\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        r\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        m\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseLanguage(language: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            change the language and save preference as cookie\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        language\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieLawEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieLawEl:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieLawSeen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieLawSeen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookieService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieService:     CookieService\n\n                    \n                \n                    \n                        \n                            Type :     CookieService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentLanguage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.DEFAULT_LANGUAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LANGUAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LANGUAGE_KEY:     \n\n                    \n                \n                    \n                        \n                            Default value : `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.language`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        languages:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['en', 'it']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit, ViewChild} from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CookieService} from 'ngx-cookie-service';\n\ndeclare const ga: Function;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public static LANGUAGE_KEY = `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.language`;\n\n  router: Router;\n  translate: TranslateService;\n  cookieService: CookieService;\n  currentLanguage: string = environment.DEFAULT_LANGUAGE;\n  languages = ['en', 'it'];\n\n  @ViewChild('cookieLaw')\n  private cookieLawEl: any;\n  private cookieLawSeen: boolean;\n\n  constructor(private injector: Injector) {\n    this.router = injector.get(Router);\n    this.translate = injector.get(TranslateService);\n    this.cookieService = injector.get(CookieService);\n\n    /**\n     * Get user language from cookies or set the default one.\n     *\n     * @type {string}\n     */\n    this.currentLanguage = this.cookieService.get(AppComponent.LANGUAGE_KEY) || environment.DEFAULT_LANGUAGE;\n    this.translate.setDefaultLang(this.currentLanguage);\n\n    /**\n     * Put in the environment your ANALYTICS_UA_ID from Google to start analyzing the platform usage, every time that the page change data will be sent\n     *\n     */\n    if (environment.ANALYTICS_UA_ID.length > 0) {\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          ga('set', 'page', event.urlAfterRedirects);\n          ga('send', 'pageview');\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n    /**\n     * Put in the environment your ANALYTICS_UA_ID and create a Google Analytics instance\n     *\n     */\n    if (environment.ANALYTICS_UA_ID.length > 0) {\n      this.startGoogleAnalytics(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n      ga('create', environment.ANALYTICS_UA_ID, 'auto');\n    }\n    this.cookieLawSeen = this.cookieLawEl.cookieLawSeen;\n  }\n\n  /**\n   * change the language and save preference as cookie\n   *\n   * @param {string} language\n   */\n  useLanguage(language: string) {\n    this.currentLanguage = language;\n    this.translate.use(this.currentLanguage);\n    this.cookieService.set(AppComponent.LANGUAGE_KEY, this.currentLanguage);\n  }\n\n  /**\n   * start Google Analytics\n   *\n   * @param i\n   * @param s\n   * @param o\n   * @param g\n   * @param r\n   * @param a\n   * @param m\n   */\n  private startGoogleAnalytics(i, s, o, g, r, a?, m?) {\n    console.log('entered');\n    i['GoogleAnalyticsObject'] = r;\n    i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments);\n    };\n    i[r].l = new Date();\n    a = s.createElement(o);\n    m = s.getElementsByTagName(o)[0];\n    a.async = 1;\n    a.src = g;\n    m.parentNode.insertBefore(a, m);\n  }\n}\n\n    \n\n    \n        \n  {{lan}}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{lan}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    \n                            \n                            \n                                    GuardsModule\n                            \n                            \n                                    PagesModule\n                            \n                            \n                                    ServicesModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {AppRoutes} from './app.routing';\nimport {RouterModule} from '@angular/router';\nimport {PagesModule} from './pages/pages.module';\nimport {ServicesModule} from './services/services.module';\nimport {GuardsModule} from './guards/guards.module';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\nimport {environment} from '../environments/environment';\n\nimport {TranslateModule, TranslateLoader, MissingTranslationHandler, MissingTranslationHandlerParams} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {CookieLawModule} from 'angular2-cookie-law';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n/**\n * handle strings with missing translation value and return the default string.\n *\n */\nexport class MyMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams) {\n    return params.key;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(AppRoutes),\n    PagesModule,\n    ServicesModule,\n    GuardsModule,\n    CookieLawModule,\n    HttpClientModule,\n    /**\n     * Modules for translation\n     *\n     */\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useClass: MyMissingTranslationHandler\n      }\n    }),\n    /**\n     * include Firebase modules just if you need it, set environment.isFirebase = true\n     *\n     */\n    ...environment.isFirebase ? [\n      AngularFireModule.initializeApp(environment['firebaseConfig']),\n      AngularFirestoreModule,\n      AngularFireAuthModule\n    ] : []\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/AuthGuard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/AuthGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/AuthGuard.ts:19\n                            \n                        \n\n\n                \n                    \n                            allows access just to authenticated user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {SessionService} from '../services/session.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  /**\n   * allows access just to authenticated user\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable | Promise | boolean}\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (SessionService.isLoggedIn()) {\n      console.log('authenticated');\n      return true;\n    } else {\n      console.log('not authenticated');\n      this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    }\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                    Protected\n                                modelConstructor\n                            \n                            \n                                requestPassword\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signup\n                            \n                            \n                                standardLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/server/services/authentication.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            modelConstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        modelConstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(password: , passwordConfirmation: , code: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        password\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        passwordConfirmation\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        code\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            standardLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nstandardLogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.BASE_SERVER_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {User} from '../../models/User';\nimport {AuthenticationServiceModel} from '../../models/AuthenticationServiceModel';\nimport {environment} from '../../../environments/environment';\nimport {SessionService, UserRole} from '../../services/session.service';\nimport axios from 'axios';\nimport {BaseService} from './base.service';\nimport {ServerUser} from '../models/ServerUser';\n\n@Injectable()\nexport class AuthenticationService extends BaseService implements AuthenticationServiceModel {\n  private authUrl = environment.BASE_SERVER_URL;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  protected modelConstructor(): User {\n    return new User();\n  }\n\n  signup(email: string, password: string) {\n    const url = `${environment.BASE_SERVER_URL}auth/local/register`;\n    const data = new User().mapReverse() as any;\n    data.email = email;\n    data.username = email;\n    data.password = password;\n    data.userRole = UserRole.CUSTOMER;\n    return this.postData(url, data);\n  }\n\n  standardLogin(email: string, password: string): Promise {\n    const url = this.authUrl + 'auth/local';\n    const data = {\n      identifier: email,\n      password: password\n    };\n    return axios.post(url, data, this.getHeader())\n      .then(response => {\n        console.log(response);\n        const res = response as LoginResponse;\n        let u = new User();\n        u = u.map(res.data.user);\n        SessionService.saveLoggedInUser(u, res.data.jwt);\n        return u;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  requestPassword(email: string): Promise {\n    return undefined;\n  }\n\n  logout() {\n    SessionService.clearSession();\n  }\n\n  resetPassword(password, passwordConfirmation, code): Promise {\n    const url = `${environment.BASE_SERVER_URL}auth/reset-password`;\n    const data = {\n      code,\n      password,\n      passwordConfirmation\n    };\n    return this.postData(url, data);\n  }\n\n}\n\nclass LoginResponse {\n  data: {\n    jwt,\n    user: ServerUser\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationServiceModel.html":{"url":"models/AuthenticationServiceModel.html","title":"models - AuthenticationServiceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationServiceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/AuthenticationServiceModel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseServiceModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    logout\n                                \n                                \n                                    requestPassword\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    signup\n                                \n                                \n                                    standardLogin\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/AuthenticationServiceModel.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/AuthenticationServiceModel.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(password: , passwordConfirmation: , code: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/AuthenticationServiceModel.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        password\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        passwordConfirmation\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        code\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/AuthenticationServiceModel.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            standardLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nstandardLogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/AuthenticationServiceModel.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Mappable} from './models/Mappable';\nimport {BaseServiceModel} from './BaseServiceModel';\n\nexport models AuthenticationServiceModel> extends BaseServiceModel {\n\n  signup(email: string, password: string): Promise;\n\n  standardLogin(email: string, password: string): Promise;\n\n  requestPassword(email: string): Promise;\n\n  resetPassword(password, passwordConfirmation, code): Promise;\n\n  logout();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@core/base-component/base.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base\n            \n\n            \n                styleUrls\n                base.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./base.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/@core/base-component/base.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-component/base.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {Globals} from '../../models/static/Globals';\nimport {Utils} from '../../models/static/Utils';\nimport {Title} from '@angular/platform-browser';\nimport {CustomNotification, CustomNotificationDuration, CustomNotificationType} from '../../models/ui/CustomNotification';\nimport {ToastrService} from 'ngx-toastr';\nimport {UserRole} from '../../services/session.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {GoogleAnalyticsEventsService} from '../../services/google-analytics-events.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AuthenticationService} from '../../server/services/authentication.service';\n\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent {\n  title: string;\n  environment = environment;\n  isLoading = false;\n  globals = Globals;\n  userRole = UserRole;\n  router: Router;\n  utils = Utils;\n  toastr: ToastrService;\n  authService: AuthenticationService;\n  activatedRoute: ActivatedRoute;\n  titleService: Title;\n  googleAnalyticsEventsService: GoogleAnalyticsEventsService;\n  translateService: TranslateService;\n\n  constructor(protected injector: Injector) {\n    this.toastr = injector.get(ToastrService);\n    this.router = injector.get(Router);\n    this.authService = injector.get(AuthenticationService);\n    this.titleService = injector.get(Title);\n    this.activatedRoute = injector.get(ActivatedRoute);\n    this.googleAnalyticsEventsService = injector.get(GoogleAnalyticsEventsService);\n    this.translateService = injector.get(TranslateService);\n    this.title = '';\n    this.setTitle(this.title);\n  }\n\n  /**\n   * handle API error for you! Implement it in the catch.\n   *\n   * @param error\n   */\n  protected handleAPIError(error: any) {\n    if (!error) {\n      return;\n    }\n    console.log(error);\n    this.showErrorNotification(error.code, error);\n  }\n\n  /**\n   * call it On Init of every page component, it will set the default title of your page\n   * so you can pass it to the ToolbarComponent and can see the title on the browser card.\n   *\n   * @param {string} title\n   */\n  protected setTitle(title: string) {\n    this.title = title;\n    this.titleService.setTitle(`${title ? this.translateService.instant(title) : ''} | ${environment.APP_NAME}`);\n  }\n\n  /**\n   * show the default error notification.\n   *\n   * @param {string} title\n   * @param error\n   */\n  protected showErrorNotification(title: string, error: any) {\n    CustomNotification.showNotification(this.toastr, title, error.message ? error.message : 'Unknown error', CustomNotificationType.DANGER, CustomNotificationDuration.MEDIUM);\n  }\n\n  /**\n   * event fired from .html element (button, link, ... ).\n   * */\n  protected submitEventToAnalytics(category, action, label, value) {\n    this.googleAnalyticsEventsService.emitEvent(category, action, label, value);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseError.html":{"url":"classes/BaseError.html","title":"class - BaseError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ResponseError.ts\n        \n\n            \n                Description\n            \n            \n                Use this to correctly handle an error\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/ResponseError.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseError {\n  constructor() {\n    Error.apply(this, arguments);\n  }\n}\n\nBaseError.prototype = new Error();\n\nexport class ResponseError extends BaseError {\n  code: ErrorCode;\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    super();\n    if (code \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BasePageComponent.html":{"url":"components/BasePageComponent.html","title":"component - BasePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BasePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@core/base-page/base-page.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base\n            \n\n            \n                styleUrls\n                base-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./base-page.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                loggedinUser\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                askForConfirmation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/@core/base-page/base-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            askForConfirmation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        askForConfirmation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-page/base-page.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            show default dialog to ask for confirmation before starting a process.\nvery useful for CRUD.\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    if true you can proceede.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/@core/base-page/base-page.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.BASE_SERVER_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-page/base-page.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedinUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedinUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@core/base-page/base-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {BaseComponent} from '../base-component/base.component';\nimport {User} from '../../models/User';\nimport {SessionService} from '../../services/session.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base-page.component.html',\n  styleUrls: ['./base-page.component.scss']\n})\nexport class BasePageComponent extends BaseComponent implements OnInit {\n\n  loggedinUser: User;\n  baseUrl = environment.BASE_SERVER_URL;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    /**\n     * store loggedinUser so you can access to if from View and you don't need to access every time to Local Storage (where is stored)\n     *\n     * @type {User}\n     */\n    this.loggedinUser = SessionService.getLoggedInUser();\n  }\n\n  /**\n   * show default dialog to ask for confirmation before starting a process.\n   * very useful for CRUD.\n   *\n   * @returns {Promise} if true you can proceede.\n   */\n  protected async askForConfirmation(): Promise {\n    const result = await Swal({\n      title: this.translateService.instant('Are you sure?'),\n      text: '',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: this.translateService.instant('Yes, continue!'),\n      cancelButtonText: this.translateService.instant('No')\n    });\n    return new Promise(resolve => {\n      resolve(!!result.value);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BasePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/services/base.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                collectionName\n                            \n                            \n                                filters\n                            \n                            \n                                hasNextPage\n                            \n                            \n                                last\n                            \n                            \n                                orderByFieldName\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteObject\n                            \n                            \n                                    Protected\n                                getHeader\n                            \n                            \n                                getObject\n                            \n                            \n                                handleError\n                            \n                            \n                                hasNext\n                            \n                            \n                                init\n                            \n                            \n                                    Protected\n                                    Abstract\n                                modelConstructor\n                            \n                            \n                                nextPage\n                            \n                            \n                                patchObject\n                            \n                            \n                                postData\n                            \n                            \n                                postObject\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/server/services/base.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteObject(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetObject(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            handle error to return to the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ResponseError\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            check if there is a new page\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(path: string, pageSize?: number, filters?: literal type, orderByFieldName?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            initialize pagination after instantiated the service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filters\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        orderByFieldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            modelConstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        modelConstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            get next page if exists\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchObject\n                            \n                            \n                        \n                    \n                \n                \n                    \npatchObject(object: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postData\n                            \n                            \n                        \n                    \n                \n                \n                    \npostData(url: string, data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:160\n                            \n                        \n\n\n                \n                    \n                            post any type of data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postObject\n                            \n                            \n                        \n                    \n                \n                \n                    \npostObject(object: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            reset the pagination\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.BASE_SERVER_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collectionName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filters:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasNextPage:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        last:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderByFieldName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderByFieldName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/base.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {ErrorCode, ResponseError} from '../../models/ResponseError';\nimport {Mappable} from '../../models/models/Mappable';\nimport axios from 'axios';\nimport {SessionService} from '../../services/session.service';\nimport {BaseServiceModel} from '../../models/BaseServiceModel';\nimport {environment} from '../../../environments/environment';\n\n@Injectable()\nexport abstract class BaseService> implements BaseServiceModel {\n\n  pageSize: number;\n  filters: { [key: string]: string };\n  last: number = 0;\n  baseUrl: string = environment.BASE_SERVER_URL;\n  collectionName: string;\n  orderByFieldName: string;\n  hasNextPage: boolean = true;\n\n  constructor(protected injector: Injector) {\n  }\n\n  protected getHeader(): any {\n    return {headers: {'Content-Type': 'application/json', ...SessionService.getAccessToken() ? {'Authorization': SessionService.getAccessToken()} : {}}};\n  }\n\n  protected abstract modelConstructor(): T;\n\n  /**\n   * initialize pagination after instantiated the service\n   *\n   * @param {string} path\n   * @param {number} pageSize\n   * @param filters\n   * @param {string} orderByFieldName\n   */\n  init(path: string, pageSize?: number, filters?: { [key: string]: string }, orderByFieldName?: string) {\n    if (path.length === 0) {\n      throw new Error('path must contain more than 0 elements');\n    }\n    if (pageSize && pageSize  {\n    const completeUrl = this.baseUrl + '/' + id;\n    console.log(completeUrl);\n    return axios.get(completeUrl, this.getHeader()).then((response) => {\n      console.log(response);\n      return this.modelConstructor().map(response.data);\n    }).catch((error) => {\n      throw this.handleError(error);\n    });\n  }\n\n  /**\n   * get next page if exists\n   *\n   * @returns {Promise}\n   */\n  nextPage(): Promise {\n    let url = this.baseUrl + '?';\n    if (this.filters) {\n      Object.keys(this.filters).forEach(k => {\n        console.log(k, this.filters[k]);\n        url += `&${k}_contains=${this.filters[k]}`;\n      });\n    }\n    return axios.get(`${url}&_start=${this.last}&_limit=${this.pageSize}&_sort=${this.orderByFieldName}:desc`, this.getHeader()).then((response) => {\n      const list = [];\n      console.log(response);\n      if (response.data && response.data.length > 0) {\n        response.data.forEach(el => {\n          list.push(this.modelConstructor().map(el));\n        });\n        this.last += response.data.length;\n        this.hasNextPage = response.data.length >= this.pageSize;\n      } else {\n        this.hasNextPage = false;\n      }\n      return list;\n    }).catch((error) => {\n      throw this.handleError(error);\n    });\n  }\n\n  postObject(object: T): Promise {\n    const completeUrl = this.baseUrl + '/' + object.id;\n    return axios.post(completeUrl, object.mapReverse(), this.getHeader())\n      .then(response => {\n        console.log(response);\n        return true;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  patchObject(object: T): Promise {\n    const completeUrl = this.baseUrl + '/' + object.id;\n    return axios.put(completeUrl, object.mapReverse(), this.getHeader())\n      .then(response => {\n        console.log(response);\n        return true;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  deleteObject(id: string): Promise {\n    const completeUrl = this.baseUrl + '/' + id;\n    return axios.delete(completeUrl, this.getHeader())\n      .then((response) => {\n        console.log(response);\n        return true;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  /**\n   * post any type of data\n   *\n   * @param {string} url\n   * @param data\n   * @returns {Promise}\n   */\n  postData(url: string, data: any): Promise {\n    return axios.post(url, data, this.getHeader())\n      .then(response => {\n        console.log(response);\n        return response.data;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  /**\n   * handle error to return to the component\n   *\n   * @param error\n   * @returns {ResponseError}\n   */\n  handleError(error: any): ResponseError {\n    if (error.response && error.response.data && !(error.response.data.statusCode >= 200 && error.response.data.statusCode \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceModel.html":{"url":"models/BaseServiceModel.html","title":"models - BaseServiceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseServiceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/BaseServiceModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deleteObject\n                                \n                                \n                                    getObject\n                                \n                                \n                                    handleError\n                                \n                                \n                                    hasNext\n                                \n                                \n                                    init\n                                \n                                \n                                    nextPage\n                                \n                                \n                                    patchObject\n                                \n                                \n                                    postData\n                                \n                                \n                                    postObject\n                                \n                                \n                                    reset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteObject(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getObject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetObject(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:58\n                            \n                        \n\n\n                \n                    \n                            handle error to return to the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ResponseError\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:26\n                            \n                        \n\n\n                \n                    \n                            check if there is a new page\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(path: string, pageSize: number, filters?: literal type, orderByFieldName?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:14\n                            \n                        \n\n\n                \n                    \n                            initialize pagination after instantiated the service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filters\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        orderByFieldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:33\n                            \n                        \n\n\n                \n                    \n                            get next page if exists\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchObject\n                            \n                            \n                        \n                    \n                \n                \n                    \npatchObject(object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postData\n                            \n                            \n                        \n                    \n                \n                \n                    \npostData(url: string, data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:46\n                            \n                        \n\n\n                \n                    \n                            post any type of data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postObject\n                            \n                            \n                        \n                    \n                \n                \n                    \npostObject(object: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/BaseServiceModel.ts:19\n                            \n                        \n\n\n                \n                    \n                            reset the pagination\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {ResponseError} from './ResponseError';\nimport {Mappable} from './models/Mappable';\n\nexport models BaseServiceModel> {\n\n  /**\n   * initialize pagination after instantiated the service\n   *\n   * @param {string} path\n   * @param {number} pageSize\n   * @param filters\n   * @param {string} orderByFieldName\n   */\n  init(path: string, pageSize: number, filters?: { [key: string]: string }, orderByFieldName?: string);\n\n  /**\n   * reset the pagination\n   */\n  reset();\n\n  /**\n   * check if there is a new page\n   *\n   * @returns {boolean}\n   */\n  hasNext(): boolean;\n\n  /**\n   * get next page if exists\n   *\n   * @returns {Promise}\n   */\n  nextPage(): Promise;\n\n  getObject(id: string): Promise;\n\n  postObject(object: T): Promise;\n\n  /**\n   * post any type of data\n   *\n   * @param {string} url\n   * @param data\n   * @returns {Promise}\n   */\n  postData(url: string, data: any): Promise;\n\n  patchObject(object: any): Promise;\n\n  deleteObject(id: string): Promise;\n\n  /**\n   * handle error to return to the component\n   *\n   * @param error\n   * @returns {ResponseError}\n   */\n  handleError(error: any): ResponseError;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  ComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFiltersComponent->ComponentsModule\n\n\n\n\n\nMediaInputComponent\n\nMediaInputComponent\n\nComponentsModule -->\n\nMediaInputComponent->ComponentsModule\n\n\n\n\n\nMediaModalComponent\n\nMediaModalComponent\n\nComponentsModule -->\n\nMediaModalComponent->ComponentsModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nComponentsModule -->\n\nNavbarComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nComponentsModule -->\n\nTableComponent->ComponentsModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nComponentsModule -->\n\nToolbarComponent->ComponentsModule\n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nComponentsModule->FiltersComponent \n\n\n\n\n\nMediaInputComponent \n\nMediaInputComponent \n\nMediaInputComponent  -->\n\nComponentsModule->MediaInputComponent \n\n\n\n\n\nMediaModalComponent \n\nMediaModalComponent \n\nMediaModalComponent  -->\n\nComponentsModule->MediaModalComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nComponentsModule->NavbarComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nComponentsModule->TableComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nComponentsModule->ToolbarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/components.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FiltersComponent\n                            \n                            \n                                MediaInputComponent\n                            \n                            \n                                MediaModalComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                TableComponent\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                MediaModalComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FiltersComponent\n                            \n                            \n                                    MediaInputComponent\n                            \n                            \n                                    MediaModalComponent\n                            \n                            \n                                    NavbarComponent\n                            \n                            \n                                    SidebarComponent\n                            \n                            \n                                    TableComponent\n                            \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {FiltersComponent} from './@shared/filters/filters.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport {TableComponent} from './@shared/table/table.component';\nimport {ToolbarComponent} from './@shared/toolbar/toolbar.component';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {NgbModalModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {PipeModule} from '../pipes/pipe.module';\nimport {MatIconModule} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {MediaInputComponent} from './@shared/media-input/media-input.component';\nimport {MediaModalComponent} from './@shared/media-modal/media-modal.component';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgbModule.forRoot(),\n    PipeModule.forRoot(),\n    TranslateModule.forChild({}),\n    MatIconModule,\n    FormsModule,\n    NgbModalModule,\n  ],\n  declarations: [\n    FiltersComponent,\n    NavbarComponent,\n    SidebarComponent,\n    TableComponent,\n    ToolbarComponent,\n    MediaInputComponent,\n    MediaModalComponent\n  ],\n  exports: [\n    FiltersComponent,\n    NavbarComponent,\n    SidebarComponent,\n    TableComponent,\n    ToolbarComponent,\n    MediaInputComponent,\n    MediaModalComponent\n  ],\n  entryComponents: [MediaModalComponent]\n})\nexport class ComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/ModulesModule.html","title":"module - ModulesModule","body":"\n                   \n\n\n\n\n  Modules\n  ModulesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nBaseComponent\n\nBaseComponent\n\n\n\nModulesModule\n\nModulesModule\n\nModulesModule -->\n\nBaseComponent->ModulesModule\n\n\n\n\n\nBasePageComponent\n\nBasePageComponent\n\nModulesModule -->\n\nBasePageComponent->ModulesModule\n\n\n\n\n\nPlatformLayoutComponent\n\nPlatformLayoutComponent\n\nModulesModule -->\n\nPlatformLayoutComponent->ModulesModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nModulesModule -->\n\nPublicLayoutComponent->ModulesModule\n\n\n\n\n\nBaseComponent \n\nBaseComponent \n\nBaseComponent  -->\n\nModulesModule->BaseComponent \n\n\n\n\n\nBasePageComponent \n\nBasePageComponent \n\nBasePageComponent  -->\n\nModulesModule->BasePageComponent \n\n\n\n\n\nPlatformLayoutComponent \n\nPlatformLayoutComponent \n\nPlatformLayoutComponent  -->\n\nModulesModule->PlatformLayoutComponent \n\n\n\n\n\nPublicLayoutComponent \n\nPublicLayoutComponent \n\nPublicLayoutComponent  -->\n\nModulesModule->PublicLayoutComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@core/modules.module.ts\n        \n\n\n            \n                Description\n            \n            \n                in this model you can find all base components that group all base methods and attributes.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BaseComponent\n                            \n                            \n                                BasePageComponent\n                            \n                            \n                                PlatformLayoutComponent\n                            \n                            \n                                PublicLayoutComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BaseComponent\n                            \n                            \n                                    BasePageComponent\n                            \n                            \n                                    PlatformLayoutComponent\n                            \n                            \n                                    PublicLayoutComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BaseComponent} from './base-component/base.component';\nimport {BasePageComponent} from './base-page/base-page.component';\nimport {PlatformLayoutComponent} from './layouts/platform/platform-layout.component';\nimport {PublicLayoutComponent} from './layouts/public/public-layout.component';\nimport {FormsModule} from '@angular/forms';\nimport {ComponentsModule} from '../components/components.module';\n\n/**\n * in this model you can find all base components that group all base methods and attributes.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    RouterModule,\n    NgbModule.forRoot(),\n  ],\n  declarations: [\n    BaseComponent,\n    BasePageComponent,\n    PlatformLayoutComponent,\n    PublicLayoutComponent,\n  ],\n  exports: [\n    BaseComponent,\n    BasePageComponent,\n    PlatformLayoutComponent,\n    PublicLayoutComponent,\n  ]\n})\nexport class ModulesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomNotification.html":{"url":"classes/CustomNotification.html","title":"class - CustomNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui/CustomNotification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                showNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            showNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showNotification(toastr: ToastrService, title: string, message: string, notificationType: CustomNotificationType, duration: CustomNotificationDuration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/ui/CustomNotification.ts:13\n                            \n                        \n\n\n                \n                    \n                            show notification for every type of message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                        \n                                                                    ToastrService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        notificationType\n                                                        \n                                                                    CustomNotificationType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        duration\n                                                        \n                                                                    CustomNotificationDuration\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IndividualConfig, ToastrService} from 'ngx-toastr';\n\nexport class CustomNotification {\n  /**\n   * show notification for every type of message\n   *\n   * @param {ToastrService} toastr\n   * @param {string} title\n   * @param {string} message\n   * @param {CustomNotificationType} notificationType\n   * @param {CustomNotificationDuration} duration\n   */\n  static showNotification(toastr: ToastrService, title: string, message: string, notificationType: CustomNotificationType, duration: CustomNotificationDuration): void {\n    const time = {verySlow: 500, slow: 2000, medium: 3000, long: 4000, veryLong: 5000};\n    switch (notificationType) {\n      case CustomNotificationType.SUCCESS:\n        toastr.success(message, title, {timeOut: time[duration], closeButton: true} as IndividualConfig);\n        break;\n      case CustomNotificationType.DANGER:\n        toastr.error(message, title, {timeOut: time[duration], closeButton: true} as IndividualConfig);\n        break;\n      case CustomNotificationType.WARNING:\n        toastr.warning(message, title, {timeOut: time[duration], closeButton: true} as IndividualConfig);\n        break;\n      case CustomNotificationType.INFO:\n        toastr.info(message, title, {timeOut: time[duration], closeButton: true} as IndividualConfig);\n        break;\n    }\n  }\n}\n\nexport enum CustomNotificationType {\n  INFO = 'info' as any,\n  SUCCESS = 'success' as any,\n  WARNING = 'warning' as any,\n  DANGER = 'danger' as any,\n}\n\nexport enum CustomNotificationDuration {\n  VERY_SLOW = 'verySlow' as any,\n  SLOW = 'slow' as any,\n  MEDIUM = 'medium' as any,\n  LONG = 'long' as any,\n  VERY_LONG = 'veryLong' as any\n}\n\nexport enum CustomNotificationDirection {\n  TOP = 'top' as any,\n  RIGHT = 'right' as any,\n  BOTTOM = 'bottom' as any,\n  LEFT = 'left' as any\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/platform/dashboard/dashboard.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BasePageComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                loggedinUser\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                askForConfirmation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/platform/dashboard/dashboard.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/platform/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            askForConfirmation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        askForConfirmation()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:37\n                            \n                        \n\n\n                \n                    \n                            show default dialog to ask for confirmation before starting a process.\nvery useful for CRUD.\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    if true you can proceede.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.BASE_SERVER_URL\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedinUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedinUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnDestroy, OnInit} from '@angular/core';\nimport {BasePageComponent} from '../../../@core/base-page/base-page.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent extends BasePageComponent implements OnInit {\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.setTitle('Dashboard');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    {{'Welcome to' | translate}} {{environment.APP_NAME}}!\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'Welcome to\\' | translate}} {{environment.APP_NAME}}!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterFieldElement.html":{"url":"models/FilterFieldElement.html","title":"models - FilterFieldElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterFieldElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/@shared/filters/filters.component.ts\n        \n\n            \n                Description\n            \n            \n                respect this models to show a new field & bind it correctly.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attrName\n                                \n                                \n                                            Optional\n                                        hide\n                                \n                                \n                                        label\n                                \n                                \n                                        list\n                                \n                                \n                                            Optional\n                                        onValueSelected\n                                \n                                \n                                        placeholder\n                                \n                                \n                                            Optional\n                                        section\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrName\n                                    \n                                \n                                \n                                    \n                                        attrName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hide\n                                    \n                                \n                                \n                                    \n                                        hide:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    FilterableList, specify it just for FilterFieldType.SELECT or FilterFieldType.CHECK_LIST\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onValueSelected\n                                    \n                                \n                                \n                                    \n                                        onValueSelected:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        section\n                                    \n                                \n                                \n                                    \n                                        section:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    yuo can group fields by sections, just specify same section name and the component will do the rest.\nif you don't want to show the section put the generalSectionKey ('others') as value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     FilterFieldType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterFieldType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {UserRole} from '../../../services/session.service';\nimport {Utils} from '../../../models/static/Utils';\n\n/**\n * filter tables in simple way\n */\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit, OnChanges {\n\n  cardExpanded = false;\n  generalSectionKey = 'others';\n  fields = {};\n  fieldType = FilterFieldType;\n  filterData: any = {};\n\n  @Input() fieldList: FilterFieldElement[] = [];\n  @Input() prevFilterData: { [key: string]: any };\n  @Output() onCardExpanded = new EventEmitter();\n  @Output() onFilterClicked = new EventEmitter();\n\n  constructor() {\n  }\n\n  /**\n   * get from list mapped array to let it work with filter's select.\n   *\n   * @param {FilterableList} type\n   * @returns {[{id: string; name: string}[]}\n   */\n  static getFilterList(type: FilterableList): { id: string, name: string }[] {\n    const list = [];\n    switch (type) {\n      case FilterableList.USER_ROLE:\n        Object.keys(UserRole).forEach(role => {\n          const title = role;\n          if (title.length > 0) {\n            list.push({id: role, name: title});\n          }\n        });\n        break;\n    }\n    return list;\n  }\n\n  ngOnInit() {\n    this.initFieldList();\n  }\n\n  ngOnChanges() {\n    this.initFieldList();\n  }\n\n  /**\n   * clear all filters value.\n   */\n  clearFieldList() {\n    this.prevFilterData = null;\n    this.initFieldList();\n  }\n\n  /**\n   * initialize filters.\n   */\n  private initFieldList() {\n    this.fieldList.forEach((field) => {\n      if (!field.section || field.section.length === 0) {\n        field.section = this.generalSectionKey;\n      }\n      if (!this.fields[field.section]) {\n        this.fields[field.section] = {};\n      }\n      this.fields[field.section][field.attrName] = (field.type !== FilterFieldType.CHECK_LIST) ? null : {};\n      if (this.prevFilterData && this.prevFilterData[field.attrName]) {\n        this.fields[field.section][field.attrName] = this.prevFilterData[field.attrName];\n      }\n    });\n    this.filterData = this.prevFilterData;\n  }\n\n  /**\n   * map data and emit it.\n   */\n  filter() {\n    const filterData = {};\n    Object.keys(this.fields).forEach(section => {\n      Object.keys(this.fields[section]).forEach(key => {\n        filterData[key] = this.fields[section][key];\n      });\n    });\n    const filterDataCheckLists = {};\n    for (const key in filterData) {\n      if (!filterData[key]) {\n        delete filterData[key];\n      } else {\n        const key1l = this.fieldList.find(el => el.attrName === key);\n        if (key1l.type === FilterFieldType.CHECK_LIST) {\n          filterDataCheckLists[key] = '';\n          for (const key2l in filterData[key]) {\n            if (filterData[key][key2l]) {\n              filterDataCheckLists[key] = filterDataCheckLists[key] + `${key2l},`;\n            }\n          }\n        }\n      }\n    }\n    for (const key in filterDataCheckLists) {\n      if (filterDataCheckLists[key].length > 0) {\n        filterData[key] = filterDataCheckLists[key].slice(0, -1);\n      } else {\n        delete filterData[key];\n      }\n    }\n    this.fieldList.forEach(field => {\n      if (field.type === FilterFieldType.DATE && filterData[field.attrName]) {\n        filterData[field.attrName] = Utils.getFormattedDate(filterData[field.attrName]).getTime();\n      }\n    });\n    this.filterData = filterData;\n    this.onFilterClicked.emit(filterData);\n    this.cardExpanded = false;\n  }\n\n  /**\n   * expande / collapse the card.\n   */\n  toggleCardExpanded() {\n    if (!this.cardExpanded) {\n      this.onCardExpanded.emit();\n    }\n    this.cardExpanded = !this.cardExpanded;\n  }\n\n}\n\n/**\n * respect this models to show a new field & bind it correctly.\n */\nexport models FilterFieldElement {\n  label: string;\n  placeholder: string;\n  attrName: string;\n  type: FilterFieldType;\n  /**\n   * yuo can group fields by sections, just specify same section name and the component will do the rest.\n   * if you don't want to show the section put the generalSectionKey ('others') as value\n   */\n  section?: string;\n  hide?: boolean;\n  /**\n   * FilterableList, specify it just for FilterFieldType.SELECT or FilterFieldType.CHECK_LIST\n   */\n  list: { id: number | string, name: string, checked?: boolean }[];\n  onValueSelected?: () => any;\n}\n\n/**\n * all supported field types\n */\nexport enum FilterFieldType {\n  BOOLEAN = 'boolean' as any,\n  TEXT = 'text' as any,\n  NUMBER = 'number' as any,\n  DATE = 'date' as any,\n  SELECT = 'select' as any,\n  CHECK_LIST = 'check_list' as any,\n}\n\n/**\n * specify here all type of list that you want to associate to a FilterFieldElement and map it in getFilterList()\n */\nexport enum FilterableList {\n  USER_ROLE = 'USER_ROLE' as any\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/@shared/filters/filters.component.ts\n\n\n    \n        Description\n    \n    \n        filter tables in simple way\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardExpanded\n                            \n                            \n                                fields\n                            \n                            \n                                fieldType\n                            \n                            \n                                filterData\n                            \n                            \n                                generalSectionKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFieldList\n                            \n                            \n                                filter\n                            \n                            \n                                    Static\n                                getFilterList\n                            \n                            \n                                    Private\n                                initFieldList\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCardExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fieldList\n                            \n                            \n                                prevFilterData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCardExpanded\n                            \n                            \n                                onFilterClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/@shared/filters/filters.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                    \n                            \n                            Type :    FilterFieldElement[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevFilterData\n                    \n                    \n                            \n                            Type :    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCardExpanded\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onFilterClicked\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFieldList\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFieldList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            clear all filters value.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            map data and emit it.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getFilterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFilterList(type: FilterableList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            get from list mapped array to let it work with filter's select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    FilterableList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initFieldList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initFieldList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            initialize filters.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCardExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCardExpanded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            expande / collapse the card.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cardExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fields:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldType:     \n\n                    \n                \n                    \n                        \n                            Default value : FilterFieldType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generalSectionKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generalSectionKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'others'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/filters/filters.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {UserRole} from '../../../services/session.service';\nimport {Utils} from '../../../models/static/Utils';\n\n/**\n * filter tables in simple way\n */\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit, OnChanges {\n\n  cardExpanded = false;\n  generalSectionKey = 'others';\n  fields = {};\n  fieldType = FilterFieldType;\n  filterData: any = {};\n\n  @Input() fieldList: FilterFieldElement[] = [];\n  @Input() prevFilterData: { [key: string]: any };\n  @Output() onCardExpanded = new EventEmitter();\n  @Output() onFilterClicked = new EventEmitter();\n\n  constructor() {\n  }\n\n  /**\n   * get from list mapped array to let it work with filter's select.\n   *\n   * @param {FilterableList} type\n   * @returns {[{id: string; name: string}[]}\n   */\n  static getFilterList(type: FilterableList): { id: string, name: string }[] {\n    const list = [];\n    switch (type) {\n      case FilterableList.USER_ROLE:\n        Object.keys(UserRole).forEach(role => {\n          const title = role;\n          if (title.length > 0) {\n            list.push({id: role, name: title});\n          }\n        });\n        break;\n    }\n    return list;\n  }\n\n  ngOnInit() {\n    this.initFieldList();\n  }\n\n  ngOnChanges() {\n    this.initFieldList();\n  }\n\n  /**\n   * clear all filters value.\n   */\n  clearFieldList() {\n    this.prevFilterData = null;\n    this.initFieldList();\n  }\n\n  /**\n   * initialize filters.\n   */\n  private initFieldList() {\n    this.fieldList.forEach((field) => {\n      if (!field.section || field.section.length === 0) {\n        field.section = this.generalSectionKey;\n      }\n      if (!this.fields[field.section]) {\n        this.fields[field.section] = {};\n      }\n      this.fields[field.section][field.attrName] = (field.type !== FilterFieldType.CHECK_LIST) ? null : {};\n      if (this.prevFilterData && this.prevFilterData[field.attrName]) {\n        this.fields[field.section][field.attrName] = this.prevFilterData[field.attrName];\n      }\n    });\n    this.filterData = this.prevFilterData;\n  }\n\n  /**\n   * map data and emit it.\n   */\n  filter() {\n    const filterData = {};\n    Object.keys(this.fields).forEach(section => {\n      Object.keys(this.fields[section]).forEach(key => {\n        filterData[key] = this.fields[section][key];\n      });\n    });\n    const filterDataCheckLists = {};\n    for (const key in filterData) {\n      if (!filterData[key]) {\n        delete filterData[key];\n      } else {\n        const key1l = this.fieldList.find(el => el.attrName === key);\n        if (key1l.type === FilterFieldType.CHECK_LIST) {\n          filterDataCheckLists[key] = '';\n          for (const key2l in filterData[key]) {\n            if (filterData[key][key2l]) {\n              filterDataCheckLists[key] = filterDataCheckLists[key] + `${key2l},`;\n            }\n          }\n        }\n      }\n    }\n    for (const key in filterDataCheckLists) {\n      if (filterDataCheckLists[key].length > 0) {\n        filterData[key] = filterDataCheckLists[key].slice(0, -1);\n      } else {\n        delete filterData[key];\n      }\n    }\n    this.fieldList.forEach(field => {\n      if (field.type === FilterFieldType.DATE && filterData[field.attrName]) {\n        filterData[field.attrName] = Utils.getFormattedDate(filterData[field.attrName]).getTime();\n      }\n    });\n    this.filterData = filterData;\n    this.onFilterClicked.emit(filterData);\n    this.cardExpanded = false;\n  }\n\n  /**\n   * expande / collapse the card.\n   */\n  toggleCardExpanded() {\n    if (!this.cardExpanded) {\n      this.onCardExpanded.emit();\n    }\n    this.cardExpanded = !this.cardExpanded;\n  }\n\n}\n\n/**\n * respect this models to show a new field & bind it correctly.\n */\nexport models FilterFieldElement {\n  label: string;\n  placeholder: string;\n  attrName: string;\n  type: FilterFieldType;\n  /**\n   * yuo can group fields by sections, just specify same section name and the component will do the rest.\n   * if you don't want to show the section put the generalSectionKey ('others') as value\n   */\n  section?: string;\n  hide?: boolean;\n  /**\n   * FilterableList, specify it just for FilterFieldType.SELECT or FilterFieldType.CHECK_LIST\n   */\n  list: { id: number | string, name: string, checked?: boolean }[];\n  onValueSelected?: () => any;\n}\n\n/**\n * all supported field types\n */\nexport enum FilterFieldType {\n  BOOLEAN = 'boolean' as any,\n  TEXT = 'text' as any,\n  NUMBER = 'number' as any,\n  DATE = 'date' as any,\n  SELECT = 'select' as any,\n  CHECK_LIST = 'check_list' as any,\n}\n\n/**\n * specify here all type of list that you want to associate to a FilterFieldElement and map it in getFilterList()\n */\nexport enum FilterableList {\n  USER_ROLE = 'USER_ROLE' as any\n}\n\n    \n\n    \n        \n  \n    {{'Filter' | translate}}\n    \n      {{cardExpanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}}\n    \n  \n   0 && cardExpanded; else cardCollapsed\">\n    \n      \n        {{section | translate}}\n        \n          \n            \n              \n                \n                  {{field.label | translate}}\n                  \n                \n              \n            \n            \n              \n                \n                  {{field.label | translate}}\n                  \n                \n              \n            \n            \n              \n                {{field.label | translate}}\n                \n                  \n                  \n                    \n                      calendar_today\n                    \n                  \n                \n              \n            \n            \n              \n                {{field.label | translate}}\n                \n                  \n                  {{el.name | translate}}\n                \n              \n            \n            \n              {{field.label | translate}}\n              \n                \n                  {{el.name | translate}}\n                \n              \n            \n            \n              \n                {{field.placeholder | translate}}\n                \n                  \n                  {{'YES' | translate}}\n                  {{'NO' | translate}}\n                \n              \n            \n          \n        \n      \n    \n  \n  \n      \n        \n          \n            \n              {{f.placeholder | translate}}\n            \n          \n        \n      \n  \n  \n    {{'Clear' | translate}}\n    {{'Filter' | translate}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'Filter\\' | translate}}          {{cardExpanded ? \\'keyboard_arrow_up\\' : \\'keyboard_arrow_down\\'}}         0 && cardExpanded; else cardCollapsed\">                  {{section | translate}}                                                                              {{field.label | translate}}                                                                                                                        {{field.label | translate}}                                                                                                      {{field.label | translate}}                                                                                              calendar_today                                                                                                                          {{field.label | translate}}                                                    {{el.name | translate}}                                                                    {{field.label | translate}}                                                {{el.name | translate}}                                                                                    {{field.placeholder | translate}}                                                    {{\\'YES\\' | translate}}                  {{\\'NO\\' | translate}}                                                                                                                            {{f.placeholder | translate}}                                            {{\\'Clear\\' | translate}}    {{\\'Filter\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Globals.html":{"url":"classes/Globals.html","title":"class - Globals","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Globals\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/static/Globals.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getEmailRegex\n                            \n                            \n                                    Static\n                                getTelephoneRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getEmailRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEmailRegex()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Globals.ts:7\n                            \n                        \n\n\n                \n                    \n                            get regex for email input\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getTelephoneRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTelephoneRegex()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Globals.ts:16\n                            \n                        \n\n\n                \n                    \n                            TODO\nget rejex for telephone input\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Globals {\n  /**\n   * get regex for email input\n   *\n   * @returns {string}\n   */\n  static getEmailRegex(): string {\n    return '^[^@]+@[^@]+\\.[a-zA-Z]{2,6}$';\n  }\n\n  /**\n   * TODO\n   * get rejex for telephone input\n   * @returns {string}\n   */\n  static getTelephoneRegex(): string {\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsEventsService.html":{"url":"injectables/GoogleAnalyticsEventsService.html","title":"injectable - GoogleAnalyticsEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google-analytics-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitEvent(eventCategory: string, eventAction: string, eventLabel: string, eventValue: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/google-analytics-events.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            emit new event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        eventCategory\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        eventAction\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        eventLabel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        eventValue\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\ndeclare const ga: Function;\n\n@Injectable()\nexport class GoogleAnalyticsEventsService {\n\n  /**\n   * emit new event\n   *\n   * @param {string} eventCategory\n   * @param {string} eventAction\n   * @param {string} eventLabel\n   * @param {number} eventValue\n   */\n  public emitEvent(eventCategory: string,\n                   eventAction: string,\n                   eventLabel: string = null,\n                   eventValue: number = null) {\n    ga('send', 'event', {\n      eventCategory: eventCategory,\n      eventLabel: eventLabel,\n      eventAction: eventAction,\n      eventValue: eventValue\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n  Modules\n  GuardsModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/guards/guards.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AuthGuard} from './AuthGuard';\nimport {AdminGuard} from './AdminGuard';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [\n    AuthGuard,\n    AdminGuard\n  ],\n})\nexport class GuardsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/keys.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: , args: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/keys.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({name: 'keys'})\nexport class KeysPipe implements PipeTransform {\n  transform(value, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push(key);\n    }\n    return keys;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStoreService.html":{"url":"injectables/LocalStoreService.html","title":"injectable - LocalStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-store.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getCachedApiResponse\n                            \n                            \n                                preventLocalStorageMaxUsage\n                            \n                            \n                                removeCachedApiResponse\n                            \n                            \n                                setCachedApiResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-store.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/local-store.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCachedApiResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCachedApiResponse(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/local-store.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preventLocalStorageMaxUsage\n                            \n                            \n                        \n                    \n                \n                \n                    \npreventLocalStorageMaxUsage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/local-store.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCachedApiResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCachedApiResponse(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/local-store.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCachedApiResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCachedApiResponse(url: string, data: any, etag: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/local-store.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        etag\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class LocalStoreService {\n\n  constructor() {\n  }\n\n  getCachedApiResponse(url: string): { data: any, etag: string } {\n    try {\n      this.preventLocalStorageMaxUsage();\n      const res: { data: any, etag: string } = JSON.parse(localStorage.getItem(url));\n      if (res) {\n        console.log(`exist cached res for ${url}`, res);\n        return res;\n      }\n    } catch (e) {\n      console.error(`Error! Can't get list from localStorage for ${url}`, e);\n    }\n    return null;\n  }\n\n  setCachedApiResponse(url: string, data: any, etag: string): boolean {\n    if (data) {\n      try {\n        this.preventLocalStorageMaxUsage();\n        const element = JSON.stringify({data: data, etag: etag});\n        localStorage.setItem(url, element);\n        console.log(`cached ${url} with etag ${etag}`, data);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  removeCachedApiResponse(url: string): boolean {\n    try {\n      localStorage.removeItem(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  clear(): boolean {\n    try {\n      localStorage.clear();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  preventLocalStorageMaxUsage() {\n    let t = 0;\n    let i = 0;\n    for (const x in localStorage) {\n      t += (((localStorage[x].length * 2 || 0)));\n      i++;\n    }\n    let j = 0;\n    if (t / 1024 > 1024) {\n      for (const x in localStorage) {\n        if (x.indexOf(environment.BASE_SERVER_URL) > -1 && j \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/public/login/login.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                user\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                performLogin\n                            \n                            \n                                submit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/public/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/login/login.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformLogin(model: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit(model: User, isValid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/login/login.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isValid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {BaseComponent} from '../../../@core/base-component/base.component';\nimport {User} from '../../../models/User';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseComponent implements OnInit {\n  environment = environment;\n  user: User;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.setTitle('Login');\n  }\n\n  ngOnInit() {\n    this.authService.logout();\n    this.user = new User();\n  }\n\n  submit(model: User, isValid: boolean) {\n    console.log(model, isValid);\n    if (isValid) {\n      this.performLogin(model);\n    }\n  }\n\n  performLogin(model: User) {\n    this.isLoading = true;\n    this.authService.standardLogin(model.email, model.password)\n      .then(u => {\n        this.isLoading = false;\n        this.router.navigate(['/dashboard']);\n      })\n      .catch(reason => {\n        this.isLoading = false;\n        this.handleAPIError(reason);\n      });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      LOGIN\n    \n\n    \n      \n      {{'Email address' | translate}}\n      \n        {{'Insert valid email' | translate}} (john@doe.com)\n      \n    \n\n    \n      \n      {{'Password' | translate}}\n      \n        {{'Insert password' | translate}}\n      \n    \n    \n      \n        {{'Forgot password?' | translate}}\n      \n    \n    {{\"Let's go\" | translate}}\n    \n      {{\"Don't you have an account? Register!\" | translate}}\n    \n    Winkular by Wink\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  LOGIN                    {{\\'Email address\\' | translate}}              {{\\'Insert valid email\\' | translate}} (john@doe.com)                          {{\\'Password\\' | translate}}              {{\\'Insert password\\' | translate}}                            {{\\'Forgot password?\\' | translate}}              {{\"Let\\'s go\" | translate}}          {{\"Don\\'t you have an account? Register!\" | translate}}        Winkular by Wink  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/authentication.service.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {User} from '../../models/User';\nimport {AuthenticationServiceModel} from '../../models/AuthenticationServiceModel';\nimport {environment} from '../../../environments/environment';\nimport {SessionService, UserRole} from '../../services/session.service';\nimport axios from 'axios';\nimport {BaseService} from './base.service';\nimport {ServerUser} from '../models/ServerUser';\n\n@Injectable()\nexport class AuthenticationService extends BaseService implements AuthenticationServiceModel {\n  private authUrl = environment.BASE_SERVER_URL;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  protected modelConstructor(): User {\n    return new User();\n  }\n\n  signup(email: string, password: string) {\n    const url = `${environment.BASE_SERVER_URL}auth/local/register`;\n    const data = new User().mapReverse() as any;\n    data.email = email;\n    data.username = email;\n    data.password = password;\n    data.userRole = UserRole.CUSTOMER;\n    return this.postData(url, data);\n  }\n\n  standardLogin(email: string, password: string): Promise {\n    const url = this.authUrl + 'auth/local';\n    const data = {\n      identifier: email,\n      password: password\n    };\n    return axios.post(url, data, this.getHeader())\n      .then(response => {\n        console.log(response);\n        const res = response as LoginResponse;\n        let u = new User();\n        u = u.map(res.data.user);\n        SessionService.saveLoggedInUser(u, res.data.jwt);\n        return u;\n      })\n      .catch(error => {\n        throw this.handleError(error);\n      });\n  }\n\n  requestPassword(email: string): Promise {\n    return undefined;\n  }\n\n  logout() {\n    SessionService.clearSession();\n  }\n\n  resetPassword(password, passwordConfirmation, code): Promise {\n    const url = `${environment.BASE_SERVER_URL}auth/reset-password`;\n    const data = {\n      code,\n      password,\n      passwordConfirmation\n    };\n    return this.postData(url, data);\n  }\n\n}\n\nclass LoginResponse {\n  data: {\n    jwt,\n    user: ServerUser\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mappable.html":{"url":"models/Mappable.html","title":"models - Mappable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mappable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models/Mappable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    map\n                                \n                                \n                                    mapReverse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \nmap(reverseObject: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/models/Mappable.ts:9\n                            \n                        \n\n\n                \n                    \n                            map from ReverseObject to Object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reverseObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapReverse\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReverse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/models/Mappable.ts:15\n                            \n                        \n\n\n                \n                    \n                            map from Object to ReverseObject\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export models Mappable {\n  id: string;\n\n  /**\n   * map from ReverseObject to Object\n   * @param reverseObject\n   * @returns {T}\n   */\n  map(reverseObject: any): T;\n\n  /**\n   * map from Object to ReverseObject\n   * @returns {any}\n   */\n  mapReverse(): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"models/Media.html","title":"models - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui/Media.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        progress\n                                \n                                \n                                        type\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export models Media {\n  type: MediaType;\n  url: string;\n  progress?: number;\n}\n\n/**\n * accepted file types in MediaModalComponent\n */\nexport enum MediaType {\n  IMAGE = 'IMAGE' as any,\n  PDF = 'PDF' as any,\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaInputComponent.html":{"url":"components/MediaInputComponent.html","title":"component - MediaInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediaInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/@shared/media-input/media-input.component.ts\n\n\n    \n        Description\n    \n    \n        common input to preview & change a media input.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                media-input\n            \n\n            \n                styleUrls\n                media-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSanitizedUrl\n                            \n                            \n                                openMediaModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowedTypes\n                            \n                            \n                                height\n                            \n                            \n                                url\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                urlChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/@shared/media-input/media-input.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowedTypes\n                    \n                    \n                            \n                            Type :    MediaType[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        urlChange\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSanitizedUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSanitizedUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            get Url sanitized to see it in View.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openMediaModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenMediaModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            open media modal to change the value of the input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sanitizer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sanitizer:     DomSanitizer\n\n                    \n                \n                    \n                        \n                            Type :     DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/media-input/media-input.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {MediaModalComponent} from '../media-modal/media-modal.component';\nimport {Utils} from '../../../models/static/Utils';\nimport {MediaType} from '../../../models/ui/Media';\n\n/**\n * common input to preview & change a media input.\n */\n@Component({\n  selector: 'media-input',\n  templateUrl: './media-input.component.html',\n  styleUrls: ['./media-input.component.scss']\n})\nexport class MediaInputComponent {\n\n  @Input() height: string;\n  @Input() width: string;\n  @Input() url: string;\n  @Input() allowedTypes: MediaType[];\n  @Output() urlChange: EventEmitter;\n\n  constructor(public sanitizer: DomSanitizer, private modalService: NgbModal) {\n    this.urlChange = new EventEmitter();\n  }\n\n  /**\n   * get Url sanitized to see it in View.\n   *\n   * @returns {SafeStyle}\n   */\n  getSanitizedUrl() {\n    return Utils.getBypassedSecurityTrustStyle(this.url ? (this.url.indexOf('.pdf') > -1 ? 'assets/img/pdf_icon.png' : this.url ) : 'assets/img/noimage.png', this.sanitizer);\n  }\n\n  /**\n   * open media modal to change the value of the input.\n   */\n  openMediaModal() {\n    const activeModal = this.modalService.open(MediaModalComponent, {size: 'lg'});\n    activeModal.componentInstance.url = this.url;\n    if (this.allowedTypes) {\n      activeModal.componentInstance.allowedTypes = this.allowedTypes;\n    }\n    const onConfirmPressed = (url: string) => {\n      this.url = url;\n      this.urlChange.emit(this.url);\n      activeModal.close();\n    };\n    activeModal.componentInstance.onConfirmPressed = onConfirmPressed;\n  }\n}\n\n    \n\n    \n        \n  {{url ? 'Cambia' : 'Seleziona'}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{url ? \\'Cambia\\' : \\'Seleziona\\'}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MediaInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n            \n                Description\n            \n            \n                use this service if you want to send messages from a component to others\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOGGED_IN_USER_UPDATED\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearMessage\n                            \n                            \n                                getMessage\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/message.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            clear message after read it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/message.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            get the message\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/message.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            send new message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOGGED_IN_USER_UPDATED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOGGED_IN_USER_UPDATED:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOGGED_IN_USER_UPDATED'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/message.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/message.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\n\n/**\n * use this service if you want to send messages from a component to others\n */\n@Injectable()\nexport class MessageService {\n  static LOGGED_IN_USER_UPDATED = 'LOGGED_IN_USER_UPDATED';\n\n  private subject = new Subject();\n\n  /**\n   * send new message\n   *\n   * @param {string} message\n   */\n  sendMessage(message: string) {\n    this.subject.next({text: message});\n  }\n\n  /**\n   * clear message after read it\n   */\n  clearMessage() {\n    this.subject.next();\n  }\n\n  /**\n   * get the message\n   *\n   * @returns {Observable}\n   */\n  getMessage(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyMissingTranslationHandler.html":{"url":"classes/MyMissingTranslationHandler.html","title":"class - MyMissingTranslationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyMissingTranslationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n            \n                Description\n            \n            \n                handle strings with missing translation value and return the default string.\n\n            \n\n\n            \n                Implements\n            \n            \n                        MissingTranslationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(params: MissingTranslationHandlerParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.module.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    MissingTranslationHandlerParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {AppRoutes} from './app.routing';\nimport {RouterModule} from '@angular/router';\nimport {PagesModule} from './pages/pages.module';\nimport {ServicesModule} from './services/services.module';\nimport {GuardsModule} from './guards/guards.module';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\nimport {environment} from '../environments/environment';\n\nimport {TranslateModule, TranslateLoader, MissingTranslationHandler, MissingTranslationHandlerParams} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {CookieLawModule} from 'angular2-cookie-law';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n/**\n * handle strings with missing translation value and return the default string.\n *\n */\nexport class MyMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams) {\n    return params.key;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(AppRoutes),\n    PagesModule,\n    ServicesModule,\n    GuardsModule,\n    CookieLawModule,\n    HttpClientModule,\n    /**\n     * Modules for translation\n     *\n     */\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useClass: MyMissingTranslationHandler\n      }\n    }),\n    /**\n     * include Firebase modules just if you need it, set environment.isFirebase = true\n     *\n     */\n    ...environment.isFirebase ? [\n      AngularFireModule.initializeApp(environment['firebaseConfig']),\n      AngularFirestoreModule,\n      AngularFireAuthModule\n    ] : []\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                isCollapsed\n                            \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCollapsed:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     \n\n                    \n                \n                    \n                        \n                            Default value : SIDEBAR_ROUTES.filter(value => value.autorizedUsers.indexOf(SessionService.getLoggedInUser().userRole) > -1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:24\n                            \n                        \n\n                \n                    \n                        assign as menu items just the routes associated to the loggedInUser role.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {SIDEBAR_ROUTES} from '../sidebar/sidebar-routes.config';\nimport {SessionService} from '../../services/session.service';\nimport {AuthenticationService} from '../../server/services/authentication.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  environment = environment;\n\n  constructor(private authService: AuthenticationService) {\n  }\n\n  isCollapsed = true;\n  /**\n   * assign as menu items just the routes associated to the loggedInUser role.\n   *\n   * @type {RouteInfo[]}\n   */\n  menuItems = SIDEBAR_ROUTES.filter(value => value.autorizedUsers.indexOf(SessionService.getLoggedInUser().userRole) > -1);\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n\n    \n\n    \n        \n  {{environment.APP_NAME}}\n  \n    \n  \n\n  \n    \n      \n        {{item.title | translate}}\n      \n      \n        \n          {{'Profile' | translate}}\n        \n      \n      \n        {{'Logout' | translate}}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{environment.APP_NAME}}                            {{item.title | translate}}                              {{\\'Profile\\' | translate}}                            {{\\'Logout\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OrderByPipe.html":{"url":"pipes/OrderByPipe.html","title":"pipe - OrderByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OrderByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/orderby.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        orderBy\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            _orderByComparator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _orderByComparator(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/orderby.pipe.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(input: any, config: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/orderby.pipe.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '+'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tmp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tmp:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pipes/orderby.pipe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'orderBy', pure: false })\nexport class OrderByPipe implements PipeTransform {\n  tmp = [];\n  static _orderByComparator(a: any, b: any): number {\n    if (!a && !b) return 0;\n    if (a === b) return 0;\n\n    if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n      //Isn't a number so lowercase the string to properly compare\n      if (a.toLowerCase()  b.toLowerCase()) return 1;\n    }\n    else {\n      //Parse strings as numbers to compare properly\n      if (parseFloat(a)  parseFloat(b)) return 1;\n    }\n\n    return 0; //equal each other\n  }\n\n  transform(input: any, config = '+'): any {\n    this.tmp.length = 0;\n    if (!Array.isArray(input)) return input;\n    let arr = [];\n    if (!Array.isArray(config) || (Array.isArray(config) && config.length == 1)) {\n      var propertyToCheck: string = !Array.isArray(config) ? config : config[0];\n      var desc = propertyToCheck.substr(0, 1) == '-';\n\n      //Basic array\n      if (!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+') {\n        arr = !desc ? input.sort() : input.sort().reverse();\n      }\n      else {\n        var property: string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\n          ? propertyToCheck.substr(1)\n          : propertyToCheck;\n\n        arr = input.sort(function (a: any, b: any) {\n          return !desc\n            ? OrderByPipe._orderByComparator(a[property], b[property])\n            : -OrderByPipe._orderByComparator(a[property], b[property]);\n        });\n      }\n    }\n    else {\n      //Loop over property of the array in order and sort\n      arr = input.sort(function (a: any, b: any) {\n        for (var i: number = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n  Modules\n  PagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nPlatformModule\n\nPlatformModule\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nPlatformModule->PagesModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nPagesModule -->\n\nPublicModule->PagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    PlatformModule\n                            \n                            \n                                    PublicModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {PublicModule} from './public/public.module';\nimport {PlatformModule} from './platform/platform.module';\n\n@NgModule({\n  imports: [\n    PlatformModule,\n    PublicModule\n  ],\n  declarations: [],\n  exports: []\n})\nexport class PagesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipeModule.html":{"url":"modules/PipeModule.html","title":"module - PipeModule","body":"\n                   \n\n\n\n\n  Modules\n  PipeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipeModule\n\n\n\ncluster_PipeModule_declarations\n\n\n\ncluster_PipeModule_exports\n\n\n\n\nKeysPipe\n\nKeysPipe\n\n\n\nPipeModule\n\nPipeModule\n\nPipeModule -->\n\nKeysPipe->PipeModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nPipeModule -->\n\nOrderByPipe->PipeModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nPipeModule -->\n\nReversePipe->PipeModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nPipeModule -->\n\nSafePipe->PipeModule\n\n\n\n\n\nWherePipe\n\nWherePipe\n\nPipeModule -->\n\nWherePipe->PipeModule\n\n\n\n\n\nKeysPipe \n\nKeysPipe \n\nKeysPipe  -->\n\nPipeModule->KeysPipe \n\n\n\n\n\nOrderByPipe \n\nOrderByPipe \n\nOrderByPipe  -->\n\nPipeModule->OrderByPipe \n\n\n\n\n\nReversePipe \n\nReversePipe \n\nReversePipe  -->\n\nPipeModule->ReversePipe \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nPipeModule->SafePipe \n\n\n\n\n\nWherePipe \n\nWherePipe \n\nWherePipe  -->\n\nPipeModule->WherePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipe.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                KeysPipe\n                            \n                            \n                                OrderByPipe\n                            \n                            \n                                ReversePipe\n                            \n                            \n                                SafePipe\n                            \n                            \n                                WherePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    KeysPipe\n                            \n                            \n                                    OrderByPipe\n                            \n                            \n                                    ReversePipe\n                            \n                            \n                                    SafePipe\n                            \n                            \n                                    WherePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {OrderByPipe} from './orderby.pipe';\nimport {WherePipe} from './where.pipe';\nimport {KeysPipe} from './keys.pipe';\nimport {SafePipe} from './safe.pipe';\nimport {ReversePipe} from './reverse.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    OrderByPipe,\n    WherePipe,\n    KeysPipe,\n    SafePipe,\n    ReversePipe\n  ],\n  exports: [\n    OrderByPipe,\n    WherePipe,\n    KeysPipe,\n    SafePipe,\n    ReversePipe\n  ],\n})\n\nexport class PipeModule {\n\n  static forRoot() {\n    return {\n      ngModule: PipeModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlatformLayoutComponent.html":{"url":"components/PlatformLayoutComponent.html","title":"component - PlatformLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlatformLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@core/layouts/platform/platform-layout.component.ts\n\n\n    \n        Description\n    \n    \n        standard Layout extended by platform pages that automatically includes the UI components in the View.\nif you need to do something just for platform, you can do it here instead the AppComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n\n\n\n            \n                templateUrl\n                ./platform-layout.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * standard Layout extended by platform pages that automatically includes the UI components in the View.\n * if you need to do something just for platform, you can do it here instead the AppComponent\n */\n@Component({\n  selector: 'app-layout',\n  templateUrl: './platform-layout.component.html'\n})\nexport class PlatformLayoutComponent {\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlatformLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlatformModule.html":{"url":"modules/PlatformModule.html","title":"module - PlatformModule","body":"\n                   \n\n\n\n\n  Modules\n  PlatformModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlatformModule\n\n\n\ncluster_PlatformModule_declarations\n\n\n\ncluster_PlatformModule_imports\n\n\n\ncluster_PlatformModule_exports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nPlatformModule\n\nPlatformModule\n\nPlatformModule -->\n\nDashboardComponent->PlatformModule\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nPlatformModule -->\n\nUserDetailComponent->PlatformModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nPlatformModule -->\n\nUserListComponent->PlatformModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nPlatformModule->DashboardComponent \n\n\n\n\n\nUserDetailComponent \n\nUserDetailComponent \n\nUserDetailComponent  -->\n\nPlatformModule->UserDetailComponent \n\n\n\n\n\nUserListComponent \n\nUserListComponent \n\nUserListComponent  -->\n\nPlatformModule->UserListComponent \n\n\n\n\n\nModulesModule\n\nModulesModule\n\nPlatformModule -->\n\nModulesModule->PlatformModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/platform/platform.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                UserDetailComponent\n                            \n                            \n                                UserListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ModulesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DashboardComponent\n                            \n                            \n                                    UserDetailComponent\n                            \n                            \n                                    UserListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {MatIconModule} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {UserDetailComponent} from './user-detail/user-detail.component';\nimport {UserListComponent} from './user-list/user-list.component';\nimport {ModulesModule} from '../../@core/core.module';\nimport {PipeModule} from '../../pipes/pipe.module';\nimport {ComponentsModule} from '../../components/components.module';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    ModulesModule,\n    RouterModule,\n    NgbModule.forRoot(),\n    PipeModule.forRoot(),\n    TranslateModule.forChild({}),\n    MatIconModule,\n  ],\n  declarations: [\n    DashboardComponent,\n    UserDetailComponent,\n    UserListComponent,\n  ],\n  exports: [\n    DashboardComponent,\n    UserDetailComponent,\n    UserListComponent,\n  ]\n})\nexport class PlatformModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PolicyComponent.html":{"url":"components/PolicyComponent.html","title":"component - PolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/public/policy/policy.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BasePageComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                app-policy\n            \n\n\n\n\n            \n                templateUrl\n                ./policy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                loggedinUser\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                askForConfirmation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/public/policy/policy.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/policy/policy.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            askForConfirmation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        askForConfirmation()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:37\n                            \n                        \n\n\n                \n                    \n                            show default dialog to ask for confirmation before starting a process.\nvery useful for CRUD.\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    if true you can proceede.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.BASE_SERVER_URL\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedinUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedinUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BasePageComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BasePageComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnDestroy, OnInit} from '@angular/core';\nimport {BasePageComponent} from '../../../@core/base-page/base-page.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-policy',\n  templateUrl: './policy.component.html',\n})\nexport class PolicyComponent extends BasePageComponent implements OnInit {\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.setTitle('Policy');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    Policy here\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Policy here  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublicLayoutComponent.html":{"url":"components/PublicLayoutComponent.html","title":"component - PublicLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublicLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@core/layouts/public/public-layout.component.ts\n\n\n    \n        Description\n    \n    \n        standard Layout extended by public pages that automatically includes the UI components in the View.\nif you need to do something just for public pages, you can do it here instead the AppComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                public-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./public-layout.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * standard Layout extended by public pages that automatically includes the UI components in the View.\n * if you need to do something just for public pages, you can do it here instead the AppComponent\n */\n@Component({\n  selector: 'app-layout',\n  styleUrls: ['./public-layout.component.scss'],\n  templateUrl: './public-layout.component.html'\n})\nexport class PublicLayoutComponent {\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublicLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublicModule.html":{"url":"modules/PublicModule.html","title":"module - PublicModule","body":"\n                   \n\n\n\n\n  Modules\n  PublicModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_imports\n\n\n\ncluster_PublicModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPolicyComponent\n\nPolicyComponent\n\nPublicModule -->\n\nPolicyComponent->PublicModule\n\n\n\n\n\nRecoveryPasswordComponent\n\nRecoveryPasswordComponent\n\nPublicModule -->\n\nRecoveryPasswordComponent->PublicModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nPublicModule -->\n\nRegisterComponent->PublicModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nPublicModule -->\n\nResetPasswordComponent->PublicModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nPublicModule->LoginComponent \n\n\n\n\n\nPolicyComponent \n\nPolicyComponent \n\nPolicyComponent  -->\n\nPublicModule->PolicyComponent \n\n\n\n\n\nRecoveryPasswordComponent \n\nRecoveryPasswordComponent \n\nRecoveryPasswordComponent  -->\n\nPublicModule->RecoveryPasswordComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nPublicModule->RegisterComponent \n\n\n\n\n\nResetPasswordComponent \n\nResetPasswordComponent \n\nResetPasswordComponent  -->\n\nPublicModule->ResetPasswordComponent \n\n\n\n\n\nModulesModule\n\nModulesModule\n\nPublicModule -->\n\nModulesModule->PublicModule\n\n\n\n\n\nPlatformModule\n\nPlatformModule\n\nPublicModule -->\n\nPlatformModule->PublicModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/public/public.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PolicyComponent\n                            \n                            \n                                RecoveryPasswordComponent\n                            \n                            \n                                RegisterComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ModulesModule\n                            \n                            \n                                    PlatformModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PolicyComponent\n                            \n                            \n                                    RecoveryPasswordComponent\n                            \n                            \n                                    RegisterComponent\n                            \n                            \n                                    ResetPasswordComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {MatIconModule} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {ModulesModule} from '../../@core/core.module';\nimport {PipeModule} from '../../pipes/pipe.module';\nimport {ComponentsModule} from '../../components/components.module';\nimport {LoginComponent} from './login/login.component';\nimport {RecoveryPasswordComponent} from './recovery-password/recovery-password.component';\nimport {ResetPasswordComponent} from './reset-password/reset-password.component';\nimport {PlatformModule} from '../platform/platform.module';\nimport {RegisterComponent} from './register/register.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {PolicyComponent} from './policy/policy.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    ModulesModule,\n    PlatformModule,\n    RouterModule,\n    NgbModule.forRoot(),\n    PipeModule.forRoot(),\n    TranslateModule.forChild({}),\n    MatIconModule,\n  ],\n  declarations: [\n    LoginComponent,\n    RecoveryPasswordComponent,\n    RegisterComponent,\n    ResetPasswordComponent,\n    PolicyComponent\n  ],\n  exports: [\n    LoginComponent,\n    RecoveryPasswordComponent,\n    RegisterComponent,\n    ResetPasswordComponent,\n    PolicyComponent\n  ]\n})\nexport class PublicModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoveryPasswordComponent.html":{"url":"components/RecoveryPasswordComponent.html","title":"component - RecoveryPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoveryPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/public/recovery-password/recovery-password.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recovery-password\n            \n\n            \n                styleUrls\n                recovery-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recovery-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/public/recovery-password/recovery-password.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/recovery-password/recovery-password.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit(form: , valid: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/recovery-password/recovery-password.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/recovery-password/recovery-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/recovery-password/recovery-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {BaseComponent} from '../../../@core/base-component/base.component';\nimport {CustomNotification, CustomNotificationDuration, CustomNotificationType} from '../../../models/ui/CustomNotification';\nimport {UserService} from '../../../server/services/user.service';\n\n@Component({\n  selector: 'app-recovery-password',\n  templateUrl: './recovery-password.component.html',\n  styleUrls: ['./recovery-password.component.scss']\n})\nexport class RecoveryPasswordComponent extends BaseComponent implements OnInit {\n  environment = environment;\n\n  constructor(protected injector: Injector, public userService: UserService) {\n    super(injector);\n    this.setTitle(this.translateService.instant('Recovery password'));\n  }\n\n  ngOnInit() {\n  }\n\n  submit(form, valid) {\n    if (valid) {\n      this.isLoading = true;\n      this.userService.forgotPassword(form.email)\n        .then(res => {\n          CustomNotification.showNotification(this.toastr, this.translateService.instant('Reset email sent!'), '', CustomNotificationType.SUCCESS, CustomNotificationDuration.VERY_LONG);\n          this.isLoading = false;\n        })\n        .catch(error => {\n          this.isLoading = false;\n          this.handleAPIError(error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{\"RECOVERY PASSWORD\" | translate}}\n      {{\"Insert your email and check your inbox.\" | translate}}\n    \n\n    \n      \n      {{\"Email address\" | translate}}\n    \n    {{\"Confirm\" | translate}}\n    \n      {{\"or go to Login\" | translate}}\n    \n    Winkular by Wink\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{\"RECOVERY PASSWORD\" | translate}}      {{\"Insert your email and check your inbox.\" | translate}}                    {{\"Email address\" | translate}}        {{\"Confirm\" | translate}}          {{\"or go to Login\" | translate}}        Winkular by Wink  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoveryPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/public/register/register.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                environment\n                            \n                            \n                                user\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/public/register/register.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit(model: User, isValid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isValid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : new User()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {BaseComponent} from '../../../@core/base-component/base.component';\nimport {User} from '../../../models/User';\nimport {CustomNotification, CustomNotificationDuration, CustomNotificationType} from '../../../models/ui/CustomNotification';\nimport {UserRole} from '../../../services/session.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent extends BaseComponent implements OnInit {\n  environment = environment;\n  user: User = new User();\n  confirmPassword: string = '';\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.setTitle(this.translateService.instant('Register'));\n  }\n\n  ngOnInit() {\n  }\n\n  submit(model: User, isValid: boolean) {\n    console.log(model, isValid);\n    if (isValid && this.confirmPassword.length > 0 && this.confirmPassword === this.user.password) {\n      this.createUser();\n    }\n  }\n\n  createUser() {\n    this.isLoading = true;\n    this.user.userRole = UserRole.CUSTOMER;\n    this.authService.signup(this.user.email, this.user.password).then(() => {\n      CustomNotification.showNotification(this.toastr, this.translateService.instant('Operation completed successfully!'), '', CustomNotificationType.SUCCESS, CustomNotificationDuration.SLOW);\n      this.isLoading = false;\n      this.router.navigateByUrl('/login');\n    }).catch((error) => {\n      console.log(error);\n      this.isLoading = false;\n      this.handleAPIError(error);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{'REGISTER' | translate}}\n      {{'Join in the community' | translate}}\n    \n\n    \n      \n      {{'Email address' | translate}}\n    \n\n    \n      \n      {{'Password' | translate}}\n    \n\n    \n      \n      {{'Confirm Password' | translate}}\n    \n\n    {{'Confirm' | translate}}\n    \n      {{'or go to Login' | translate}}\n    \n    Winkular by Wink\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{\\'REGISTER\\' | translate}}      {{\\'Join in the community\\' | translate}}                    {{\\'Email address\\' | translate}}                    {{\\'Password\\' | translate}}                    {{\\'Confirm Password\\' | translate}}        {{\\'Confirm\\' | translate}}          {{\\'or go to Login\\' | translate}}        Winkular by Wink  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/public/reset-password/reset-password.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                environment\n                            \n                            \n                                newPassword\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                activatedRoute\n                            \n                            \n                                authService\n                            \n                            \n                                environment\n                            \n                            \n                                globals\n                            \n                            \n                                googleAnalyticsEventsService\n                            \n                            \n                                isLoading\n                            \n                            \n                                router\n                            \n                            \n                                title\n                            \n                            \n                                titleService\n                            \n                            \n                                toastr\n                            \n                            \n                                translateService\n                            \n                            \n                                userRole\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                            \n                                    Protected\n                                handleAPIError\n                            \n                            \n                                    Protected\n                                setTitle\n                            \n                            \n                                    Protected\n                                showErrorNotification\n                            \n                            \n                                    Protected\n                                submitEventToAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/public/reset-password/reset-password.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit(form: , valid: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleAPIError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAPIError(error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:52\n                            \n                        \n\n\n                \n                    \n                            handle API error for you! Implement it in the catch.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:66\n                            \n                        \n\n\n                \n                    \n                            call it On Init of every page component, it will set the default title of your page\nso you can pass it to the ToolbarComponent and can see the title on the browser card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showErrorNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showErrorNotification(title: string, error: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            show the default error notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitEventToAnalytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submitEventToAnalytics(category: , action: , label: , value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:84\n                            \n                        \n\n\n                \n                    \n                            event fired from .html element (button, link, ... ).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        code:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirmation:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/public/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activatedRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedRoute:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        globals:     \n\n                    \n                \n                    \n                        \n                            Default value : Globals\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleAnalyticsEventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleAnalyticsEventsService:     GoogleAnalyticsEventsService\n\n                    \n                \n                    \n                        \n                            Type :     GoogleAnalyticsEventsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toastr:     ToastrService\n\n                    \n                \n                    \n                        \n                            Type :     ToastrService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     \n\n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {BaseComponent} from '../../../@core/base-component/base.component';\nimport {environment} from '../../../../environments/environment';\nimport {Component, OnInit, Injector} from '@angular/core';\nimport {CustomNotification, CustomNotificationDuration, CustomNotificationType} from '../../../models/ui/CustomNotification';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent extends BaseComponent implements OnInit {\n  environment = environment;\n  code: string;\n  newPassword;\n  passwordConfirmation;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.setTitle(this.translateService.instant('Reset password'));\n  }\n\n  ngOnInit() {\n    this.code = this.activatedRoute.snapshot.queryParamMap.get('code');\n    if (!this.code) {\n      this.router.navigate(['/recovery-password']);\n    }\n  }\n\n  submit(form, valid) {\n    if (valid && form.value.newPassword === form.value.passwordConfirmation) {\n      this.isLoading = true;\n      this.authService.resetPassword(form.value.newPassword, form.value.passwordConfirmation, this.code)\n        .then(res => {\n          CustomNotification.showNotification(this.toastr, this.translateService.instant('Password resetted!'), '', CustomNotificationType.SUCCESS, CustomNotificationDuration.SLOW);\n          this.isLoading = false;\n          this.router.navigate(['/login']);\n        })\n        .catch(error => {\n          console.log(error);\n          this.isLoading = false;\n          this.handleAPIError(error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{environment.APP_NAME}}\n      {{'RESET PASSWORD' | translate}}\n      {{'Insert new password' | translate}}\n    \n\n    \n      {{'New password' | translate}}\n      \n      {{'Insert new password' | translate}}\n    \n    \n      {{'Confirm password' | translate}}\n      \n      {{'Confirm password' | translate}}\n      {{'Password does not match' | translate}}\n    \n    {{'Confirm' | translate}}\n    Winkular by Wink\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{environment.APP_NAME}}      {{\\'RESET PASSWORD\\' | translate}}      {{\\'Insert new password\\' | translate}}              {{\\'New password\\' | translate}}            {{\\'Insert new password\\' | translate}}              {{\\'Confirm password\\' | translate}}            {{\\'Confirm password\\' | translate}}      {{\\'Password does not match\\' | translate}}        {{\\'Confirm\\' | translate}}    Winkular by Wink  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseError.html":{"url":"classes/ResponseError.html","title":"class - ResponseError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ResponseError.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(code: number, message?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/ResponseError.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        code:     ErrorCode\n\n                    \n                \n                    \n                        \n                            Type :     ErrorCode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/ResponseError.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/ResponseError.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseError {\n  constructor() {\n    Error.apply(this, arguments);\n  }\n}\n\nBaseError.prototype = new Error();\n\nexport class ResponseError extends BaseError {\n  code: ErrorCode;\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    super();\n    if (code \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReversePipe.html":{"url":"pipes/ReversePipe.html","title":"pipe - ReversePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReversePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/reverse.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        reverse\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(values: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/reverse.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Pipe} from '@angular/core';\n\n@Pipe({\n    name: 'reverse',\n    pure: false\n})\nexport class ReversePipe {\n    transform (values) {\n        if (values) {\n            return values.reverse();\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"models/RouteInfo.html","title":"models - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/sidebar/sidebar.metadata.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autorizedUsers\n                                \n                                \n                                        icon\n                                \n                                \n                                        path\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorizedUsers\n                                    \n                                \n                                \n                                    \n                                        autorizedUsers:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserRole} from '../../services/session.service';\n\nexport models RouteInfo {\n    path: string;\n    title: string;\n    icon: string;\n    autorizedUsers: UserRole[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/safe.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safe\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/safe.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n    transform(url) {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerUser.html":{"url":"classes/ServerUser.html","title":"class - ServerUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/models/ServerUser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isMale\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                media\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                profileImg\n                            \n                            \n                                    Optional\n                                registeredAt\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                    Optional\n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                map\n                            \n                            \n                                    Static\n                                mapReverse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateOfBirth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateOfBirth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isMale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMale:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            media\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        media:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profileImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registeredAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registeredAt:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        telephone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        map(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:27\n                            \n                        \n\n\n                \n                    \n                            call this method to map the User to ServerUser\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ServerUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            mapReverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapReverse(serverObject: ServerUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/models/ServerUser.ts:48\n                            \n                        \n\n\n                \n                    \n                            call this method to map the ServerUser to User\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serverObject\n                                                        \n                                                                    ServerUser\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '../../models/User';\nimport {UserRole} from '../../services/session.service';\n\nexport class ServerUser {\n  _id?: string;\n  id?: string;\n  userRole?: string;\n  firstName?: string;\n  lastName?: string;\n  description?: string;\n  email?: string;\n  telephone?: string;\n  profileImg?: string;\n  dateOfBirth?: number;\n  registeredAt?: number;\n  isMale?: boolean;\n  password?: string;\n  username?: string;\n  media?: any[];\n\n  /**\n   * call this method to map the User to ServerUser\n   *\n   * @param {} user\n   * @returns {ServerUser}\n   */\n  static map(user: User): ServerUser {\n    const u = {} as ServerUser;\n    u.userRole = user.userRole ? user.userRole.toString() : null;\n    u.firstName = user.firstName || null;\n    u.lastName = user.lastName || null;\n    u.description = user.description || null;\n    u.telephone = user.telephone || null;\n    u.profileImg = user.profileImg || null;\n    u.isMale = user.isMale;\n    u.media = user.media || [];\n    u.dateOfBirth = user.dateOfBirth ? user.dateOfBirth.getTime() : null;\n    u.registeredAt = user.registeredAt ? user.registeredAt.getTime() : null;\n    return u;\n  }\n\n  /**\n   * call this method to map the ServerUser to User\n   *\n   * @param {ServerUser} serverObject\n   * @returns {}\n   */\n  static mapReverse(serverObject: ServerUser): User {\n    const u = {} as User;\n    u.id = serverObject._id || serverObject.id;\n    u.userRole = serverObject.userRole ? UserRole[serverObject.userRole.toUpperCase()] : null;\n    u.email = serverObject.email;\n    u.firstName = serverObject.firstName;\n    u.lastName = serverObject.lastName;\n    u.description = serverObject.description;\n    u.telephone = serverObject.telephone;\n    u.profileImg = serverObject.profileImg;\n    u.dateOfBirth = serverObject.dateOfBirth ? new Date(serverObject.dateOfBirth) : null;\n    u.registeredAt = serverObject.registeredAt ? new Date(serverObject.registeredAt) : null;\n    u.isMale = serverObject.isMale;\n    u.media = serverObject.media || [];\n    u.fullName = u.lastName + ' ' + u.firstName;\n    return u;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n  Modules\n  ServicesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nGoogleAnalyticsEventsService\n\nGoogleAnalyticsEventsService\n\nServicesModule -->\n\nGoogleAnalyticsEventsService->ServicesModule\n\n\n\n\n\nLocalStoreService\n\nLocalStoreService\n\nServicesModule -->\n\nLocalStoreService->ServicesModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nServicesModule -->\n\nMessageService->ServicesModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nServicesModule -->\n\nSessionService->ServicesModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nServicesModule -->\n\nStorageService->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     GoogleAnalyticsEventsService\n                            \n                            \n                                     LocalStoreService\n                            \n                            \n                                     MessageService\n                            \n                            \n                                     SessionService\n                            \n                            \n                                     StorageService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {GoogleAnalyticsEventsService} from './google-analytics-events.service';\nimport {MessageService} from './message.service';\nimport {SessionService} from './session.service';\nimport {LocalStoreService} from './local-store.service';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastrModule} from 'ngx-toastr';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {AuthenticationService} from '../server/services/authentication.service';\nimport {UserService} from '../server/services/user.service';\nimport {StorageService} from '../server/services/storage.service';\n\n@NgModule({\n  imports: [\n    NgbModule.forRoot(),\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    NoopAnimationsModule,\n  ],\n  declarations: [],\n  exports: [],\n  providers: [\n    AuthenticationService,\n    GoogleAnalyticsEventsService,\n    MessageService,\n    SessionService,\n    LocalStoreService,\n    UserService,\n    StorageService\n  ],\n})\nexport class ServicesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                TOKEN_KEY\n                            \n                            \n                                    Static\n                                USER_KEY\n                            \n                            \n                                    Static\n                                USER_KEY_MD5\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearSession\n                            \n                            \n                                    Static\n                                getAccessToken\n                            \n                            \n                                    Static\n                                getLoggedInUser\n                            \n                            \n                                    Static\n                                isLoggedIn\n                            \n                            \n                                    Static\n                                saveLoggedInUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clearSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearSession()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/session.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccessToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/session.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getLoggedInUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLoggedInUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/session.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/session.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            saveLoggedInUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveLoggedInUser(user: User, token?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/session.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            save the logged user in Local Storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     \n\n                    \n                \n                    \n                        \n                            Default value : `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.access_token`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            USER_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USER_KEY:     \n\n                    \n                \n                    \n                        \n                            Default value : `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.logged_in_user`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            USER_KEY_MD5\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USER_KEY_MD5:     \n\n                    \n                \n                    \n                        \n                            Default value : `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.logged_in_user_md5`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/session.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {User} from '../models/User';\nimport {Md5} from 'md5-typescript';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class SessionService {\n\n  public static TOKEN_KEY = `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.access_token`;\n  public static USER_KEY = `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.logged_in_user`;\n  public static USER_KEY_MD5 = `com.${encodeURIComponent(environment.APP_NAME)}-backoffice.logged_in_user_md5`;\n\n  /**\n   * save the logged user in Local Storage\n   * @param {User} user\n   * @param {string} token\n   */\n  static saveLoggedInUser(user: User, token?: string) {\n    localStorage.setItem(SessionService.USER_KEY, JSON.stringify(user));\n    localStorage.setItem(SessionService.USER_KEY_MD5, Md5.init('#$/N0nPu01Fr3g4r3W1nk/*@' + Md5.init(JSON.stringify(user))));\n    localStorage.setItem(SessionService.TOKEN_KEY, 'Bearer ' + token);\n  }\n\n  static getAccessToken(): string {\n    return localStorage.getItem(SessionService.TOKEN_KEY);\n  }\n\n  static isLoggedIn(): boolean {\n    return localStorage.getItem(SessionService.USER_KEY) != null && localStorage.getItem(SessionService.USER_KEY_MD5) != null;\n  }\n\n  static clearSession() {\n    localStorage.clear();\n  }\n\n  static getLoggedInUser(): User {\n    const sU = localStorage.getItem(SessionService.USER_KEY);\n    const sMd5 = localStorage.getItem(SessionService.USER_KEY_MD5);\n    if (sMd5 && sMd5 !== Md5.init('#$/N0nPu01Fr3g4r3W1nk/*@' + Md5.init(sU))) {\n      this.clearSession();\n    }\n    const user = JSON.parse(localStorage.getItem(SessionService.USER_KEY));\n    return user as User;\n  }\n\n}\n\n/**\n * here you can edit the user roles in the platform\n */\nexport enum UserRole {\n  ADMIN = 'ADMIN' as any,\n  EDITOR = 'EDITOR' as any,\n  CUSTOMER = 'CUSTOMER' as any,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     \n\n                    \n                \n                    \n                        \n                            Default value : SIDEBAR_ROUTES.filter(value => value.autorizedUsers.indexOf(SessionService.getLoggedInUser().userRole) > -1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:16\n                            \n                        \n\n                \n                    \n                        assign as menu items just the routes associated to the loggedInUser role.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {SIDEBAR_ROUTES} from './sidebar-routes.config';\nimport {SessionService} from '../../services/session.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  /**\n   * assign as menu items just the routes associated to the loggedInUser role.\n   *\n   * @type {RouteInfo[]}\n   */\n  menuItems = SIDEBAR_ROUTES.filter(value => value.autorizedUsers.indexOf(SessionService.getLoggedInUser().userRole) > -1);\n\n  constructor() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{item.title | translate}}\n        \n      \n    \n\n    \n      MENU HEADER\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{item.title | translate}}                            MENU HEADER      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/services/storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mediaList\n                            \n                            \n                                subscriber\n                            \n                            \n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMediaByUserId\n                            \n                            \n                                    Protected\n                                modelConstructor\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/server/services/storage.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getMediaByUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMediaByUserId(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            get media of a specific user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            modelConstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        modelConstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(userId: string, file: File, type: MediaType, onProgressChanged?: (progress?: number) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            upload file in the strapi storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        file\n                                                        \n                                                                    File\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    MediaType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onProgressChanged\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mediaList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mediaList:     Media[]\n\n                    \n                \n                    \n                        \n                            Type :     Media[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriber:     Subscriber\n\n                    \n                \n                    \n                        \n                            Type :     Subscriber\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/server/services/storage.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable, Subscriber} from 'rxjs/index';\nimport {environment} from '../../../environments/environment';\nimport axios from 'axios';\nimport {UserService} from './user.service';\nimport {BaseService} from './base.service';\nimport {Media, MediaType} from '../../models/ui/Media';\n\n\n@Injectable()\nexport class StorageService extends BaseService {\n\n  subscriber: Subscriber;\n  mediaList: Media[] = [];\n  userService: UserService;\n\n  protected modelConstructor(): any {\n    return null;\n  }\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.userService = injector.get(UserService);\n  }\n\n  /**\n   * upload file in the strapi storage\n   *\n   * @param {string} userId\n   * @param {File} file\n   * @param {} type\n   * @param {(progress: number) => any} onProgressChanged\n   * @returns {Promise<>}\n   */\n  upload(userId: string, file: File, type: MediaType, onProgressChanged?: (progress: number) => any): Promise {\n    console.log(userId, file);\n    const url = `${environment.BASE_SERVER_URL}upload`;\n    const data = new FormData();\n    data.append('files', file);\n    data.append('path', 'user/media/');\n    data.append('refId', userId);\n    data.append('ref', 'user');\n    data.append('source', 'user-permissions');\n    data.append('field', 'media');\n    return axios.post(url, data, this.getHeader()).then((response) => {\n      console.log(response, response.data);\n      onProgressChanged(100);\n      const res = response.data[0];\n      const media = {url: res.url, type: type} as Media;\n      this.mediaList.push(media);\n      this.subscriber.next(this.mediaList);\n      this.subscriber.complete();\n      return media;\n    });\n  }\n\n  /**\n   * get media of a specific user\n   *\n   * @param {string} userId\n   * @returns {Promise>}\n   */\n  async getMediaByUserId(userId: string): Promise> {\n    const u = await this.userService.getUserById(userId);\n    console.log(u);\n    this.mediaList = [];\n    if (u.media && u.media.length > 0) {\n      u.media.forEach(m => {\n        const media = {url: environment.BASE_SERVER_URL + m.url.substr(1), type: m.mime.indexOf('pdf') > -1 ? MediaType.PDF : MediaType.IMAGE} as Media;\n        this.mediaList.push(media);\n      });\n    }\n    return new Observable(subscriber => {\n      this.subscriber = subscriber;\n      this.subscriber.next(this.mediaList);\n      this.subscriber.complete();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/@shared/table/table.component.ts\n\n\n    \n        Description\n    \n    \n        show your list in a table\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                translateService\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportAsCSV\n                            \n                            \n                                exportAsXLSX\n                            \n                            \n                                exportList\n                            \n                            \n                                getPages\n                            \n                            \n                                goToPage\n                            \n                            \n                                    Private\n                                initExport\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onElementChecked\n                            \n                            \n                                onNextClicked\n                            \n                            \n                                onPreviousClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                elementsPerPage\n                            \n                            \n                                exportableFormats\n                            \n                            \n                                hasNextPage\n                            \n                            \n                                headers\n                            \n                            \n                                list\n                            \n                            \n                                loading\n                            \n                            \n                                showExportActions\n                            \n                            \n                                showIndexHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPageChange\n                            \n                            \n                                loadMoreItems\n                            \n                            \n                                onChecked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/@shared/table/table.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        elementsPerPage\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        exportableFormats\n                    \n                    \n                            \n                            Type :    ExportableFormats[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasNextPage\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headers\n                    \n                    \n                            \n                            Type :    literal type[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showExportActions\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showIndexHeader\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        currentPageChange\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loadMoreItems\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChecked\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exportAsCSV\n                            \n                            \n                        \n                    \n                \n                \n                    \nexportAsCSV(skipSwal?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            export your list as CSV\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skipSwal\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exportAsXLSX\n                            \n                            \n                        \n                    \n                \n                \n                    \nexportAsXLSX(skipSwal?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            export your list as XLSX\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skipSwal\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exportList\n                            \n                            \n                        \n                    \n                \n                \n                    \nexportList(type: ExportableFormats)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            export your list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    ExportableFormats\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            get total pages\n\n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToPage(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            go to specified page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initExport\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initExport(skipSwal: boolean, onSuccess: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:200\n                            \n                        \n\n\n                \n                    \n                            load more items while there is a next page, after start to export it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        skipSwal\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onSuccess\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onElementChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonElementChecked(element: any, $event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            emitted if user clicks on the checkbox associated to the element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        $event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNextClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNextClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            go to next page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPreviousClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPreviousClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            go to previous page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Default value : environment\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     \n\n                    \n                \n                    \n                        \n                            Default value : Utils\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/@shared/table/table.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Injector, Input, OnInit, Output} from '@angular/core';\nimport {Utils} from '../../../models/static/Utils';\nimport {environment} from '../../../../environments/environment';\nimport * as XLSX from 'xlsx';\nimport Swal from 'sweetalert2';\nimport {TranslateService} from '@ngx-translate/core';\n\ndeclare const require: any;\n\n/**\n * show your list in a table\n */\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  @Input() loading: boolean;\n  @Input() headers: { key: string, title: string, isCustom: boolean }[];\n  @Input() list: any[];\n  @Input() showIndexHeader: boolean;\n  @Input() elementsPerPage: number;\n  @Input() hasNextPage: boolean;\n  @Input() currentPage: number;\n  @Input() showExportActions: boolean;\n  @Input() exportableFormats: ExportableFormats[];\n  @Output() loadMoreItems: EventEmitter = new EventEmitter();\n  @Output() currentPageChange: EventEmitter = new EventEmitter();\n  @Output() onChecked: EventEmitter = new EventEmitter();\n\n  utils = Utils;\n  environment = environment;\n  translateService: TranslateService;\n\n  constructor(private injector: Injector) {\n    this.translateService = injector.get(TranslateService);\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * go to previous page\n   */\n  onPreviousClicked() {\n    this.currentPage--;\n    this.currentPageChange.emit(this.currentPage);\n  }\n\n  /**\n   * go to next page\n   */\n  onNextClicked() {\n    if (this.currentPage  {\n      if (this.hasNextPage) {\n        this.exportAsCSV(true);\n      } else {\n        const Json2csvParser = require('json2csv').Parser;\n        const fields = [];\n        Object.keys(this.list[0]).forEach(f => {\n          if (f !== 'password' && f !== 'media' && f !== 'fullName') {\n            fields.push(f);\n          }\n        });\n        const json2csvParser = new Json2csvParser({fields, delimiter: ';'});\n        const csv = json2csvParser.parse(this.list);\n        const blob = new Blob([csv]);\n        if (window.navigator.msSaveOrOpenBlob) {  // IE hack; see http://msdn.microsoft.com/en-us/library/ie/hh779016.aspx\n          window.navigator.msSaveBlob(blob, `list_${(new Date()).toLocaleString()}.csv`);\n        } else {\n          const a = window.document.createElement('a');\n          a.href = window.URL.createObjectURL(blob, {type: 'text/plain'} as ObjectURLOptions);\n          a.download = `list_${(new Date()).toLocaleString()}.csv`;\n          document.body.appendChild(a);\n          a.click();  // IE: \"Access is denied\"; see: https://connect.microsoft.com/IE/feedback/details/797361/ie-10-treats-blob-url-as-cross-origin-and-denies-access\n          document.body.removeChild(a);\n        }\n      }\n    };\n    this.initExport(skipSwal, onSuccess);\n  }\n\n  /**\n   * export your list as XLSX\n   */\n  exportAsXLSX(skipSwal?: boolean) {\n    const onSuccess = () => {\n      if (this.hasNextPage) {\n        this.exportAsXLSX(true);\n      } else {\n        const fieldsFinal = [];\n        const macrosections = [];\n        const unexportedFields = [];\n        const headers = [];\n        Object.keys(this.list[0]).forEach(f => {\n          if (f !== 'password' && f !== 'media' && f !== 'fullName') {\n              fieldsFinal.push(f);\n              macrosections.push(this.translateService.instant(f));\n              headers.push(f);\n          } else {\n            unexportedFields.push(f);\n          }\n        });\n        const data = this.list.map(s => {\n          s = Utils.clone(s);\n          unexportedFields.forEach(f => {\n            if (f !== 'id') {\n              delete s[f];\n            }\n          });\n          return s as any;\n        });\n        const heading = [\n          macrosections,\n          fieldsFinal\n        ];\n        console.log('DATA', data);\n        const ws = XLSX.utils.aoa_to_sheet(heading);\n        XLSX.utils.sheet_add_json(ws, data, {\n          header: headers,\n          skipHeader: true,\n          origin: 2\n        });\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, this.translateService.instant('List'));\n        const wbout = XLSX.write(wb, {bookType: 'xlsx', type: 'array'});\n        if (window.navigator.msSaveOrOpenBlob) {  // IE hack; see http://msdn.microsoft.com/en-us/library/ie/hh779016.aspx\n          window.navigator.msSaveBlob(new Blob([wbout]), `${this.translateService.instant('List')}_${(new Date()).toLocaleString()}.xlsx`);\n        } else {\n          const a = window.document.createElement('a');\n          a.href = window.URL.createObjectURL(new Blob([wbout]), {type: 'application/octet-stream'} as ObjectURLOptions);\n          a.download = `${this.translateService.instant('List')}_${(new Date()).toLocaleString()}.xlsx`;\n          document.body.appendChild(a);\n          a.click();  // IE: \"Access is denied\"; see: https://connect.microsoft.com/IE/feedback/details/797361/ie-10-treats-blob-url-as-cross-origin-and-denies-access\n          document.body.removeChild(a);\n        }\n      }\n    };\n    this.initExport(skipSwal, onSuccess);\n  }\n\n  /**\n   * load more items while there is a next page, after start to export it.\n   *\n   * @param {boolean} skipSwal\n   * @param {() => any} onSuccess\n   */\n  private initExport(skipSwal: boolean, onSuccess: () => any) {\n    if (skipSwal) {\n      this.loadMoreItems.emit(onSuccess);\n    } else {\n      Swal({\n        title: this.translateService.instant('Are you sure?'),\n        html: `${this.translateService.instant('This process will export all elements filtered by selected filters.')}${this.translateService.instant('Don\\'t abuse of this feature.')}`,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: this.translateService.instant('Yes, continue!'),\n        cancelButtonText: this.translateService.instant('No')\n      }).then((result) => {\n        if (result.value) {\n          this.loadMoreItems.emit(onSuccess);\n        }\n      });\n    }\n  }\n}\n\nexport type ExportableFormats = 'CSV' | 'XLSX';\n\n    \n\n    \n        \n   0\" class=\"btn-toolbar mb-2 mb-md-0\">\n    \n       -1\" class=\"btn btn-sm btn-outline-secondary float-right\" (click)=\"exportList('XLSX');\">Excel\n        (.xlsx)\n      \n       -1\" class=\"btn btn-sm btn-outline-secondary float-right mr-2\" (click)=\"exportList('CSV');\">CSV\n    \n  \n  \n    \n    \n      #\n      {{h.title | translate}}\n    \n    \n    \n    \n      {{'No elements to show' | translate}}\n    \n    \n    \n    \n      = (currentPage-1) * elementsPerPage) && (i \n        {{i + 1}}\n        \n          \n            {{element[h.key] || '--'}}\n          \n          \n            \n              \n            \n          \n          \n            \n              edit\n            \n          \n          \n            \n              edit\n            \n          \n          \n            \n              edit\n            \n          \n          \n            \n              edit\n            \n          \n          \n            \n              edit\n            \n          \n          \n            \n              edit\n            \n          \n          \n            {{element[h.key] ? element[h.key].toLocaleString() : '--'}}\n          \n          \n            {{element[h.key] ? utils.getFormattedPrice(element[h.key], environment.CURRENCY) : '--'}}\n          \n          \n            \n              Open event\n            \n            \n              --\n            \n          \n          \n            \n              {{element[h.key].length}}\n            \n          \n        \n      \n    \n    \n  \n  {{'Total' | translate}} {{list.length}}{{list.length > 0 && hasNextPage ? '+' : ''}}\n  \n    \n      \n        \n          &laquo;\n          {{'Previous' | translate}}\n        \n      \n      \n        = currentPage - 3 && page {{page}}\n      \n      \n        \n          &raquo;\n          {{'Next' | translate}}\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\" class=\"btn-toolbar mb-2 mb-md-0\">           -1\" class=\"btn btn-sm btn-outline-secondary float-right\" (click)=\"exportList(\\'XLSX\\');\">Excel        (.xlsx)             -1\" class=\"btn btn-sm btn-outline-secondary float-right mr-2\" (click)=\"exportList(\\'CSV\\');\">CSV                      #      {{h.title | translate}}                      {{\\'No elements to show\\' | translate}}                      = (currentPage-1) * elementsPerPage) && (i         {{i + 1}}                              {{element[h.key] || \\'--\\'}}                                                                                                        edit                                                          edit                                                          edit                                                          edit                                                          edit                                                          edit                                            {{element[h.key] ? element[h.key].toLocaleString() : \\'--\\'}}                                {{element[h.key] ? utils.getFormattedPrice(element[h.key], environment.CURRENCY) : \\'--\\'}}                                              Open event                                      --                                                          {{element[h.key].length}}                                                {{\\'Total\\' | translate}} {{list.length}}{{list.length > 0 && hasNextPage ? \\'+\\' : \\'\\'}}                              «          {{\\'Previous\\' | translate}}                            = currentPage - 3 && page {{page}}                              »          {{\\'Next\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/@shared/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonCTA\n                            \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/@shared/toolbar/toolbar.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonCTA\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/toolbar/toolbar.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/toolbar/toolbar.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/toolbar/toolbar.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onButtonClicked\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/@shared/toolbar/toolbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuttonClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/@shared/toolbar/toolbar.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            emits the click on the custom button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n  @Input() title: String;\n  @Input() buttonCTA: string;\n  @Input() loading: boolean;\n  @Output() onButtonClicked: EventEmitter = new EventEmitter();\n\n  constructor() {\n  }\n\n  /**\n   * emits the click on the custom button\n   */\n  buttonClicked() {\n    this.onButtonClicked.emit();\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n  {{title | translate}}\n  \n    {{buttonCTA | translate}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title | translate}}      {{buttonCTA | translate}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'BasePageComponent', 'selector': 'app-base'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MediaInputComponent', 'selector': 'media-input'},{'name': 'MediaModalComponent', 'selector': 'media-modal'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PlatformLayoutComponent', 'selector': 'app-layout'},{'name': 'PolicyComponent', 'selector': 'app-policy'},{'name': 'PublicLayoutComponent', 'selector': 'app-layout'},{'name': 'RecoveryPasswordComponent', 'selector': 'app-recovery-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Mappable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                isMale\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                media\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                profileImg\n                            \n                            \n                                    Optional\n                                registeredAt\n                            \n                            \n                                    Optional\n                                telephone\n                            \n                            \n                                    Optional\n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                            \n                                mapReverse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, email?: string, password?: string, role?: UserRole, firstName?: string, lastName?: string, description?: string, telephone?: string, profileImg?: string, dateOfBirth?: Date, isMale?: boolean, media?: any[], registeredAt?: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/User.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                    UserRole\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        telephone\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileImg\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateOfBirth\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isMale\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        registeredAt\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateOfBirth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateOfBirth:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            fullName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fullName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isMale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMale:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            media\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        media:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profileImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registeredAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registeredAt:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            telephone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        telephone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     UserRole\n\n                    \n                \n                    \n                        \n                            Type :     UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \nmap(serverObject: ServerUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/User.ts:58\n                            \n                        \n\n\n                \n                    \n                            call this method to map the ServerUser to User\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serverObject\n                                                        \n                                                                    ServerUser\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapReverse\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReverse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/User.ts:71\n                            \n                        \n\n\n                \n                    \n                            call this method to map the User to ServerUser\n\n\n                            \n                            \n                            \n                                Returns :     ServerUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserRole} from '../services/session.service';\nimport {Mappable} from './models/Mappable';\nimport {ServerUser} from '../server/models/ServerUser';\n\nexport class User implements Mappable {\n  id: string;\n  userRole?: UserRole;\n  firstName?: string;\n  lastName?: string;\n  description?: string;\n  email?: string;\n  telephone?: string;\n  password?: string;\n  dateOfBirth?: Date;\n  registeredAt?: Date;\n  profileImg?: string;\n  fullName?: string;\n  isMale?: boolean;\n  media?: any[];\n\n  constructor()\n  constructor(id?: string,\n              email?: string,\n              password?: string,\n              role?: UserRole,\n              firstName?: string,\n              lastName?: string,\n              description?: string,\n              telephone?: string,\n              profileImg?: string,\n              dateOfBirth?: Date,\n              isMale?: boolean,\n              media?: any[],\n              registeredAt?: Date) {\n    this.id = id;\n    this.userRole = role;\n    this.email = email;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.lastName = lastName;\n    this.description = description;\n    this.telephone = telephone;\n    this.password = password;\n    this.dateOfBirth = dateOfBirth;\n    this.registeredAt = registeredAt;\n    this.profileImg = profileImg;\n    this.isMale = isMale;\n    this.media = media;\n    this.fullName = this.lastName + ' ' + this.firstName;\n  }\n\n  /**\n   * call this method to map the ServerUser to User\n   *\n   * @param {ServerUser} serverObject\n   * @returns {User}\n   */\n  map(serverObject: ServerUser): User {\n    const u = ServerUser.mapReverse(serverObject);\n    Object.keys(this).forEach(k => {\n      this[k] = u[k];\n    });\n    return this;\n  }\n\n  /**\n   * call this method to map the User to ServerUser\n   *\n   * @returns {ServerUser}\n   */\n  mapReverse(): ServerUser {\n    return ServerUser.map(this);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMedia.html":{"url":"models/UserMedia.html","title":"models - UserMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/UserMedia.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Media\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Media} from './ui/Media';\n\nexport models UserMedia extends Media {\n  id: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/services/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                getUserById\n                            \n                            \n                                    Protected\n                                modelConstructor\n                            \n                            \n                                setPagination\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/server/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgotPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgotPassword(email: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            recovery your password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            modelConstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        modelConstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPagination\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPagination(pageSize?: number, filters?: literal type, orderByFieldName?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filters\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        orderByFieldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/server/services/user.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {environment} from '../../../environments/environment';\nimport {Injectable, Injector} from '@angular/core';\nimport {User} from '../../models/User';\nimport {UserServiceModel} from '../../models/UserServiceModel';\nimport {BaseService} from './base.service';\n\n@Injectable()\n\nexport class UserService extends BaseService implements UserServiceModel {\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  protected modelConstructor(): User {\n    return new User();\n  }\n\n  setPagination(pageSize?: number, filters?: { [key: string]: string }, orderByFieldName?: string) {\n    this.reset();\n    this.init('user', pageSize, filters, orderByFieldName);\n  }\n\n  getUserById(id: string): Promise {\n    this.setPagination();\n    return this.getObject(id);\n  }\n\n  updateUser(user: User): Promise {\n    return this.patchObject(user);\n  }\n\n  deleteUser(id: string): Promise {\n    return this.deleteObject(id);\n  }\n\n  createUser(user: User): Promise {\n    const url = `${environment.BASE_SERVER_URL}auth/local/register`;\n    const data = user.mapReverse() as any;\n    data.email = user.email;\n    data.username = user.email;\n    data.password = user.password;\n    return this.postData(url, data);\n  }\n\n  /**\n   * recovery your password\n   *\n   * @param email\n   * @returns {Promise}\n   */\n  forgotPassword(email): Promise {\n    const url = `${environment.BASE_SERVER_URL}auth/forgot-password`;\n    const data = {\n      email,\n      url: `${environment.BASE_URL}reset-password`\n    };\n    return this.postData(url, data).then(() => {\n      return true;\n    }).catch(error => {\n      throw this.handleError(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserServiceModel.html":{"url":"models/UserServiceModel.html","title":"models - UserServiceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserServiceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/UserServiceModel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseServiceModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    forgotPassword\n                                \n                                \n                                    getUserById\n                                \n                                \n                                    updateUser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(user: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/UserServiceModel.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/UserServiceModel.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgotPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgotPassword(email: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/UserServiceModel.ts:20\n                            \n                        \n\n\n                \n                    \n                            recovery your password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/UserServiceModel.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUser(user: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/UserServiceModel.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Mappable} from './models/Mappable';\nimport {BaseServiceModel} from './BaseServiceModel';\n\nexport models UserServiceModel> extends BaseServiceModel {\n\n  getUserById(id: string): Promise;\n\n  createUser(user: T): Promise;\n\n  updateUser(user: T): Promise;\n\n  deleteUser(id: string): Promise;\n\n  /**\n   * recovery your password\n   *\n   * @param email\n   * @returns {Promise}\n   */\n  forgotPassword(email): Promise;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/static/Utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clone\n                            \n                            \n                                    Static\n                                cloneArray\n                            \n                            \n                                    Static\n                                cloneDictionary\n                            \n                            \n                                    Static\n                                getBypassedSecurityTrustStyle\n                            \n                            \n                                    Static\n                                getEnumAsArray\n                            \n                            \n                                    Static\n                                getFormattedDate\n                            \n                            \n                                    Static\n                                getFormattedPrice\n                            \n                            \n                                    Static\n                                isDict\n                            \n                            \n                                    Static\n                                isJsonable\n                            \n                            \n                                    Static\n                                orderBy\n                            \n                            \n                                    Static\n                                resetInputFile\n                            \n                            \n                                    Static\n                                setPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clone(object: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:11\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            clone an object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            cloneArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cloneArray(list: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:35\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            clon an object array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            cloneDictionary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cloneDictionary(object: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:21\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            clone a dictionary\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBypassedSecurityTrustStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBypassedSecurityTrustStyle(url: string, sanitizer: DomSanitizer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:117\n                            \n                        \n\n\n                \n                    \n                            get url to show in html\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        sanitizer\n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getEnumAsArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEnumAsArray(en: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:91\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            get array from Enum, useful for *ngFor in View\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        en\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : the enum class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getFormattedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormattedDate(date: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:70\n                            \n                        \n\n\n                \n                    \n                            get a formatted date from the input type=\"date\" to Date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getFormattedPrice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormattedPrice(price: number, currency?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:81\n                            \n                        \n\n\n                \n                    \n                            get a formatted date from the input type=\"date\" to Date\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currency\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isDict\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDict(v: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:127\n                            \n                        \n\n\n                \n                    \n                            check if v is dictionary\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isJsonable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isJsonable(v: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:137\n                            \n                        \n\n\n                \n                    \n                            check if v is Jsonable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            orderBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        orderBy(arr: T[], prop: string, descending: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:51\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            order an array of objects by a prop\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arr\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prop\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        descending\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resetInputFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetInputFile(element: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:60\n                            \n                        \n\n\n                \n                    \n                            reset the value of an input type=\"file\" after file uploaded to upload files with same name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : the ViewChild instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setPrice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setPrice($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/static/Utils.ts:105\n                            \n                        \n\n\n                \n                    \n                            show correctly price in input\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {DomSanitizer} from '@angular/platform-browser';\n\nexport class Utils {\n\n  /**\n   * clone an object\n   *\n   * @param {T} object\n   * @returns {T}\n   */\n  static clone(object: T): T {\n    return Object.assign({}, JSON.parse(JSON.stringify(object)));\n  }\n\n  /**\n   * clone a dictionary\n   *\n   * @param {T} object\n   * @returns {T}\n   */\n  static cloneDictionary(object: T): T {\n    const newObj = {} as T;\n    Object.keys(object).forEach(function (key) {\n      newObj[key] = object[key];\n    });\n    return newObj;\n  }\n\n  /**\n   * clon an object array\n   *\n   * @param {T[]} list\n   * @returns {T[]}\n   */\n  static cloneArray(list: T[]): T[] {\n    const res = [];\n    list.forEach(e => {\n      res.push(this.clone(e));\n    });\n    return res;\n  }\n\n  /**\n   * order an array of objects by a prop\n   *\n   * @param {T[]} arr\n   * @param {string} prop\n   * @param {boolean} descending\n   * @returns {T[]}\n   */\n  static orderBy(arr: T[], prop: string, descending: boolean): T[] {\n    return arr.sort((a, b) => descending ? b[prop] - a[prop] : a[prop] - b[prop]);\n  }\n\n  /**\n   * reset the value of an input type=\"file\" after file uploaded to upload files with same name\n   *\n   * @param element: the ViewChild instance\n   */\n  static resetInputFile(element: any) {\n    element.nativeElement.value = '';\n  }\n\n  /**\n   * get a formatted date from the input type=\"date\" to Date\n   *\n   * @param {{year: number; month: number; day: number}} date\n   * @returns {Date}\n   */\n  static getFormattedDate(date: { year: number, month: number, day: number }): Date {\n    return new Date(date.year, date.month, date.day);\n  }\n\n  /**\n   * get a formatted date from the input type=\"date\" to Date\n   *\n   * @param {number} price\n   * @param {string} currencyL if you want a string with currency behind\n   * @returns {string}\n   */\n  static getFormattedPrice(price: number, currency?: string): string {\n    return (price) ? (currency ? currency + ' ' + (price / 100).toFixed(2) : (price / 100).toFixed(2)) : 'FREE';\n  }\n\n  /**\n   * get array from Enum, useful for *ngFor in View\n   *\n   * @param en: the enum class\n   * @returns {T[]}\n   */\n  static getEnumAsArray(en: any): T[] {\n    const list = [];\n    Object.keys(en).forEach(l => {\n      list.push(en[l]);\n    });\n    return list;\n  }\n\n  /**\n   * show correctly price in input\n   *\n   * @param $event\n   * @param price: variable\n   */\n  static setPrice($event): number {\n    const element = ((window.event) ? ($event.srcElement) : ($event.currentTarget));\n    return Number(element.value) * 100;\n  }\n\n  /**\n   * get url to show in html\n   *\n   * @param {string} url\n   * @param {DomSanitizer} sanitizer\n   * @returns {SafeStyle}\n   */\n  static getBypassedSecurityTrustStyle(url: string, sanitizer: DomSanitizer) {\n    return sanitizer.bypassSecurityTrustStyle(`url(${url})`);\n  }\n\n  /**\n   * check if v is dictionary\n   *\n   * @param v\n   * @returns {boolean}\n   */\n  static isDict(v): boolean {\n    return !!v && typeof v === 'object' && v !== null && !(v instanceof Array) && !(v instanceof Date) && Utils.isJsonable(v);\n  }\n\n  /**\n   *  check if v is Jsonable\n   *\n   * @param v\n   * @returns {boolean}\n   */\n  static isJsonable(v): boolean {\n    try {\n      return JSON.stringify(v) === JSON.stringify(JSON.parse(JSON.stringify(v)));\n    } catch (e) {\n      return false;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/WherePipe.html":{"url":"pipes/WherePipe.html","title":"pipe - WherePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  WherePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/where.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        where\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            _whereComparer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _whereComparer(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/where.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(input: any, args: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/where.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tmp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tmp:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pipes/where.pipe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'where', pure: false})\nexport class WherePipe implements PipeTransform {\n    tmp = [];\n\n    static _whereComparer(a: any, b: any): boolean {\n        if (a && b) {\n            for (let p in b) {\n                if (a[p] != b[p])\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    transform(input: any, args: any): any {\n        this.tmp.length = 0;\n        // let [clauses] = args; // Unexpectedly undefined\n        // console.log(clauses);\n        if (input) {\n            this.tmp.push(...input.filter(item => WherePipe._whereComparer(item, args)));\n        }\n        return this.tmp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@core/base-component/base.component.ts\n            \n            \n                component\n            \n            \n                BaseComponent\n            \n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                \n                src/app/@core/base-page/base-page.component.ts\n            \n            \n                component\n            \n            \n                BasePageComponent\n            \n            \n                21 %\n                (5/23)\n            \n        \n        \n            \n                \n                src/app/@core/layouts/platform/platform-layout.component.ts\n            \n            \n                component\n            \n            \n                PlatformLayoutComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/@core/layouts/public/public-layout.component.ts\n            \n            \n                component\n            \n            \n                PublicLayoutComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                variable\n            \n            \n                ga\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                class\n            \n            \n                MyMissingTranslationHandler\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                HttpLoaderFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/@shared/filters/filters.component.ts\n            \n            \n                component\n            \n            \n                FiltersComponent\n            \n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/app/components/@shared/filters/filters.component.ts\n            \n            \n                models\n            \n            \n                FilterFieldElement\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/components/@shared/media-input/media-input.component.ts\n            \n            \n                component\n            \n            \n                MediaInputComponent\n            \n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/components/@shared/media-modal/media-modal.component.ts\n            \n            \n                component\n            \n            \n                MediaModalComponent\n            \n            \n                22 %\n                (8/36)\n            \n        \n        \n            \n                \n                src/app/components/@shared/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                37 %\n                (10/27)\n            \n        \n        \n            \n                \n                src/app/components/@shared/table/table.component.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/@shared/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar-routes.config.ts\n            \n            \n                variable\n            \n            \n                SIDEBAR_ROUTES\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar.metadata.ts\n            \n            \n                models\n            \n            \n                RouteInfo\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/AuthenticationServiceModel.ts\n            \n            \n                models\n            \n            \n                AuthenticationServiceModel\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/BaseServiceModel.ts\n            \n            \n                models\n            \n            \n                BaseServiceModel\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/models/ResponseError.ts\n            \n            \n                class\n            \n            \n                BaseError\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/models/ResponseError.ts\n            \n            \n                class\n            \n            \n                ResponseError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/models/UserMedia.ts\n            \n            \n                models\n            \n            \n                UserMedia\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/UserServiceModel.ts\n            \n            \n                models\n            \n            \n                UserServiceModel\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/models/models/Mappable.ts\n            \n            \n                models\n            \n            \n                Mappable\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/static/Globals.ts\n            \n            \n                class\n            \n            \n                Globals\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/static/Utils.ts\n            \n            \n                class\n            \n            \n                Utils\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/models/ui/CustomNotification.ts\n            \n            \n                class\n            \n            \n                CustomNotification\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/models/ui/Media.ts\n            \n            \n                models\n            \n            \n                Media\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/platform/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/pages/platform/user-detail/user-detail.component.ts\n            \n            \n                component\n            \n            \n                UserDetailComponent\n            \n            \n                15 %\n                (6/38)\n            \n        \n        \n            \n                \n                src/app/pages/platform/user-list/user-list.component.ts\n            \n            \n                component\n            \n            \n                UserListComponent\n            \n            \n                43 %\n                (16/37)\n            \n        \n        \n            \n                \n                src/app/pages/public/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                16 %\n                (4/24)\n            \n        \n        \n            \n                \n                src/app/pages/public/policy/policy.component.ts\n            \n            \n                component\n            \n            \n                PolicyComponent\n            \n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/pages/public/recovery-password/recovery-password.component.ts\n            \n            \n                component\n            \n            \n                RecoveryPasswordComponent\n            \n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/pages/public/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterComponent\n            \n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                src/app/pages/public/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                src/app/pipes/keys.pipe.ts\n            \n            \n                pipe\n            \n            \n                KeysPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/orderby.pipe.ts\n            \n            \n                pipe\n            \n            \n                OrderByPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/reverse.pipe.ts\n            \n            \n                pipe\n            \n            \n                ReversePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/safe.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/where.pipe.ts\n            \n            \n                pipe\n            \n            \n                WherePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/server/models/ServerUser.ts\n            \n            \n                class\n            \n            \n                ServerUser\n            \n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/server/services/authentication.service.ts\n            \n            \n                class\n            \n            \n                LoginResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/server/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/server/services/base.service.ts\n            \n            \n                injectable\n            \n            \n                BaseService\n            \n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/server/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/server/services/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/google-analytics-events.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleAnalyticsEventsService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/services/google-analytics-events.service.ts\n            \n            \n                variable\n            \n            \n                ga\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-store.service.ts\n            \n            \n                injectable\n            \n            \n                LocalStoreService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            \n                injectable\n            \n            \n                MessageService\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/session.service.ts\n            \n            \n                injectable\n            \n            \n                SessionService\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.6\n        \n            @angular/cdk : 6.3.1\n        \n            @angular/common : 6.0.6\n        \n            @angular/compiler : 6.0.6\n        \n            @angular/core : 6.0.6\n        \n            @angular/forms : 6.0.6\n        \n            @angular/http : 6.0.6\n        \n            @angular/material : 6.3.1\n        \n            @angular/platform-browser : 6.0.6\n        \n            @angular/platform-browser-dynamic : 6.0.6\n        \n            @angular/router : 6.0.6\n        \n            @ng-bootstrap/ng-bootstrap : 2.1.2\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/moment : ^2.13.0\n        \n            angular-calendar : ^0.26.1\n        \n            angular2-cookie-law : ^6.0.4\n        \n            angularfire2 : ^5.0.0-rc.12\n        \n            angularx-flatpickr : ^6.1.0\n        \n            axios : 0.18.0\n        \n            bootstrap : 4.1.1\n        \n            bootstrap-loader : 2.2.0\n        \n            calendar-utils : ^0.2.0\n        \n            core-js : 2.5.7\n        \n            date-fns : ^1.29.0\n        \n            firebase : ^5.4.2\n        \n            json2csv : ^4.2.1\n        \n            md5-typescript : ^1.0.5\n        \n            moment : ^2.22.2\n        \n            ngx-cookie-service : ^1.0.10\n        \n            ngx-toastr : 8.8.0\n        \n            rxjs : ^6.3.2\n        \n            rxjs-tslint : ^0.1.5\n        \n            sweetalert2 : ^7.28.2\n        \n            xlsx : ^0.14.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CustomNotificationDirection   (src/.../CustomNotification.ts)\n                        \n                        \n                            CustomNotificationDuration   (src/.../CustomNotification.ts)\n                        \n                        \n                            CustomNotificationType   (src/.../CustomNotification.ts)\n                        \n                        \n                            ErrorCode   (src/.../ResponseError.ts)\n                        \n                        \n                            FilterableList   (src/.../filters.component.ts)\n                        \n                        \n                            FilterFieldType   (src/.../filters.component.ts)\n                        \n                        \n                            MediaType   (src/.../Media.ts)\n                        \n                        \n                            UserRole   (src/.../session.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/ui/CustomNotification.ts\n    \n        \n            \n                \n                    \n                        \n                        CustomNotificationDirection\n                    \n                \n                        \n                            \n                                 TOP\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                 BOTTOM\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CustomNotificationDuration\n                    \n                \n                        \n                            \n                                 VERY_SLOW\n                            \n                        \n                        \n                            \n                                 SLOW\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                 LONG\n                            \n                        \n                        \n                            \n                                 VERY_LONG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CustomNotificationType\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                 DANGER\n                            \n                        \n            \n        \n\n    src/app/models/ResponseError.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorCode\n                    \n                \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : 405\n                            \n                        \n                        \n                            \n                                 UNPROCESSABLE_ENTITY\n                            \n                        \n                        \n                            \n                                Value : 422\n                            \n                        \n                        \n                            \n                                 GENERIC_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n                        \n                            \n                                 SERVER_TEMPORARY_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : 503\n                            \n                        \n                        \n                            \n                                 NOT_ACTIVATED\n                            \n                        \n                        \n                            \n                                Value : 32\n                            \n                        \n                        \n                            \n                                 NO_INTERNET_CONNECTION\n                            \n                        \n                        \n                            \n                                Value : 999\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n            \n        \n\n    src/app/components/@shared/filters/filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterableList\n                    \n                \n                    \n                        \n                            specify here all type of list that you want to associate to a FilterFieldElement and map it in getFilterList()\n\n                        \n                    \n                        \n                            \n                                 USER_ROLE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FilterFieldType\n                    \n                \n                    \n                        \n                            all supported field types\n\n                        \n                    \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                 SELECT\n                            \n                        \n                        \n                            \n                                 CHECK_LIST\n                            \n                        \n            \n        \n\n    src/app/models/ui/Media.ts\n    \n        \n            \n                \n                    \n                        \n                        MediaType\n                    \n                \n                    \n                        \n                            accepted file types in MediaModalComponent\n\n                        \n                    \n                        \n                            \n                                 IMAGE\n                            \n                        \n                        \n                            \n                                 PDF\n                            \n                        \n            \n        \n\n    src/app/services/session.service.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                    \n                        \n                            here you can edit the user roles in the platform\n\n                        \n                    \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EDITOR\n                            \n                        \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HttpLoaderFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nHttpLoaderFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWinkular\nThis project is a base platform generated with Angular CLI that has the goal of generating a backoffice to menage CRUD of dynamic content.\nGet started\n\nRun nvm use tu use the correct version of npm;\nRun npm run init to initialize the project:\nChoose the server you want to work with (Firestore or Strapi / Http)\nConfigure your server (check Configure server for details)\nRun ng serve to run the server\nEnjoy!\n\nConfigure server\na. Firestore\nIf you want to use Winkular with Firestore you must configure before your project from Firebase.\nOnce created the project open /src/environments/environment.ts an update firebaseConfig with the project info.\nDo the same for /src/environments/environment.prod.ts with info for production environment.\nb. Strapi\n\ninstall strapi globally\nnpm install strapi@alpha -g\nRun the following command line in your terminal:\nstrapi new strapi-winkular\nGo to your project and launch the server:\ncd strapi-winkular\nstrapi start\nCreate your first admin user\n\nOpen strapi-winkular/plugins/user-permissions/models/User.settings.json\n\nReplace the content with the follow:\n\n\n{\n  \"connection\": \"default\",\n  \"info\": {\n    \"name\": \"user\",\n    \"description\": \"\"\n  },\n  \"attributes\": {\n    \"username\": {\n      \"type\": \"string\",\n      \"minLength\": 3,\n      \"unique\": true,\n      \"configurable\": false,\n      \"required\": true\n    },\n    \"email\": {\n      \"type\": \"email\",\n      \"minLength\": 6,\n      \"configurable\": false,\n      \"required\": true\n    },\n    \"password\": {\n      \"type\": \"password\",\n      \"minLength\": 6,\n      \"configurable\": false,\n      \"private\": true\n    },\n    \"confirmed\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"configurable\": false\n    },\n    \"blocked\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"configurable\": false\n    },\n    \"role\": {\n      \"model\": \"role\",\n      \"via\": \"user\",\n      \"plugin\": \"user-permissions\",\n      \"configurable\": false\n    },\n    \"userRole\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"firstName\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"lastName\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"telephone\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"profileImg\": {\n      \"default\": \"\",\n      \"type\": \"string\"\n    },\n    \"dateOfBirth\": {\n      \"default\": \"\",\n      \"type\": \"integer\"\n    },\n    \"registeredAt\": {\n      \"default\": \"\",\n      \"type\": \"integer\"\n    },\n    \"isMale\": {\n      \"default\": false,\n      \"type\": \"boolean\"\n    },\n    \"media\": {\n      \"collection\": \"file\",\n      \"via\": \"related\",\n      \"plugin\": \"upload\"\n    }\n  },\n  \"collectionName\": \"user-permissions_user\"\n}\n\nGo in [http://localhost:1337/admin/plugins/content-manager/user?source=user-permissions] \n\nOpen the detail of the admin, assign at userRole the value ADMIN and save.\n\nNow you can log into Winkular using this user credentials!\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:5000/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|models|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModulesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlatformModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_PipeModule\n\n\n\ncluster_PipeModule_declarations\n\n\n\ncluster_PipeModule_exports\n\n\n\ncluster_PlatformModule\n\n\n\ncluster_PlatformModule_declarations\n\n\n\ncluster_PlatformModule_exports\n\n\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFiltersComponent->ComponentsModule\n\n\n\n\n\nMediaInputComponent\n\nMediaInputComponent\n\nComponentsModule -->\n\nMediaInputComponent->ComponentsModule\n\n\n\n\n\nMediaModalComponent\n\nMediaModalComponent\n\nComponentsModule -->\n\nMediaModalComponent->ComponentsModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nComponentsModule -->\n\nNavbarComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nComponentsModule -->\n\nTableComponent->ComponentsModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nComponentsModule -->\n\nToolbarComponent->ComponentsModule\n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nComponentsModule->FiltersComponent \n\n\n\n\n\nMediaInputComponent \n\nMediaInputComponent \n\nMediaInputComponent  -->\n\nComponentsModule->MediaInputComponent \n\n\n\n\n\nMediaModalComponent \n\nMediaModalComponent \n\nMediaModalComponent  -->\n\nComponentsModule->MediaModalComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nComponentsModule->NavbarComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nComponentsModule->TableComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nComponentsModule->ToolbarComponent \n\n\n\n\n\nBaseComponent\n\nBaseComponent\n\n\n\nModulesModule\n\nModulesModule\n\nModulesModule -->\n\nBaseComponent->ModulesModule\n\n\n\n\n\nBasePageComponent\n\nBasePageComponent\n\nModulesModule -->\n\nBasePageComponent->ModulesModule\n\n\n\n\n\nPlatformLayoutComponent\n\nPlatformLayoutComponent\n\nModulesModule -->\n\nPlatformLayoutComponent->ModulesModule\n\n\n\n\n\nPublicLayoutComponent\n\nPublicLayoutComponent\n\nModulesModule -->\n\nPublicLayoutComponent->ModulesModule\n\n\n\n\n\nBaseComponent \n\nBaseComponent \n\nBaseComponent  -->\n\nModulesModule->BaseComponent \n\n\n\n\n\nBasePageComponent \n\nBasePageComponent \n\nBasePageComponent  -->\n\nModulesModule->BasePageComponent \n\n\n\n\n\nPlatformLayoutComponent \n\nPlatformLayoutComponent \n\nPlatformLayoutComponent  -->\n\nModulesModule->PlatformLayoutComponent \n\n\n\n\n\nPublicLayoutComponent \n\nPublicLayoutComponent \n\nPublicLayoutComponent  -->\n\nModulesModule->PublicLayoutComponent \n\n\n\n\n\nPlatformModule\n\nPlatformModule\n\nPlatformModule -->\n\nModulesModule->PlatformModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nModulesModule->PublicModule\n\n\n\nPagesModule -->\n\nPlatformModule->PagesModule\n\n\n\nPublicModule -->\n\nPlatformModule->PublicModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nPlatformModule->DashboardComponent \n\n\n\n\n\nUserDetailComponent \n\nUserDetailComponent \n\nUserDetailComponent  -->\n\nPlatformModule->UserDetailComponent \n\n\n\n\n\nUserListComponent \n\nUserListComponent \n\nUserListComponent  -->\n\nPlatformModule->UserListComponent \n\n\n\nPagesModule -->\n\nPublicModule->PagesModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nPublicModule->LoginComponent \n\n\n\n\n\nPolicyComponent \n\nPolicyComponent \n\nPolicyComponent  -->\n\nPublicModule->PolicyComponent \n\n\n\n\n\nRecoveryPasswordComponent \n\nRecoveryPasswordComponent \n\nRecoveryPasswordComponent  -->\n\nPublicModule->RecoveryPasswordComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nPublicModule->RegisterComponent \n\n\n\n\n\nResetPasswordComponent \n\nResetPasswordComponent \n\nResetPasswordComponent  -->\n\nPublicModule->ResetPasswordComponent \n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\n\n\nPipeModule\n\nPipeModule\n\nPipeModule -->\n\nKeysPipe->PipeModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nPipeModule -->\n\nOrderByPipe->PipeModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nPipeModule -->\n\nReversePipe->PipeModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nPipeModule -->\n\nSafePipe->PipeModule\n\n\n\n\n\nWherePipe\n\nWherePipe\n\nPipeModule -->\n\nWherePipe->PipeModule\n\n\n\n\n\nKeysPipe \n\nKeysPipe \n\nKeysPipe  -->\n\nPipeModule->KeysPipe \n\n\n\n\n\nOrderByPipe \n\nOrderByPipe \n\nOrderByPipe  -->\n\nPipeModule->OrderByPipe \n\n\n\n\n\nReversePipe \n\nReversePipe \n\nReversePipe  -->\n\nPipeModule->ReversePipe \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nPipeModule->SafePipe \n\n\n\n\n\nWherePipe \n\nWherePipe \n\nWherePipe  -->\n\nPipeModule->WherePipe \n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nPlatformModule -->\n\nDashboardComponent->PlatformModule\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nPlatformModule -->\n\nUserDetailComponent->PlatformModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nPlatformModule -->\n\nUserListComponent->PlatformModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nPublicModule -->\n\nLoginComponent->PublicModule\n\n\n\n\n\nPolicyComponent\n\nPolicyComponent\n\nPublicModule -->\n\nPolicyComponent->PublicModule\n\n\n\n\n\nRecoveryPasswordComponent\n\nRecoveryPasswordComponent\n\nPublicModule -->\n\nRecoveryPasswordComponent->PublicModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nPublicModule -->\n\nRegisterComponent->PublicModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nPublicModule -->\n\nResetPasswordComponent->PublicModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nGoogleAnalyticsEventsService\n\nGoogleAnalyticsEventsService\n\nServicesModule -->\n\nGoogleAnalyticsEventsService->ServicesModule\n\n\n\n\n\nLocalStoreService\n\nLocalStoreService\n\nServicesModule -->\n\nLocalStoreService->ServicesModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nServicesModule -->\n\nMessageService->ServicesModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nServicesModule -->\n\nSessionService->ServicesModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nServicesModule -->\n\nStorageService->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ExportableFormats   (src/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/@shared/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ExportableFormats\n                    \n                \n                \n                    \n                        ExportableFormats:     \"CSV\" | \"XLSX\"\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ga   (src/.../app.component.ts)\n                        \n                        \n                            ga   (src/.../google-analytics-events.service.ts)\n                        \n                        \n                            require   (src/.../table.component.ts)\n                        \n                        \n                            SIDEBAR_ROUTES   (src/.../sidebar-routes.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  BASE_SERVER_URL: 'http://localhost:1337/',\n  BASE_URL: 'http://localhost:5000/',\n  COMPANY_NAME: 'Wink S.r.l.',\n  APP_NAME: 'Winkular',\n  ANALYTICS_UA_ID: '',\n  DEFAULT_LANGUAGE: 'en',\n  CURRENCY: '€',\n  isFirebase: false,\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  BASE_SERVER_URL: 'http://localhost:1337/',\n  BASE_URL: 'http://localhost:5000/',\n  COMPANY_NAME: 'Wink S.r.l.',\n  APP_NAME: 'Winkular',\n  ANALYTICS_UA_ID: '',\n  DEFAULT_LANGUAGE: 'en',\n  CURRENCY: '€',\n  isFirebase: false,\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ga\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ga:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/google-analytics-events.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ga\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ga:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/@shared/table/table.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/sidebar/sidebar-routes.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SIDEBAR_ROUTES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SIDEBAR_ROUTES:     RouteInfo[]\n\n                    \n                \n                    \n                        \n                            Type :     RouteInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {path: '/dashboard', title: 'Dashboard', icon: 'home', autorizedUsers: [UserRole.ADMIN, UserRole.EDITOR, UserRole.CUSTOMER]},\n  {path: '/user-list', title: 'User list', icon: 'people', autorizedUsers: [UserRole.ADMIN]}\n]\n                        \n                    \n\n                \n                    \n                        put here every menu voice that you want to show in your sidebar and navbar (for mobile).\npath {string} the final path\ntitle {string} title to show\nicon {string} associated material icon name (https://material.io/tools/icons/)\nautorizedUsers {UserRole[]} pust here all type of user that can see the voice\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
